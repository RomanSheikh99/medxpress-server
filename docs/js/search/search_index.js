var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.3,1,2.427]],["body/controllers/AppController.html",[0,2.355,1,4.076,2,1.794,3,0.312,4,0.312,5,0.24,6,4.179,7,0.387,8,2.184,9,5.708,10,0.895,11,0.022,12,0.509,13,4.901,14,1.794,15,0.838,16,4.901,17,0.38,18,1.203,19,3.711,20,4.179,21,0.312,22,0.25,23,2.828,24,1.794,25,1.693,26,4.901,27,0.018,28,0.018]],["title/modules/AppModule.html",[29,1.034,30,2.427]],["body/modules/AppModule.html",[1,3.914,2,1.68,3,0.209,4,0.209,5,0.259,11,0.023,17,0.429,18,0.806,19,3.7,20,2.799,21,0.209,22,0.167,27,0.014,28,0.014,29,1.756,30,4.832,31,1.535,32,1.44,33,1.759,34,1.759,35,1.535,36,2.835,37,1.759,38,2.799,39,2.799,40,2.799,41,3.435,42,4.009,43,4.009,44,3.7,45,3.905,46,2.458,47,1.759,48,1.759,49,3.283,50,2.648,51,1.354,52,4.59,53,5.292,54,3.283,55,3.283,56,2.481,57,2.869,58,1.012,59,3.283,60,3.283,61,3.283,62,3.283,63,3.283,64,3.283,65,5.292,66,3.283,67,3.283,68,3.283,69,3.283,70,3.283,71,1.202,72,3.283,73,2.799,74,2.799,75,2.481,76,3.283,77,3.283,78,3.913,79,2.799,80,3.998,81,5.292,82,3.913,83,1.275,84,2.052,85,2.052,86,2.481,87,1.759,88,2.799,89,3.283,90,3.283]],["title/injectables/AppService.html",[19,2.05,91,1.159]],["body/injectables/AppService.html",[3,0.327,4,0.327,5,0.252,7,0.406,8,2.247,9,5.799,11,0.022,12,0.533,14,1.881,15,0.862,17,0.327,18,1.261,19,3.542,21,0.327,22,0.262,25,1.775,27,0.019,28,0.019,91,2.002,92,2.567,93,4.381,94,5.138,95,5.138,96,5.138]],["title/controllers/AuthController.html",[0,1.3,97,2.427]],["body/controllers/AuthController.html",[0,1.239,2,0.796,3,0.138,4,0.138,5,0.107,7,0.172,8,1.239,10,1.06,11,0.022,12,0.603,14,2.309,15,0.755,17,0.369,18,0.534,21,0.138,22,0.111,23,1.255,25,2.005,27,0.01,28,0.01,29,0.633,51,2.459,79,1.854,80,1.643,87,1.165,97,2.837,98,1.854,99,1.359,100,1.854,101,2.217,102,3.542,103,2.885,104,3.997,105,2.885,106,3.673,107,3.542,108,3.542,109,4.586,110,2.175,111,3.835,112,3.384,113,2.462,114,2.175,115,2.18,116,1.227,117,0.632,118,1.939,119,2.714,120,3.384,121,3.175,122,2.891,123,4.073,124,3.384,125,2.885,126,1.854,127,3.384,128,2.175,129,2.674,130,3.054,131,2.225,132,2.885,133,3.384,134,2.175,135,1.854,136,3.384,137,2.175,138,1.854,139,3.441,140,4.688,141,2.175,142,2.342,143,3.202,144,3.997,145,3.997,146,3.542,147,1.854,148,3.362,149,3.384,150,1.859,151,2.175,152,1.854,153,2.93,154,2.175,155,1.854,156,3.51,157,3.384,158,2.175,159,3.362,160,1.854,161,1.854,162,1.165,163,2.374,164,1.255,165,2.225,166,1.854,167,1.854,168,1.854,169,1.485,170,2.175,171,2.175,172,1.485,173,1.086,174,1.854,175,2.175,176,3.542,177,2.175,178,2.175,179,2.175,180,1.016,181,1.043,182,1.395,183,2.175,184,1.822,185,1.521,186,2.175,187,1.165,188,1.016,189,1.016,190,2.175,191,1.359,192,1.643,193,4.154,194,2.175,195,2.175,196,1.854,197,1.854,198,1.643,199,2.175,200,1.643,201,2.175,202,2.175,203,1.854,204,2.175,205,2.175]],["title/modules/AuthModule.html",[29,1.034,41,1.903]],["body/modules/AuthModule.html",[2,1.766,3,0.225,4,0.225,5,0.173,11,0.023,17,0.439,18,0.866,21,0.225,22,0.18,25,1.219,27,0.015,28,0.015,29,1.72,31,1.649,32,1.547,33,1.89,34,1.89,35,1.649,36,2.944,37,2.944,41,3.659,46,2.584,47,1.89,48,1.89,50,2.036,56,2.666,57,2.206,58,1.087,75,2.666,97,3.755,100,3.008,116,1.055,130,1.649,143,2.41,150,1.291,165,3.724,166,3.008,169,2.41,172,2.41,206,3.008,207,3.008,208,3.008,209,4.346,210,3.528,211,3.528,212,5.497,213,3.528,214,2.666,215,4.824,216,2.41,217,3.295,218,3.528,219,3.295,220,3.528,221,3.528,222,3.008,223,3.528,224,3.528,225,2.41,226,3.528,227,5.497,228,4.113,229,3.528,230,3.528,231,3.528,232,3.528,233,3.528,234,3.528,235,3.528,236,3.528,237,3.528,238,3.528,239,1.762,240,3.528,241,2.41,242,3.528,243,2.255,244,3.528]],["title/injectables/AuthService.html",[91,1.159,165,1.903]],["body/injectables/AuthService.html",[3,0.097,4,0.097,5,0.075,7,0.121,8,0.93,11,0.023,12,0.548,14,2.093,15,0.742,17,0.347,18,0.374,21,0.097,22,0.078,25,2.014,27,0.008,28,0.008,51,2.096,58,0.47,71,0.558,91,0.829,92,0.762,101,2.694,102,2.167,103,2.167,104,3.251,105,2.167,106,3.125,107,2.786,108,2.786,109,3.901,113,2.912,115,1.974,116,1.111,117,0.572,118,1.756,119,2.138,121,2.383,122,2.675,123,3.125,125,2.167,126,2.167,129,2.557,130,2.994,131,1.75,132,2.167,135,2.167,138,1.3,139,3.421,142,1.904,143,2.604,144,3.901,145,3.251,146,2.881,147,1.3,148,3.033,150,1.932,152,1.3,155,1.3,156,3.178,160,1.3,162,0.817,163,1.782,165,1.361,167,1.3,168,1.3,169,1.042,172,1.042,173,0.762,174,1.3,176,2.469,180,1.528,181,2.046,182,2.404,184,2.388,185,1.994,187,2.042,188,1.528,189,1.528,192,3.201,196,2.167,197,3.251,198,2.469,214,1.152,225,1.736,239,0.762,245,1.3,246,1.466,247,1.3,248,2.799,249,2.786,250,4.852,251,1.525,252,2.167,253,2.542,254,1.525,255,2.542,256,2.542,257,1.525,258,2.167,259,1.525,260,1.525,261,1.525,262,1.525,263,1.525,264,1.525,265,1.3,266,0.953,267,2.167,268,1.3,269,1.885,270,1.3,271,2.648,272,2.648,273,2.995,274,2.648,275,1.92,276,2.648,277,2.648,278,1.042,279,2.542,280,3.813,281,3.268,282,2.232,283,1.525,284,1.3,285,4.236,286,2.542,287,2.167,288,1.525,289,5.446,290,4.236,291,2.542,292,5.446,293,4.236,294,2.542,295,1.92,296,3.813,297,3.813,298,2.542,299,1.525,300,2.542,301,2.167,302,1.525,303,1.525,304,1.525,305,1.525,306,1.042,307,1.152,308,2.469,309,1.525,310,2.542,311,1.525,312,1.525,313,0.629,314,1.525,315,1.525,316,0.88,317,2.542,318,1.3,319,1.525,320,1.525,321,2.469,322,1.525,323,1.525,324,1.525,325,1.525,326,1.525,327,1.525]],["title/classes/CartItemDto.html",[22,0.181,328,2.427]],["body/classes/CartItemDto.html",[3,0.247,4,0.247,5,0.19,7,0.306,10,1.241,11,0.022,12,0.706,15,0.922,17,0.247,21,0.247,22,0.262,27,0.016,28,0.016,116,1.26,117,0.765,328,3.509,329,0.951,330,5.869,331,1.699,332,1.123,333,4.355,334,4.355,335,3.326,336,3.326,337,3.088,338,4.355,339,4.355,340,3.937,341,3.303,342,2.142,343,5.446,344,3.303,345,2.927,346,2.927,347,3.303,348,2.646,349,3.303,350,3.303,351,2.838,352,3.069,353,2.247,354,1.264]],["title/classes/CheckEmailDto.html",[22,0.181,111,2.427]],["body/classes/CheckEmailDto.html",[3,0.311,4,0.311,5,0.24,7,0.386,10,0.892,11,0.022,12,0.507,15,0.837,17,0.311,21,0.311,22,0.304,24,2.352,27,0.018,28,0.018,111,4.068,113,3.007,117,0.55,329,1.2,332,1.302,351,2.456,354,1.594,355,5.079,356,4.167,357,3.055,358,3.724,359,3.436,360,3.724,361,3.724,362,4.887,363,3.724]],["title/controllers/CheckoutController.html",[0,1.3,364,2.427]],["body/controllers/CheckoutController.html",[0,1.898,2,1.438,3,0.25,4,0.25,5,0.193,7,0.31,8,1.898,10,0.717,11,0.022,12,0.408,14,1.898,17,0.393,18,0.964,21,0.25,22,0.2,23,2.266,24,1.438,25,1.357,27,0.016,28,0.016,29,1.144,51,2.393,85,4.264,86,4.385,87,2.104,99,2.455,101,2.393,115,1.525,116,0.859,117,0.442,118,1.357,119,2.713,122,2.545,123,3.541,142,2.59,159,3.241,163,1.836,164,3.348,181,1.21,182,1.619,364,3.964,365,3.349,366,3.349,367,3.936,368,3.928,369,4.385,370,5.471,371,2.814,372,2.991,373,3.349,374,3.348,375,3.349,376,3.928,377,3.928,378,3.349,379,3.928,380,2.104,381,3.349,382,3.928]],["title/classes/CheckoutDto.html",[22,0.181,367,2.05]],["body/classes/CheckoutDto.html",[3,0.244,4,0.244,5,0.188,7,0.303,10,1.162,11,0.022,12,0.661,15,0.939,17,0.325,21,0.325,22,0.312,27,0.015,28,0.015,71,1.405,116,0.839,117,0.752,329,0.942,331,1.684,332,1.116,333,2.901,334,2.901,335,2.215,336,2.215,337,2.056,338,2.901,339,2.901,340,2.622,342,2.117,343,4.354,351,2.522,352,3.173,353,2.446,354,1.252,367,2.946,380,3.074,383,4.948,384,3.587,385,4.336,386,4.336,387,2.866,388,3.839,389,3.839,390,3.839,391,3.824,392,3.839,393,3.273,394,3.839,395,3.839,396,3.192,397,3.273,398,3.858,399,2.622,400,5.215,401,3.273,402,2.901]],["title/classes/CheckoutItem.html",[22,0.181,391,2.221]],["body/classes/CheckoutItem.html",[3,0.228,4,0.228,5,0.176,7,0.283,10,1.219,11,0.022,12,0.693,15,0.938,17,0.31,21,0.31,22,0.303,27,0.015,28,0.015,71,1.311,116,1.211,117,0.771,329,0.879,331,1.57,332,1.065,333,4.185,334,4.185,335,3.196,336,3.196,337,2.967,338,4.185,339,4.185,342,2.147,351,2.451,352,3.123,353,2.48,354,1.168,367,2.066,380,1.918,383,5.118,384,2.238,385,2.705,386,2.705,387,1.788,391,3.717,396,3.046,397,3.053,398,3.681,399,2.445,400,5.069,401,3.053,402,2.705,403,3.58,404,5.946,405,3.58,406,3.58,407,3.053,408,2.705,409,3.58,410,3.58,411,3.58,412,3.58]],["title/modules/CheckoutModule.html",[29,1.034,42,2.221]],["body/modules/CheckoutModule.html",[2,2.044,3,0.28,4,0.28,5,0.216,11,0.022,17,0.423,18,1.082,21,0.28,22,0.225,27,0.017,28,0.017,29,1.877,31,2.059,32,1.932,33,2.36,34,2.36,35,2.059,36,3.284,37,2.36,41,3.641,42,4.442,44,3.921,46,2.991,47,2.36,48,2.36,50,3.222,85,2.754,364,4.188,374,3.921,375,3.757,413,3.757,414,4.406,415,3.757,416,4.406,417,4.406,418,4.406,419,3.757]],["title/injectables/CheckoutService.html",[91,1.159,374,2.05]],["body/injectables/CheckoutService.html",[3,0.137,4,0.137,5,0.105,7,0.17,8,1.226,11,0.023,12,0.555,14,1.848,15,0.471,17,0.356,18,0.527,21,0.137,22,0.109,25,1.608,27,0.01,28,0.01,51,1.919,85,3.714,86,4.042,91,1.093,92,1.073,101,2.206,115,1.807,116,1.104,117,0.602,118,1.608,119,2.36,122,2.346,123,2.289,131,1.15,142,1.674,150,2.301,163,1.566,165,2.993,180,1.004,181,2.071,182,1.919,184,0.942,185,0.786,188,1.004,189,2.176,198,1.622,200,3.113,203,1.831,246,1.933,258,2.857,269,3.571,278,1.467,295,1.622,307,1.622,318,1.831,332,0.733,337,1.15,342,1.872,366,1.831,367,3.721,369,4.222,370,5.18,371,2.214,372,1.933,373,1.831,374,1.933,378,1.831,380,1.795,381,3.513,384,1.342,385,1.622,386,1.622,387,1.073,391,2.095,420,1.831,421,4.121,422,4.121,423,3.351,424,4.121,425,2.147,426,2.866,427,3.351,428,2.147,429,3.351,430,2.147,431,4.305,432,2.147,433,5.35,434,5.35,435,2.147,436,2.857,437,2.532,438,3.351,439,3.351,440,2.147,441,2.147,442,2.147,443,2.147,444,1.622,445,2.147,446,2.147,447,2.147,448,2.147,449,2.147,450,3.351,451,3.351,452,3.351,453,2.147,454,4.042,455,2.147,456,2.147,457,2.147,458,2.147,459,2.147,460,2.147,461,2.147,462,1.342,463,1.467,464,2.147,465,2.147,466,2.147,467,2.147,468,2.147,469,2.147,470,2.147,471,2.147,472,2.147,473,2.147,474,3.351,475,2.147,476,2.147,477,2.147,478,2.147,479,2.147,480,2.147,481,2.147,482,2.147,483,2.147,484,2.147,485,2.147,486,2.147,487,2.147,488,2.147,489,3.351,490,3.351,491,3.351,492,2.147,493,2.147,494,3.351,495,2.147,496,2.147,497,2.147,498,2.147,499,2.147,500,3.351,501,5.049,502,2.147,503,2.147,504,3.351,505,3.351,506,2.147,507,2.147,508,4.656,509,2.147,510,2.147,511,2.147,512,2.147]],["title/classes/CreateMedicineDto.html",[22,0.181,513,2.221]],["body/classes/CreateMedicineDto.html",[3,0.246,4,0.246,5,0.189,7,0.305,10,1.241,11,0.022,12,0.705,15,1.001,17,0.246,21,0.246,22,0.262,27,0.015,28,0.015,83,2.671,116,1.259,117,0.788,329,0.949,331,1.695,332,1.122,335,3.322,336,3.322,342,1.581,345,2.92,348,2.64,352,2.691,353,2.596,354,1.261,396,3.599,408,2.92,513,3.207,514,5.867,515,3.933,516,4.35,517,4.35,518,4.35,519,3.865,520,3.865,521,3.865,522,3.865,523,3.865]],["title/classes/CreateOrderDto.html",[22,0.181,524,2.221]],["body/classes/CreateOrderDto.html",[3,0.254,4,0.254,5,0.196,7,0.316,10,1.134,11,0.022,12,0.669,15,0.962,17,0.372,21,0.333,22,0.298,27,0.016,28,0.016,71,1.461,117,0.759,118,1.81,119,1.866,328,4.243,329,0.98,332,1.146,340,3.996,351,2.66,353,2.274,354,1.302,380,3.134,384,3.657,387,2.922,393,3.404,396,3.276,398,3.959,399,2.727,402,3.016,454,4.42,462,3.883,463,3.579,524,3.276,525,5.002,526,3.016,527,3.992,528,3.992,529,3.992,530,3.992,531,3.992,532,3.992,533,3.992,534,2.727,535,4.468,536,3.959]],["title/classes/CreateShopDto.html",[22,0.181,148,2.221]],["body/classes/CreateShopDto.html",[3,0.226,4,0.226,5,0.174,7,0.281,10,1.218,11,0.022,12,0.692,15,0.978,17,0.226,21,0.226,22,0.247,24,2.664,27,0.015,28,0.015,113,2.722,117,0.751,148,3.033,271,3.451,272,3.451,273,2.957,274,3.451,276,3.451,277,3.451,308,4.171,329,0.873,332,1.061,342,1.827,351,2.789,352,2.581,353,2.344,354,1.16,357,2.224,358,3.033,359,2.799,360,3.033,361,3.033,363,3.033,537,5.768,538,3.034,539,4.48,540,3.558,541,3.558,542,3.558,543,3.558,544,3.666,545,3.558,546,3.558,547,2.43,548,3.558,549,3.558,550,2.43,551,2.43]],["title/classes/CreateStockDto.html",[22,0.181,552,2.221]],["body/classes/CreateStockDto.html",[3,0.297,4,0.297,5,0.229,7,0.369,10,1.149,11,0.022,12,0.654,15,0.925,17,0.297,21,0.297,22,0.295,27,0.018,28,0.018,117,0.709,329,1.147,332,1.267,337,3.373,342,1.785,351,2.715,352,2.708,353,2.305,354,1.524,539,4.378,544,3.53,552,3.622,553,5.614,554,3.53,555,3.937,556,3.937,557,4.673,558,4.673,559,4.673]],["title/injectables/JwtStrategy.html",[91,1.159,209,2.221]],["body/injectables/JwtStrategy.html",[3,0.241,4,0.241,5,0.186,7,0.299,8,1.853,11,0.022,12,0.525,14,1.386,17,0.424,18,0.93,21,0.241,22,0.193,24,1.853,25,1.748,27,0.015,28,0.015,58,1.167,91,1.651,92,1.892,101,2.35,106,2.587,115,1.965,116,1.107,117,0.569,118,1.748,129,1.661,130,2.963,143,2.587,150,1.386,169,2.587,172,2.587,181,1.756,182,2.087,184,1.661,185,1.386,209,3.164,216,2.587,222,3.23,225,2.587,239,1.892,246,2.92,247,3.23,248,3.843,249,4.86,252,4.315,265,4.315,266,2.368,268,3.23,269,2.92,270,3.23,359,2.185,560,3.23,561,4.315,562,5.061,563,5.061,564,3.788,565,5.061,566,3.788,567,5.061,568,3.788,569,3.788,570,3.788,571,3.23,572,3.788,573,3.788,574,3.788,575,3.788,576,3.788,577,3.788,578,6.084,579,3.788,580,3.788]],["title/classes/LoginDto.html",[22,0.181,139,2.05]],["body/classes/LoginDto.html",[3,0.276,4,0.276,5,0.213,7,0.343,10,1.009,11,0.022,12,0.574,15,0.951,17,0.276,21,0.352,22,0.31,24,2.549,27,0.017,28,0.017,113,3.017,117,0.622,139,3.191,153,2.712,273,3.434,329,1.065,331,1.903,332,1.209,346,3.278,351,2.73,353,2.228,354,1.415,357,2.712,358,3.806,359,3.512,360,3.806,361,3.806,363,3.806,547,2.963,550,2.963,551,3.777,581,4.599,582,3.699]],["title/classes/Medicine.html",[22,0.181,83,1.379]],["body/classes/Medicine.html",[3,0.248,4,0.248,5,0.191,7,0.308,10,1.243,11,0.022,12,0.707,15,1.002,17,0.328,21,0.328,22,0.198,27,0.016,28,0.016,58,1.199,71,1.424,83,2.001,116,1.263,117,0.789,181,1.199,239,1.944,243,2.409,329,0.955,332,1.127,335,3.333,336,3.333,342,1.588,515,3.946,516,4.365,517,4.365,518,4.365,561,3.318,583,2.94,584,4.48,585,3.892,586,3.892,587,3.892,588,3.892,589,3.892,590,3.892,591,3.892,592,3.892,593,3.892,594,2.433,595,5.153,596,2.433,597,3.892,598,2.658,599,3.318]],["title/controllers/MedicineController.html",[0,1.3,600,2.427]],["body/controllers/MedicineController.html",[0,1.324,2,0.868,3,0.151,4,0.151,5,0.116,7,0.187,8,1.324,10,0.964,11,0.022,12,0.548,14,2.285,15,0.904,17,0.354,18,0.582,21,0.151,22,0.121,23,1.368,24,0.868,25,1.825,27,0.011,28,0.011,29,0.691,51,2.617,83,2.719,87,1.27,99,1.483,101,1.808,115,2.318,116,1.155,117,0.595,118,1.825,119,2.603,122,2.54,129,2.958,142,2.451,159,2.262,161,2.022,162,1.938,163,2.707,164,2.087,173,1.185,180,1.109,181,0.731,182,0.978,184,1.924,185,2.038,188,1.109,189,2.294,191,2.262,216,1.62,278,1.62,313,0.978,316,2.087,372,3.445,513,3.733,600,2.996,601,2.022,602,4.623,603,3.085,604,3.085,605,3.085,606,3.085,607,3.74,608,2.022,609,2.372,610,2.372,611,3.352,612,2.471,613,2.471,614,2.022,615,2.372,616,2.372,617,2.629,618,2.471,619,2.022,620,2.372,621,2.372,622,3.74,623,4.208,624,3.085,625,2.471,626,3.74,627,2.022,628,2.372,629,2.372,630,2.471,631,2.022,632,3.902,633,2.372,634,2.372,635,2.349,636,3.068,637,1.62,638,2.262,639,2.372,640,2.531,641,2.022,642,1.62,643,1.792,644,2.372,645,2.372,646,2.372,647,5.284,648,2.372,649,2.372,650,3.618,651,2.372,652,2.372,653,2.372,654,2.022,655,2.742,656,2.372,657,2.372,658,2.372,659,2.372,660,2.372,661,2.372,662,2.372,663,2.372,664,2.372,665,2.372,666,2.372]],["title/modules/MedicineModule.html",[29,1.034,43,2.221]],["body/modules/MedicineModule.html",[2,2.034,3,0.278,4,0.278,5,0.214,11,0.022,17,0.432,18,1.073,21,0.278,22,0.223,27,0.017,28,0.017,29,1.779,31,2.044,32,1.917,33,2.342,34,2.342,35,2.044,36,3.272,37,2.342,41,3.633,43,4.361,46,2.977,47,2.342,48,2.342,50,3.206,57,2.733,58,1.347,83,1.697,116,0.956,241,2.986,243,2.044,419,3.728,598,3.796,600,4.173,640,3.913,641,3.728,643,3.303,667,3.728,668,4.372,669,3.728,670,4.372,671,4.372,672,4.372]],["title/injectables/MedicineService.html",[91,1.159,640,2.05]],["body/injectables/MedicineService.html",[3,0.126,4,0.126,5,0.097,7,0.157,8,1.152,11,0.023,12,0.562,14,2.256,15,0.866,17,0.329,18,0.487,21,0.126,22,0.101,24,0.725,25,1.786,27,0.01,28,0.01,51,2.497,58,0.611,71,0.725,83,2.687,91,1.026,92,0.99,101,2.714,115,2.351,116,1.185,117,0.582,118,1.786,119,2.417,122,2.887,129,2.839,131,1.685,142,2.225,162,1.062,163,2.417,173,0.99,180,0.926,181,1.866,182,1.836,184,2.131,185,2.172,187,2.386,188,0.926,189,0.926,191,1.967,192,1.497,239,0.99,246,1.815,248,2.57,266,1.239,269,1.143,278,2.149,282,1.354,287,1.69,313,0.817,316,1.815,342,0.611,372,3.244,513,3.515,515,1.354,602,4.484,603,3.336,604,2.683,605,2.683,606,2.683,607,3.336,608,1.69,611,3.042,612,2.149,613,2.149,614,2.683,617,2.095,618,2.149,619,2.683,622,3.336,623,4.095,624,2.683,625,2.149,626,3.336,627,2.683,630,2.149,631,1.69,632,3.71,635,2.095,636,2.784,638,1.239,640,1.815,642,1.354,643,1.497,655,2.446,673,1.69,674,4.454,675,1.982,676,1.982,677,3.146,678,1.982,679,3.912,680,3.912,681,1.982,682,1.982,683,1.982,684,1.982,685,1.982,686,1.982,687,1.982,688,1.982,689,1.982,690,3.912,691,3.912,692,3.532,693,3.146,694,1.982,695,1.982,696,1.69,697,1.982,698,3.146,699,1.982,700,2.683,701,3.146,702,1.982,703,1.982,704,1.982,705,3.146,706,1.982,707,1.982,708,1.982,709,1.982,710,1.982,711,1.982,712,1.982,713,1.982,714,1.982,715,3.912,716,3.912,717,1.982,718,3.912,719,1.982,720,1.982]],["title/classes/Order.html",[22,0.181,371,1.558]],["body/classes/Order.html",[3,0.263,4,0.263,5,0.203,7,0.327,10,1.191,11,0.022,12,0.677,15,0.969,17,0.263,21,0.379,22,0.211,27,0.016,28,0.016,58,1.275,71,1.515,117,0.734,181,1.275,243,2.507,313,1.706,329,1.016,332,1.173,371,2.353,380,3.188,384,3.721,387,2.973,454,4.497,462,3.937,463,3.664,534,3.664,536,4.053,584,4.427,594,2.587,596,2.587,721,2.826,722,4.138,723,4.138,724,4.138,725,4.138,726,4.138,727,3.528,728,3.528,729,4.574,730,4.574,731,2.826,732,3.528]],["title/controllers/OrdersController.html",[0,1.3,733,2.427]],["body/controllers/OrdersController.html",[0,1.219,2,0.78,3,0.136,4,0.136,5,0.104,7,0.168,8,1.219,10,0.973,11,0.022,12,0.553,14,2.261,15,0.914,17,0.295,18,0.523,21,0.136,22,0.109,23,1.229,24,0.78,25,1.842,27,0.01,28,0.01,29,0.62,51,2.499,84,3.483,87,1.141,99,1.332,101,2.75,115,1.953,116,1.1,117,0.566,118,1.738,119,2.167,122,2.903,129,2.599,130,0.996,131,1.141,142,2.316,159,2.082,162,1.141,163,2.493,164,2.366,173,1.064,180,2.493,181,1.264,182,2.199,184,2.599,185,2.297,187,2.483,188,2.493,189,2.493,191,2.082,306,2.275,313,1.373,316,1.922,371,3.114,372,3.327,387,1.664,426,2.197,524,3.923,611,3.167,612,2.275,613,2.275,617,2.695,618,2.275,625,2.275,630,2.275,635,2.483,636,2.898,637,1.456,638,1.332,655,2.563,733,2.801,734,1.817,735,2.84,736,2.84,737,2.84,738,3.953,739,2.84,740,3.496,741,1.817,742,2.131,743,1.817,744,3.331,745,2.131,746,5.168,747,1.817,748,3.331,749,2.131,750,2.131,751,1.817,752,3.331,753,2.131,754,1.817,755,4.289,756,3.331,757,2.131,758,1.817,759,1.61,760,1.61,761,2.131,762,2.131,763,2.131,764,3.098,765,2.131,766,2.275,767,2.131,768,2.131,769,4.637,770,2.131,771,2.131,772,2.131,773,2.131,774,2.131,775,2.131]],["title/modules/OrdersModule.html",[29,1.034,44,2.05]],["body/modules/OrdersModule.html",[2,1.864,3,0.243,4,0.243,5,0.187,11,0.023,17,0.416,18,0.938,21,0.243,22,0.195,27,0.015,28,0.015,29,1.851,31,2.38,32,1.676,33,2.047,34,2.047,35,1.786,36,3.067,37,3.067,44,3.912,46,2.727,47,2.047,48,2.047,50,2.205,51,1.576,57,3.183,58,1.178,78,3.259,80,3.847,82,4.341,84,3.183,87,2.047,88,3.259,116,1.113,241,2.61,243,2.676,248,2.205,371,2.678,426,3.813,731,3.478,733,4.17,758,3.259,760,2.888,776,3.259,777,3.259,778,3.259,779,3.822,780,3.822,781,1.786,782,3.183,783,3.259,784,3.822,785,3.822,786,3.259,787,3.822,788,3.822]],["title/injectables/OrdersService.html",[91,1.159,426,1.903]],["body/injectables/OrdersService.html",[3,0.133,4,0.133,5,0.103,7,0.165,8,1.202,11,0.022,12,0.574,14,2.287,15,0.919,17,0.337,18,0.513,21,0.133,22,0.107,24,1.202,25,1.828,27,0.01,28,0.01,51,2.534,58,0.645,71,0.766,84,3.769,91,1.071,92,1.045,101,2.741,115,2.054,116,1.157,117,0.595,118,1.828,119,2.145,122,2.915,129,2.74,130,2.586,131,1.12,142,2.293,163,2.473,173,1.045,180,2.473,181,1.012,182,0.862,184,2.321,185,2.25,187,1.12,188,2.473,189,2.473,191,2.869,239,1.045,246,1.894,248,3.192,266,1.308,269,1.894,282,2.242,284,3.455,313,1.353,316,1.894,371,3.064,372,3.306,387,2.024,426,1.758,524,3.842,611,3.135,612,2.242,613,2.242,617,2.458,618,2.242,625,3.135,630,2.242,635,2.458,636,2.869,655,2.869,700,1.783,735,2.799,736,2.799,737,2.799,738,3.913,739,2.799,740,3.455,741,2.799,743,2.799,746,4.718,747,2.799,751,2.799,754,1.783,755,4.252,759,1.58,760,1.58,766,2.242,781,0.978,783,1.783,789,1.783,790,2.092,791,3.455,792,2.092,793,3.283,794,2.092,795,2.092,796,2.092,797,2.092,798,2.092,799,3.283,800,4.052,801,4.052,802,4.052,803,2.092,804,2.092,805,2.092,806,2.092,807,2.092,808,3.283,809,2.092,810,4.987,811,2.092,812,2.092,813,2.092,814,2.092,815,2.092,816,2.092,817,2.092,818,2.092,819,2.092]],["title/classes/Shop.html",[22,0.181,150,1.3]],["body/classes/Shop.html",[3,0.248,4,0.248,5,0.191,7,0.308,10,1.243,11,0.022,12,0.707,15,0.992,17,0.248,21,0.328,22,0.198,27,0.016,28,0.016,58,1.199,71,1.886,113,2.697,117,0.766,121,2.433,150,1.886,181,1.199,219,2.658,243,2.409,271,3.612,272,3.612,273,3.095,274,3.612,276,3.612,277,3.612,308,4.365,329,0.955,332,1.127,342,1.895,584,4.497,594,2.433,596,2.433,820,2.94,821,3.892,822,3.318,823,3.318,824,3.892,825,3.892,826,3.892,827,3.892,828,3.892,829,3.892,830,3.892,831,3.318,832,3.318,833,3.318]],["title/classes/ShopLoginDto.html",[22,0.181,153,2.221]],["body/classes/ShopLoginDto.html",[3,0.276,4,0.276,5,0.213,7,0.343,10,1.009,11,0.022,12,0.574,15,0.951,17,0.276,21,0.352,22,0.31,24,2.549,27,0.017,28,0.017,113,3.017,117,0.622,139,2.503,153,3.457,273,3.434,329,1.065,331,1.903,332,1.209,348,2.963,351,2.73,353,2.228,354,1.415,357,2.712,358,3.806,359,3.512,360,3.806,361,3.806,363,3.806,547,2.963,550,2.963,551,3.777,581,4.599,834,4.339]],["title/classes/SignUpDto.html",[22,0.181,156,2.221]],["body/classes/SignUpDto.html",[3,0.22,4,0.22,5,0.169,7,0.273,10,1.209,11,0.022,12,0.688,15,0.956,17,0.22,21,0.303,22,0.243,24,2.657,27,0.014,28,0.014,113,2.694,117,0.746,150,1.741,156,2.974,271,3.4,272,3.4,273,2.913,274,3.4,275,4.109,276,3.4,277,3.4,329,0.849,331,1.516,332,1.04,342,1.805,351,2.772,352,2.542,353,2.324,354,1.127,357,2.161,358,2.974,359,2.744,360,2.974,361,2.974,363,2.974,407,2.947,408,2.612,534,2.361,539,4.426,544,3.594,547,2.361,550,2.361,551,2.361,582,2.947,835,5.08,836,3.457,837,3.457,838,3.457,839,3.457,840,4.637,841,3.457,842,3.594,843,3.249]],["title/classes/Stock.html",[22,0.181,781,1.661]],["body/classes/Stock.html",[3,0.297,4,0.297,5,0.228,7,0.368,10,1.148,11,0.022,12,0.653,15,0.924,17,0.297,21,0.368,22,0.238,27,0.017,28,0.017,58,1.436,71,1.706,117,0.708,181,1.436,243,2.704,329,1.144,332,1.265,337,3.369,342,1.782,555,3.932,556,3.932,584,4.369,594,2.913,596,2.913,781,2.704,782,2.913,844,3.521,845,4.66,846,4.66,847,4.66,848,3.973]],["title/controllers/StocksController.html",[0,1.3,849,2.427]],["body/controllers/StocksController.html",[0,0.817,2,0.817,3,0.142,4,0.142,5,0.109,7,0.176,8,1.264,10,1.069,11,0.023,12,0.608,14,2.143,15,0.96,17,0.327,18,0.548,21,0.142,22,0.114,23,1.288,24,0.817,25,2.023,27,0.01,28,0.01,83,1.34,99,1.395,101,2.856,115,2.2,116,1.239,117,0.638,118,1.958,122,2.905,129,1.514,150,1.546,159,2.158,162,1.849,163,1.043,164,2.436,173,1.115,180,2.737,181,1.301,182,2.414,184,2.741,185,2.288,187,2.546,188,2.737,189,2.737,306,2.884,313,0.92,552,3.398,555,2.64,556,3.398,617,1.849,623,1.686,635,1.195,637,1.524,638,1.395,642,1.524,692,2.358,764,3.191,766,2.358,781,3.005,849,2.358,850,1.903,851,3.884,852,2.944,853,2.944,854,4.053,855,3.601,856,2.944,857,3.601,858,3.601,859,3.601,860,1.903,861,2.232,862,1.903,863,3.453,864,2.232,865,4.833,866,2.232,867,1.903,868,3.453,869,2.232,870,1.903,871,3.453,872,2.232,873,1.903,874,4.753,875,2.232,876,2.944,877,1.903,878,2.232,879,1.903,880,3.661,881,3.453,882,2.232,883,2.436,884,1.903,885,2.944,886,1.686,887,2.232,888,2.232,889,2.232,890,2.232,891,2.232,892,2.232,893,2.232,894,2.232,895,4.053,896,2.232,897,2.232,898,2.232,899,2.232,900,2.232,901,2.232,902,2.232,903,2.232,904,2.232,905,1.903]],["title/modules/StocksModule.html",[29,1.034,45,2.221]],["body/modules/StocksModule.html",[2,2.092,3,0.291,4,0.291,5,0.224,11,0.022,17,0.428,18,1.122,21,0.291,22,0.233,27,0.017,28,0.017,29,1.816,31,2.137,32,2.005,33,2.449,34,2.449,35,2.137,36,3.34,37,2.449,45,4.289,46,3.062,47,2.449,48,2.449,50,2.638,57,2.858,58,1.409,116,1,241,3.123,243,2.137,781,2.137,782,3.573,786,3.898,849,4.26,883,3.958,884,3.898,886,3.454,906,3.898,907,3.898,908,4.572,909,4.572]],["title/injectables/StocksService.html",[91,1.159,883,2.05]],["body/injectables/StocksService.html",[3,0.146,4,0.146,5,0.113,7,0.182,8,1.294,11,0.023,12,0.629,14,2.165,15,0.965,17,0.35,18,0.565,21,0.146,22,0.117,25,2.043,27,0.011,28,0.011,58,0.709,71,0.842,83,1.373,91,1.153,92,1.149,101,2.867,115,2.296,116,1.293,117,0.665,118,2.043,122,2.921,129,1.55,150,0.842,162,1.894,173,1.149,180,2.764,181,1.606,182,1.992,184,2.763,185,2.369,187,2.587,188,2.764,189,2.764,239,1.149,246,1.328,248,2.787,266,1.439,269,1.328,282,3.3,306,2.94,313,0.949,552,3.259,555,2.691,556,3.44,617,1.233,635,1.233,638,1.439,642,1.572,692,2.415,764,3.253,766,2.415,781,3.025,791,3.014,851,3.65,852,3.014,853,3.014,854,4.119,855,3.014,856,3.014,857,3.014,858,3.671,859,3.671,860,3.014,862,3.014,865,4.119,867,3.014,870,3.014,873,3.014,876,3.014,877,1.962,879,1.962,880,3.697,883,2.04,885,3.014,886,1.739,895,4.119,905,1.962,910,1.962,911,2.301,912,2.301,913,2.301,914,2.301,915,2.301,916,2.301,917,2.301,918,2.301,919,2.301,920,2.301,921,2.301,922,2.301,923,2.301,924,3.535,925,2.301,926,2.301,927,2.301,928,4.305,929,2.301,930,2.301,931,2.301]],["title/classes/UpdateMedicineDto.html",[22,0.181,632,2.221]],["body/classes/UpdateMedicineDto.html",[3,0.237,4,0.237,5,0.182,7,0.294,10,1.23,11,0.022,12,0.7,15,0.996,17,0.237,21,0.237,22,0.255,27,0.015,28,0.015,83,2.651,116,1.235,117,0.783,329,0.914,331,1.632,332,1.093,335,3.259,336,3.259,341,3.173,342,1.541,344,3.173,345,2.812,346,2.812,347,3.173,348,2.542,349,3.173,350,3.173,352,2.338,353,2.427,354,1.214,380,1.993,396,3.127,515,4.126,516,4.268,517,4.268,518,4.268,632,3.127,636,2.326,932,5.822,933,6.49,934,3.722,935,3.722,936,6.829,937,5.002,938,3.722,939,3.722]],["title/classes/UpdateOrderStatusDto.html",[22,0.181,940,2.684]],["body/classes/UpdateOrderStatusDto.html",[3,0.317,4,0.317,5,0.245,7,0.394,10,0.91,11,0.022,12,0.518,17,0.384,21,0.317,22,0.307,27,0.018,28,0.018,117,0.561,313,2.056,329,1.224,332,1.318,340,3.407,351,2.486,353,2.207,354,1.627,371,2.645,462,4.38,759,3.768,940,4.556,941,5.142,942,4.253,943,4.988]],["title/classes/UpdateStockDto.html",[22,0.181,880,2.221]],["body/classes/UpdateStockDto.html",[3,0.296,4,0.296,5,0.228,7,0.367,10,1.147,11,0.022,12,0.652,15,0.923,17,0.296,21,0.296,22,0.294,27,0.017,28,0.017,117,0.707,118,2.379,329,1.141,332,1.262,337,3.365,342,1.779,352,2.937,353,2.474,354,1.516,554,3.511,555,3.927,556,3.927,880,3.61,944,5.603,945,4.647,946,4.647,947,4.647]],["title/classes/User.html",[22,0.181,130,1.661]],["body/classes/User.html",[3,0.225,4,0.225,5,0.174,7,0.28,10,1.234,11,0.022,12,0.701,15,0.96,17,0.225,21,0.377,22,0.181,27,0.015,28,0.015,58,1.092,71,1.771,113,2.596,117,0.761,121,2.215,130,2.767,146,2.677,181,1.092,185,1.297,217,2.42,243,2.575,271,3.444,272,3.444,273,2.951,274,3.444,275,4.162,276,3.444,277,3.444,313,1.461,316,2.044,321,3.655,329,0.87,332,1.058,342,1.971,534,3.304,584,4.48,594,2.215,596,2.215,727,3.021,728,3.021,822,3.021,823,3.021,831,3.021,832,3.021,842,3.655,843,3.304,948,2.42,949,5.509,950,3.543,951,3.543,952,3.543,953,3.543,954,3.543,955,3.543,956,3.543,957,3.543,958,4.697,959,3.543,960,3.543,961,3.543,962,3.021]],["title/coverage.html",[963,4.133]],["body/coverage.html",[0,2.235,1,2.089,5,0.15,6,2.608,11,0.022,19,1.765,22,0.36,27,0.013,28,0.013,35,1.43,83,1.977,91,2.05,93,2.608,97,2.089,98,2.608,111,2.089,117,0.344,130,1.43,139,1.765,148,1.912,150,1.12,153,1.912,156,1.912,165,1.638,185,1.12,209,1.912,217,2.089,219,2.089,228,5.006,245,2.608,328,2.089,330,2.608,331,2.818,355,2.608,356,2.608,364,2.089,365,2.608,367,1.765,371,1.915,374,1.765,383,3.299,391,1.912,420,2.608,426,1.638,444,2.311,513,1.912,514,2.608,524,1.912,525,2.311,526,2.311,537,2.608,538,2.608,552,1.912,553,2.608,554,3.299,560,2.608,581,3.299,583,3.299,598,2.089,600,2.089,601,2.608,632,1.912,640,1.765,673,2.608,696,6.261,721,2.982,731,2.089,733,2.089,734,2.608,781,1.43,782,1.912,789,2.608,820,3.299,835,2.311,844,3.299,849,2.089,850,2.608,880,1.912,883,1.765,910,2.608,932,2.608,940,2.311,941,2.608,942,2.608,944,2.608,948,2.982,963,2.608,964,2.608,965,3.059,966,3.059,967,5.872,968,5.091,969,6.634,970,5.091,971,6.285,972,4.366,973,5.553,974,2.608,975,4.366,976,2.608,977,4.366,978,5.091,979,3.059,980,2.608]],["title/dependencies.html",[32,1.874,981,2.242]],["body/dependencies.html",[11,0.022,18,1.141,22,0.294,27,0.017,28,0.017,32,2.038,56,3.511,58,1.432,214,3.511,216,3.174,225,3.174,239,2.321,267,3.962,354,1.516,399,3.174,431,3.962,571,5.357,982,4.647,983,4.647,984,4.647,985,5.775,986,4.647,987,4.647,988,4.647,989,4.647,990,4.647,991,4.647,992,4.647,993,4.647,994,4.647,995,3.962,996,4.647,997,4.647,998,4.647,999,4.647,1000,4.647,1001,4.647,1002,4.647,1003,4.647,1004,4.647,1005,4.647,1006,4.647,1007,4.647,1008,4.647,1009,4.647,1010,4.647,1011,4.647,1012,4.647,1013,4.647]],["title/miscellaneous/enumerations.html",[1014,1.712,1015,3.643]],["body/miscellaneous/enumerations.html",[7,0.362,11,0.022,27,0.017,28,0.017,150,2.096,321,4.326,331,2.511,437,5.481,462,4.088,463,4.467,525,3.464,526,4.326,535,4.882,536,4.941,721,3.131,729,4.882,730,4.882,835,3.464,840,4.882,842,4.941,843,4.467,948,3.131,958,4.882,1014,2.645,1015,3.909,1016,4.584,1017,3.909,1018,4.584,1019,3.909]],["title/miscellaneous/functions.html",[1014,1.712,1020,3.643]],["body/miscellaneous/functions.html",[7,0.424,11,0.02,27,0.019,28,0.019,35,3.125,115,2.083,116,1.173,117,0.604,118,1.853,342,1.941,444,4.759,974,4.575,976,4.575,1014,3.095,1020,4.575,1021,5.365,1022,5.365,1023,5.365,1024,5.365]],["title/index.html",[7,0.235,1025,2.53,1026,2.53]],["body/index.html",[5,0.156,11,0.014,12,0.466,27,0.014,28,0.014,32,1.394,73,2.71,74,4.434,75,2.402,83,2.597,84,3.865,85,1.987,87,3.713,106,3.065,113,1.968,121,2.805,129,2.787,131,1.703,150,2.448,164,3.903,176,2.402,185,2.068,200,2.402,295,3.39,301,4.434,307,2.402,313,2.456,369,3.929,371,2.787,387,1.588,602,3.39,617,3.404,635,2.785,637,3.065,654,5.272,655,1.987,692,3.065,781,2.89,843,4.223,851,4.801,964,4.434,980,2.71,981,3.39,995,2.71,1025,3.826,1026,3.826,1027,5.649,1028,3.179,1029,3.39,1030,5.649,1031,5.2,1032,3.179,1033,3.179,1034,3.179,1035,5.958,1036,3.179,1037,3.179,1038,4.487,1039,3.179,1040,5.649,1041,5.649,1042,3.179,1043,3.179,1044,3.179,1045,3.179,1046,3.179,1047,3.179,1048,3.179,1049,4.487,1050,3.179,1051,3.179,1052,3.179,1053,3.179,1054,3.179,1055,3.179,1056,3.179,1057,3.179,1058,3.179,1059,3.179,1060,3.179,1061,4.487,1062,4.487,1063,3.179,1064,3.179,1065,3.179,1066,3.179,1067,3.179,1068,3.179,1069,5.2,1070,5.2,1071,3.179,1072,3.179,1073,5.2,1074,3.179,1075,3.179,1076,3.179,1077,3.179,1078,3.179,1079,3.179,1080,3.179]],["title/modules.html",[31,2.266]],["body/modules.html",[11,0.019,27,0.019,28,0.019,30,3.553,31,2.431,41,2.786,42,3.251,43,3.251,44,3.001,45,3.251,1081,7.075,1082,7.075,1083,7.075,1084,7.075]],["title/overview.html",[1029,3.662]],["body/overview.html",[2,1.431,11,0.022,19,3.341,27,0.016,28,0.016,29,1.138,30,4.877,31,1.827,32,1.715,33,2.094,34,2.094,35,1.827,36,2.094,37,2.094,38,3.333,39,3.333,40,3.333,41,3.759,42,4.311,43,4.197,44,3.873,45,4.005,46,2.769,47,2.094,48,2.094,92,1.953,165,3.596,206,3.333,207,3.333,208,3.333,209,4.197,329,0.96,374,3.341,413,3.333,415,3.333,426,3.596,640,3.341,667,3.333,669,3.333,776,3.333,777,3.333,778,3.333,883,3.341,906,3.333,907,3.333,1029,2.954,1085,5.169,1086,3.91,1087,3.91]],["title/properties.html",[332,0.934,981,2.242]],["body/properties.html",[11,0.022,27,0.019,28,0.019,51,2.284,332,1.211,1088,5.54,1089,5.54,1090,5.54,1091,5.54,1092,5.54]],["title/miscellaneous/variables.html",[1014,1.712,1093,3.643]],["body/miscellaneous/variables.html",[7,0.396,11,0.021,27,0.018,28,0.018,217,4.134,219,4.134,436,5.889,437,5.218,583,3.791,598,4.134,599,4.278,721,3.427,731,4.134,732,4.278,782,3.783,820,3.791,833,4.278,844,3.791,848,4.278,948,3.427,962,4.278,1014,2.894,1017,4.278,1019,4.278,1093,4.278,1094,5.017,1095,5.017,1096,5.017]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"modules/StocksModule.html":{},"injectables/StocksService.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":696,"title":{},"body":{"injectables/MedicineService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1089,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":700,"title":{},"body":{"injectables/MedicineService.html":{},"injectables/OrdersService.html":{}}}],["1.0.0",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MedicineService.html":{}}}],["10.0.0",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["10.2.7",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":476,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["14.2.0",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":1087,"title":{},"body":{"overview.html":{}}}],["2",{"_index":501,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["2.1.10",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["3001",{"_index":1059,"title":{},"body":{"index.html":{}}}],["4.0.0",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1085,"title":{},"body":{"overview.html":{}}}],["6371",{"_index":495,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["7",{"_index":1086,"title":{},"body":{"overview.html":{}}}],["7.6.3",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":333,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{}}}],["access",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["access_token",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["add",{"_index":961,"title":{},"body":{"classes/User.html":{}}}],["address",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateShopDto.html":{},"classes/Shop.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["admin",{"_index":842,"title":{},"body":{"classes/SignUpDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["allshopdata",{"_index":452,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["already",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["angle",{"_index":1024,"title":{},"body":{"miscellaneous/functions.html":{}}}],["any)._id",{"_index":465,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["app",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":19,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":937,"title":{},"body":{"classes/UpdateMedicineDto.html":{}}}],["assign",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["associated",{"_index":799,"title":{},"body":{"injectables/OrdersService.html":{}}}],["async",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["auth",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.controller",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/check",{"_index":1064,"title":{},"body":{"index.html":{}}}],["auth/login",{"_index":1061,"title":{},"body":{"index.html":{}}}],["auth/register",{"_index":1065,"title":{},"body":{"index.html":{}}}],["auth/shop/:id",{"_index":1067,"title":{},"body":{"index.html":{}}}],["auth/shops",{"_index":1066,"title":{},"body":{"index.html":{}}}],["auth/signup",{"_index":1060,"title":{},"body":{"index.html":{}}}],["auth/user/:id",{"_index":1063,"title":{},"body":{"index.html":{}}}],["authcontroller",{"_index":97,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["authguard",{"_index":644,"title":{},"body":{"controllers/MedicineController.html":{}}}],["authmodule",{"_index":41,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1092,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":165,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":960,"title":{},"body":{"classes/User.html":{}}}],["await",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["back",{"_index":1054,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":638,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["badrequestexception('failed",{"_index":764,"title":{},"body":{"controllers/OrdersController.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["badrequestexception('no",{"_index":697,"title":{},"body":{"injectables/MedicineService.html":{}}}],["badrequestexception(error.message",{"_index":651,"title":{},"body":{"controllers/MedicineController.html":{}}}],["bcrypt",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["bdt",{"_index":479,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["body",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CheckoutController.html":{},"controllers/MedicineController.html":{},"controllers/OrdersController.html":{},"controllers/StocksController.html":{}}}],["book",{"_index":727,"title":{},"body":{"classes/Order.html":{},"classes/User.html":{}}}],["boolean",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"modules/StocksModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1084,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1081,"title":{},"body":{"modules.html":{}}}],["built",{"_index":1032,"title":{},"body":{"index.html":{}}}],["c",{"_index":505,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["calculatedistance",{"_index":489,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["cancel_url",{"_index":487,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["canceled",{"_index":536,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"miscellaneous/enumerations.html":{}}}],["card",{"_index":471,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["cartitem",{"_index":533,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["cartitemdto",{"_index":328,"title":{"classes/CartItemDto.html":{}},"body":{"classes/CartItemDto.html":{},"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["catch",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["category",{"_index":728,"title":{},"body":{"classes/Order.html":{},"classes/User.html":{}}}],["check",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MedicineService.html":{}}}],["checkduplicateemail",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["checkduplicateemail(checkemaildto",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkduplicateemail(email",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkemaildto",{"_index":111,"title":{"classes/CheckEmailDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CheckEmailDto.html":{},"coverage.html":{}}}],["checkemaildto.email",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["checking",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkout",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/CheckoutController.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"index.html":{}}}],["checkout(checkoutdto",{"_index":366,"title":{},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{}}}],["checkout.controller",{"_index":417,"title":{},"body":{"modules/CheckoutModule.html":{}}}],["checkout.service",{"_index":375,"title":{},"body":{"controllers/CheckoutController.html":{},"modules/CheckoutModule.html":{}}}],["checkout/checkout.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["checkoutcontroller",{"_index":364,"title":{"controllers/CheckoutController.html":{}},"body":{"controllers/CheckoutController.html":{},"modules/CheckoutModule.html":{},"coverage.html":{}}}],["checkoutdto",{"_index":367,"title":{"classes/CheckoutDto.html":{}},"body":{"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"coverage.html":{}}}],["checkoutdto.deliveryaddress",{"_index":464,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["checkoutdto.deliverylat",{"_index":450,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["checkoutdto.deliverylng",{"_index":451,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["checkoutdto.items",{"_index":460,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["checkoutdto.items.map((item",{"_index":473,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["checkoutdto.userid",{"_index":461,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["checkoutitem",{"_index":391,"title":{"classes/CheckoutItem.html":{}},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"coverage.html":{}}}],["checkoutmodule",{"_index":42,"title":{"modules/CheckoutModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CheckoutModule.html":{},"modules.html":{},"overview.html":{}}}],["checkoutservice",{"_index":374,"title":{"injectables/CheckoutService.html":{}},"body":{"controllers/CheckoutController.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"coverage.html":{},"overview.html":{}}}],["class",{"_index":22,"title":{"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"classes/Order.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"modules/StocksModule.html":{},"injectables/StocksService.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":329,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"classes/Order.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["closest",{"_index":453,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["closestshop",{"_index":454,"title":{},"body":{"injectables/CheckoutService.html":{},"classes/CreateOrderDto.html":{},"classes/Order.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_checkoutmodule",{"_index":413,"title":{},"body":{"modules/CheckoutModule.html":{},"overview.html":{}}}],["cluster_checkoutmodule_imports",{"_index":414,"title":{},"body":{"modules/CheckoutModule.html":{}}}],["cluster_checkoutmodule_providers",{"_index":415,"title":{},"body":{"modules/CheckoutModule.html":{},"overview.html":{}}}],["cluster_medicinemodule",{"_index":667,"title":{},"body":{"modules/MedicineModule.html":{},"overview.html":{}}}],["cluster_medicinemodule_imports",{"_index":668,"title":{},"body":{"modules/MedicineModule.html":{}}}],["cluster_medicinemodule_providers",{"_index":669,"title":{},"body":{"modules/MedicineModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":776,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_exports",{"_index":777,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_providers",{"_index":778,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_stocksmodule",{"_index":906,"title":{},"body":{"modules/StocksModule.html":{},"overview.html":{}}}],["cluster_stocksmodule_providers",{"_index":907,"title":{},"body":{"modules/StocksModule.html":{},"overview.html":{}}}],["collection",{"_index":1046,"title":{},"body":{"index.html":{}}}],["completed",{"_index":535,"title":{},"body":{"classes/CreateOrderDto.html":{},"miscellaneous/enumerations.html":{}}}],["config",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get('jwt_expires_in",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get('jwt_secret",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{}}}],["configmodule",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{}}}],["configuration",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["conflictexception('email",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["conflictexception('failed",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["connecting",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CheckoutService.html":{}}}],["console.log('closest",{"_index":458,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["console.log('shop",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(createshopdto",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"classes/User.html":{}}}],["constructor",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{},"injectables/StocksService.html":{}}}],["constructor(@injectmodel(stock.name",{"_index":921,"title":{},"body":{"injectables/StocksService.html":{}}}],["constructor(medicinemodel",{"_index":675,"title":{},"body":{"injectables/MedicineService.html":{}}}],["constructor(ordermodel",{"_index":790,"title":{},"body":{"injectables/OrdersService.html":{}}}],["constructor(ordersservice",{"_index":425,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["constructor(private",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CheckoutController.html":{},"controllers/MedicineController.html":{},"controllers/OrdersController.html":{},"controllers/StocksController.html":{}}}],["constructor(stockmodel",{"_index":911,"title":{},"body":{"injectables/StocksService.html":{}}}],["constructor(usermodel",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["containing",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["contents",{"_index":1028,"title":{},"body":{"index.html":{}}}],["continue",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CheckoutController.html":{},"controllers/MedicineController.html":{},"controllers/OrdersController.html":{},"controllers/StocksController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CheckoutController.html":{},"controllers/MedicineController.html":{},"controllers/OrdersController.html":{},"controllers/StocksController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('checkout",{"_index":377,"title":{},"body":{"controllers/CheckoutController.html":{}}}],["controller('medicines",{"_index":645,"title":{},"body":{"controllers/MedicineController.html":{}}}],["controller('orders",{"_index":761,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controller('stocks",{"_index":887,"title":{},"body":{"controllers/StocksController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CheckoutController.html":{},"modules/CheckoutModule.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"controllers/StocksController.html":{},"modules/StocksModule.html":{},"overview.html":{}}}],["cookie",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":361,"title":{},"body":{"classes/CheckEmailDto.html":{},"classes/CreateShopDto.html":{},"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{}}}],["count",{"_index":680,"title":{},"body":{"injectables/MedicineService.html":{}}}],["countall",{"_index":674,"title":{},"body":{"injectables/MedicineService.html":{}}}],["coverage",{"_index":963,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/User.html":{},"index.html":{}}}],["created",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/User.html":{}}}],["createdat",{"_index":819,"title":{},"body":{"injectables/OrdersService.html":{}}}],["createdmedicine",{"_index":687,"title":{},"body":{"injectables/MedicineService.html":{}}}],["createdmedicine.save",{"_index":689,"title":{},"body":{"injectables/MedicineService.html":{}}}],["createdorder",{"_index":806,"title":{},"body":{"injectables/OrdersService.html":{}}}],["createdorder.save",{"_index":809,"title":{},"body":{"injectables/OrdersService.html":{}}}],["createdstock",{"_index":922,"title":{},"body":{"injectables/StocksService.html":{}}}],["createdstock.save",{"_index":925,"title":{},"body":{"injectables/StocksService.html":{}}}],["createmedicine",{"_index":603,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["createmedicine(@body",{"_index":659,"title":{},"body":{"controllers/MedicineController.html":{}}}],["createmedicine(createmedicinedto",{"_index":608,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["createmedicinedto",{"_index":513,"title":{"classes/CreateMedicineDto.html":{}},"body":{"classes/CreateMedicineDto.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"coverage.html":{}}}],["createorder",{"_index":735,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["createorder(@body",{"_index":762,"title":{},"body":{"controllers/OrdersController.html":{}}}],["createorder(createorderdto",{"_index":741,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["createorderdto",{"_index":524,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["creates",{"_index":381,"title":{},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{}}}],["createshopdto",{"_index":148,"title":{"classes/CreateShopDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateShopDto.html":{},"coverage.html":{}}}],["createstock",{"_index":852,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["createstock(@body",{"_index":888,"title":{},"body":{"controllers/StocksController.html":{}}}],["createstock(createstockdto",{"_index":860,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["createstockdto",{"_index":552,"title":{"classes/CreateStockDto.html":{}},"body":{"classes/CreateStockDto.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"coverage.html":{}}}],["createstripesession",{"_index":423,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["createstripesession(checkoutdto",{"_index":429,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["creating",{"_index":612,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["creation",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrdersService.html":{}}}],["currency",{"_index":478,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["customer",{"_index":843,"title":{},"body":{"classes/SignUpDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["data",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"index.html":{}}}],["database",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["date",{"_index":801,"title":{},"body":{"injectables/OrdersService.html":{}}}],["days",{"_index":334,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"modules/StocksModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{}}}],["default",{"_index":436,"title":{},"body":{"injectables/CheckoutService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{}}}],["define",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{},"index.html":{}}}],["deg2rad",{"_index":444,"title":{},"body":{"injectables/CheckoutService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["deg2rad(angle",{"_index":1023,"title":{},"body":{"miscellaneous/functions.html":{}}}],["deg2rad(lat2",{"_index":497,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["deg2rad(lon2",{"_index":499,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["delete",{"_index":617,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"index.html":{}}}],["delete(':id",{"_index":664,"title":{},"body":{"controllers/MedicineController.html":{}}}],["delete(':id')@useguards(undefined",{"_index":615,"title":{},"body":{"controllers/MedicineController.html":{}}}],["delete(':orderid",{"_index":744,"title":{},"body":{"controllers/OrdersController.html":{}}}],["delete(':stockid",{"_index":863,"title":{},"body":{"controllers/StocksController.html":{}}}],["deleted",{"_index":618,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["deletedmedicine",{"_index":718,"title":{},"body":{"injectables/MedicineService.html":{}}}],["deletemedicine",{"_index":604,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["deletemedicine(@param('id",{"_index":665,"title":{},"body":{"controllers/MedicineController.html":{}}}],["deletemedicine(id",{"_index":614,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["deleteorder",{"_index":736,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["deleteorder(@param('orderid",{"_index":772,"title":{},"body":{"controllers/OrdersController.html":{}}}],["deleteorder(orderid",{"_index":743,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["deletestock",{"_index":853,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["deletestock(@param('stockid",{"_index":898,"title":{},"body":{"controllers/StocksController.html":{}}}],["deletestock(stockid",{"_index":862,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["delivered",{"_index":729,"title":{},"body":{"classes/Order.html":{},"miscellaneous/enumerations.html":{}}}],["deliveryaddress",{"_index":384,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateOrderDto.html":{},"classes/Order.html":{}}}],["deliverylat",{"_index":385,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{}}}],["deliverylng",{"_index":386,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"modules/StocksModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descending",{"_index":802,"title":{},"body":{"injectables/OrdersService.html":{}}}],["description",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"properties.html":{}}}],["destinationlat",{"_index":433,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["destinationlng",{"_index":434,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["details",{"_index":372,"title":{},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["distance",{"_index":508,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["dlat",{"_index":496,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["dlon",{"_index":498,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["document",{"_index":595,"title":{},"body":{"classes/Medicine.html":{}}}],["documentation",{"_index":964,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dosage_form",{"_index":335,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/Medicine.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"classes/CreateOrderDto.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["dto.ts",{"_index":331,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["dto.ts:10",{"_index":346,"title":{},"body":{"classes/CartItemDto.html":{},"classes/LoginDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:11",{"_index":519,"title":{},"body":{"classes/CreateMedicineDto.html":{}}}],["dto.ts:13",{"_index":403,"title":{},"body":{"classes/CheckoutItem.html":{}}}],["dto.ts:14",{"_index":345,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateMedicineDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:15",{"_index":582,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["dto.ts:16",{"_index":406,"title":{},"body":{"classes/CheckoutItem.html":{}}}],["dto.ts:17",{"_index":521,"title":{},"body":{"classes/CreateMedicineDto.html":{}}}],["dto.ts:18",{"_index":344,"title":{},"body":{"classes/CartItemDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:19",{"_index":407,"title":{},"body":{"classes/CheckoutItem.html":{},"classes/SignUpDto.html":{}}}],["dto.ts:20",{"_index":520,"title":{},"body":{"classes/CreateMedicineDto.html":{}}}],["dto.ts:21",{"_index":834,"title":{},"body":{"classes/ShopLoginDto.html":{}}}],["dto.ts:22",{"_index":349,"title":{},"body":{"classes/CartItemDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:23",{"_index":408,"title":{},"body":{"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/SignUpDto.html":{}}}],["dto.ts:26",{"_index":348,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateMedicineDto.html":{},"classes/ShopLoginDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:27",{"_index":410,"title":{},"body":{"classes/CheckoutItem.html":{}}}],["dto.ts:28",{"_index":839,"title":{},"body":{"classes/SignUpDto.html":{}}}],["dto.ts:30",{"_index":347,"title":{},"body":{"classes/CartItemDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:31",{"_index":412,"title":{},"body":{"classes/CheckoutItem.html":{}}}],["dto.ts:32",{"_index":836,"title":{},"body":{"classes/SignUpDto.html":{}}}],["dto.ts:34",{"_index":350,"title":{},"body":{"classes/CartItemDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:35",{"_index":405,"title":{},"body":{"classes/CheckoutItem.html":{}}}],["dto.ts:36",{"_index":841,"title":{},"body":{"classes/SignUpDto.html":{}}}],["dto.ts:39",{"_index":411,"title":{},"body":{"classes/CheckoutItem.html":{}}}],["dto.ts:40",{"_index":837,"title":{},"body":{"classes/SignUpDto.html":{}}}],["dto.ts:44",{"_index":838,"title":{},"body":{"classes/SignUpDto.html":{}}}],["dto.ts:46",{"_index":394,"title":{},"body":{"classes/CheckoutDto.html":{}}}],["dto.ts:49",{"_index":395,"title":{},"body":{"classes/CheckoutDto.html":{}}}],["dto.ts:5",{"_index":522,"title":{},"body":{"classes/CreateMedicineDto.html":{}}}],["dto.ts:53",{"_index":388,"title":{},"body":{"classes/CheckoutDto.html":{}}}],["dto.ts:57",{"_index":389,"title":{},"body":{"classes/CheckoutDto.html":{}}}],["dto.ts:6",{"_index":341,"title":{},"body":{"classes/CartItemDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:61",{"_index":390,"title":{},"body":{"classes/CheckoutDto.html":{}}}],["dto.ts:8",{"_index":523,"title":{},"body":{"classes/CreateMedicineDto.html":{}}}],["dto/check",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/checkout",{"_index":373,"title":{},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{}}}],["dto/create",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["dto/login",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/signup",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":642,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["duplicate",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Shop.html":{},"classes/User.html":{},"index.html":{}}}],["duplication",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["during",{"_index":448,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["each",{"_index":402,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateOrderDto.html":{}}}],["email",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CheckEmailDto.html":{},"classes/CreateShopDto.html":{},"classes/LoginDto.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/User.html":{},"index.html":{}}}],["email.dto",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["email.dto.ts",{"_index":356,"title":{},"body":{"classes/CheckEmailDto.html":{},"coverage.html":{}}}],["email.dto.ts:10",{"_index":362,"title":{},"body":{"classes/CheckEmailDto.html":{}}}],["end",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["endpoint",{"_index":580,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["enter",{"_index":360,"title":{},"body":{"classes/CheckEmailDto.html":{},"classes/CreateShopDto.html":{},"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{}}}],["entered",{"_index":832,"title":{},"body":{"classes/Shop.html":{},"classes/User.html":{}}}],["enum",{"_index":534,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["enumerations",{"_index":1015,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["error('failed",{"_index":810,"title":{},"body":{"injectables/OrdersService.html":{}}}],["error('order",{"_index":813,"title":{},"body":{"injectables/OrdersService.html":{}}}],["exec",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{},"injectables/StocksService.html":{}}}],["existinguser",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiration",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["expires_in",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{}}}],["explore",{"_index":1079,"title":{},"body":{"index.html":{}}}],["export",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"modules/StocksModule.html":{},"injectables/StocksService.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{}}}],["exported",{"_index":787,"title":{},"body":{"modules/OrdersModule.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"modules/StocksModule.html":{},"overview.html":{}}}],["express",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":561,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/Medicine.html":{}}}],["extract",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["extractjwt",{"_index":570,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":574,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":905,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["false",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["features",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["fetch",{"_index":766,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"modules/StocksModule.html":{},"injectables/StocksService.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["filter",{"_index":704,"title":{},"body":{"injectables/MedicineService.html":{}}}],["filtering",{"_index":624,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["filterparams",{"_index":693,"title":{},"body":{"injectables/MedicineService.html":{}}}],["find",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"index.html":{}}}],["find(filter",{"_index":710,"title":{},"body":{"injectables/MedicineService.html":{}}}],["find_and_delete_duplicate_data_mongodb.js",{"_index":1052,"title":{},"body":{"index.html":{}}}],["findallmedicinebyquery",{"_index":605,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["findallmedicinebyquery(@query",{"_index":648,"title":{},"body":{"controllers/MedicineController.html":{}}}],["findallmedicinebyquery(queryparams",{"_index":619,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["findbyidandupdate(orderid",{"_index":815,"title":{},"body":{"injectables/OrdersService.html":{}}}],["findbyidandupdate(stockid",{"_index":930,"title":{},"body":{"injectables/StocksService.html":{}}}],["findclosestshop",{"_index":424,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["findclosestshop(shops",{"_index":432,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["findonemedicine",{"_index":606,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["findonemedicine(@param('id",{"_index":657,"title":{},"body":{"controllers/MedicineController.html":{}}}],["findonemedicine(id",{"_index":627,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["findorderbyid",{"_index":737,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["findorderbyid(@param('orderid",{"_index":767,"title":{},"body":{"controllers/OrdersController.html":{}}}],["findorderbyid(orderid",{"_index":747,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["finduserbyid",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["finduserbyid(@param('id",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["finduserbyid(id",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["firstname",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateShopDto.html":{},"classes/Shop.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["folder",{"_index":1056,"title":{},"body":{"index.html":{}}}],["found",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["full",{"_index":1077,"title":{},"body":{"index.html":{}}}],["function",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["functionalities",{"_index":788,"title":{},"body":{"modules/OrdersModule.html":{}}}],["functions",{"_index":1020,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":456,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["generate",{"_index":1042,"title":{},"body":{"index.html":{}}}],["generics",{"_index":515,"title":{},"body":{"classes/CreateMedicineDto.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"classes/UpdateMedicineDto.html":{}}}],["get('/shop/:id",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/shops",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/user/:id",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":656,"title":{},"body":{"controllers/MedicineController.html":{}}}],["get(':id')@useguards(undefined",{"_index":628,"title":{},"body":{"controllers/MedicineController.html":{}}}],["get(':orderid",{"_index":748,"title":{},"body":{"controllers/OrdersController.html":{}}}],["get(':stockid",{"_index":871,"title":{},"body":{"controllers/StocksController.html":{}}}],["get('find",{"_index":646,"title":{},"body":{"controllers/MedicineController.html":{}}}],["get('find')@useguards(undefined",{"_index":620,"title":{},"body":{"controllers/MedicineController.html":{}}}],["get('search/medicine",{"_index":874,"title":{},"body":{"controllers/StocksController.html":{}}}],["get('shop/:shopid",{"_index":868,"title":{},"body":{"controllers/StocksController.html":{}}}],["get('user/:userid",{"_index":752,"title":{},"body":{"controllers/OrdersController.html":{}}}],["getallorders",{"_index":738,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["getallshops",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["getallstocks",{"_index":854,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["getallstocksbyshopid",{"_index":855,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["getallstocksbyshopid(shopid",{"_index":867,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getordersbyuserid",{"_index":739,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["getordersbyuserid(@param('userid",{"_index":774,"title":{},"body":{"controllers/OrdersController.html":{}}}],["getordersbyuserid(userid",{"_index":751,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["getshopbyid",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["getshopbyid(@param('id",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["getshopbyid(id",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["getstockbyid",{"_index":856,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["getstockbyid(@param('stockid",{"_index":893,"title":{},"body":{"controllers/StocksController.html":{}}}],["getstockbyid(stockid",{"_index":870,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["getting",{"_index":1025,"title":{"index.html":{}},"body":{"index.html":{}}}],["global",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["go",{"_index":1053,"title":{},"body":{"index.html":{}}}],["guards/jwt.strategy",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["handling",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{}}}],["hashedpassword",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":1078,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":438,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["id",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"index.html":{}}}],["identifier",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"modules/StocksModule.html":{},"injectables/StocksService.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{}}}],["imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"modules/StocksModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["indicating",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["individual",{"_index":939,"title":{},"body":{"classes/UpdateMedicineDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"modules/StocksModule.html":{},"injectables/StocksService.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{}}}],["information",{"_index":611,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["initiates",{"_index":378,"title":{},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{}}}],["inject",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{}}}],["injectable",{"_index":91,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{},"injectables/StocksService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{},"injectables/StocksService.html":{},"coverage.html":{}}}],["injectables",{"_index":92,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{},"injectables/StocksService.html":{},"overview.html":{}}}],["injectmodel",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{},"injectables/StocksService.html":{}}}],["injectmodel(medicine.name",{"_index":686,"title":{},"body":{"injectables/MedicineService.html":{}}}],["injectmodel(order.name",{"_index":804,"title":{},"body":{"injectables/OrdersService.html":{}}}],["injectmodel(shop.name",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["injectmodel(stock.name",{"_index":805,"title":{},"body":{"injectables/OrdersService.html":{}}}],["injectmodel(user.name",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["insert",{"_index":1047,"title":{},"body":{"index.html":{}}}],["install",{"_index":1041,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":650,"title":{},"body":{"controllers/MedicineController.html":{}}}],["internalservererrorexception",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MedicineController.html":{}}}],["internalservererrorexception('failed",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["internalservererrorexception('internal",{"_index":653,"title":{},"body":{"controllers/MedicineController.html":{}}}],["intert_to_mongodb.js",{"_index":1050,"title":{},"body":{"index.html":{}}}],["isarray",{"_index":396,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["isarray()@isnotempty()@validatenested({each",{"_index":529,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["isarray()@validatenested({each",{"_index":392,"title":{},"body":{"classes/CheckoutDto.html":{}}}],["isduplicate",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["isemail",{"_index":363,"title":{},"body":{"classes/CheckEmailDto.html":{},"classes/CreateShopDto.html":{},"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{}}}],["isglobal",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":351,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateOrderStatusDto.html":{}}}],["isnotempty()@isemail",{"_index":357,"title":{},"body":{"classes/CheckEmailDto.html":{},"classes/CreateShopDto.html":{},"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{}}}],["isnotempty()@isnumber",{"_index":544,"title":{},"body":{"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"classes/SignUpDto.html":{}}}],["isnotempty()@isstring",{"_index":539,"title":{},"body":{"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"classes/SignUpDto.html":{}}}],["isnotempty()@isstring()@minlength(6",{"_index":547,"title":{},"body":{"classes/CreateShopDto.html":{},"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{}}}],["isnumber",{"_index":352,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateStockDto.html":{}}}],["isnumber()@isnotempty",{"_index":343,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{}}}],["isnumber()@min(0",{"_index":404,"title":{},"body":{"classes/CheckoutItem.html":{}}}],["isnumber()@min(1",{"_index":409,"title":{},"body":{"classes/CheckoutItem.html":{}}}],["isoptional",{"_index":936,"title":{},"body":{"classes/UpdateMedicineDto.html":{}}}],["isoptional()@isarray",{"_index":934,"title":{},"body":{"classes/UpdateMedicineDto.html":{}}}],["isoptional()@isnumber",{"_index":935,"title":{},"body":{"classes/UpdateMedicineDto.html":{}}}],["isoptional()@isstring",{"_index":933,"title":{},"body":{"classes/UpdateMedicineDto.html":{}}}],["isstring",{"_index":353,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{}}}],["isstring()@isnotempty",{"_index":340,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CreateOrderDto.html":{},"classes/UpdateOrderStatusDto.html":{}}}],["item.name",{"_index":481,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["item.quantity",{"_index":483,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["items",{"_index":380,"title":{},"body":{"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateOrderDto.html":{},"classes/Order.html":{},"classes/UpdateMedicineDto.html":{}}}],["js",{"_index":995,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["jtw",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":573,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":209,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lastname",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateShopDto.html":{},"classes/Shop.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["lat",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateShopDto.html":{},"classes/Shop.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["lat1",{"_index":490,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["lat2",{"_index":492,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"modules/StocksModule.html":{},"overview.html":{}}}],["level",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":1090,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":691,"title":{},"body":{"injectables/MedicineService.html":{}}}],["limit(limitvalue",{"_index":712,"title":{},"body":{"injectables/MedicineService.html":{}}}],["limitvalue",{"_index":701,"title":{},"body":{"injectables/MedicineService.html":{}}}],["line_items",{"_index":472,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["list",{"_index":625,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["lng",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateShopDto.html":{},"classes/Shop.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["local",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["lock.json",{"_index":1043,"title":{},"body":{"index.html":{}}}],["lock.yaml",{"_index":1039,"title":{},"body":{"index.html":{}}}],["login",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["login(logindto",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":139,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"coverage.html":{}}}],["lon1",{"_index":491,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["lon2",{"_index":493,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["main",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["manager",{"_index":1036,"title":{},"body":{"index.html":{}}}],["managing",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{}}}],["manufacturer",{"_index":516,"title":{},"body":{"classes/CreateMedicineDto.html":{},"classes/Medicine.html":{},"classes/UpdateMedicineDto.html":{}}}],["match",{"_index":626,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"modules/StocksModule.html":{},"injectables/StocksService.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.atan2(math.sqrt(a",{"_index":506,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["math.ceil(item.price",{"_index":475,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["math.cos(deg2rad(lat1",{"_index":502,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["math.cos(deg2rad(lat2",{"_index":503,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["math.sin(dlat",{"_index":500,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["math.sin(dlon",{"_index":504,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["math.sqrt(1",{"_index":507,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["medicine",{"_index":83,"title":{"classes/Medicine.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateMedicineDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"classes/UpdateMedicineDto.html":{},"coverage.html":{},"index.html":{}}}],["medicine.controller",{"_index":671,"title":{},"body":{"modules/MedicineModule.html":{}}}],["medicine.name",{"_index":672,"title":{},"body":{"modules/MedicineModule.html":{}}}],["medicine.service",{"_index":641,"title":{},"body":{"controllers/MedicineController.html":{},"modules/MedicineModule.html":{}}}],["medicine/medicine.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["medicinecontroller",{"_index":600,"title":{"controllers/MedicineController.html":{}},"body":{"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"coverage.html":{}}}],["medicineid",{"_index":555,"title":{},"body":{"classes/CreateStockDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"classes/UpdateStockDto.html":{}}}],["medicinemodel",{"_index":677,"title":{},"body":{"injectables/MedicineService.html":{}}}],["medicinemodule",{"_index":43,"title":{"modules/MedicineModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MedicineModule.html":{},"modules.html":{},"overview.html":{}}}],["medicinename",{"_index":876,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["medicines",{"_index":602,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"index.html":{}}}],["medicines/:id",{"_index":1069,"title":{},"body":{"index.html":{}}}],["medicines/find",{"_index":1068,"title":{},"body":{"index.html":{}}}],["medicineschema",{"_index":598,"title":{},"body":{"classes/Medicine.html":{},"modules/MedicineModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["medicineservice",{"_index":640,"title":{"injectables/MedicineService.html":{}},"body":{"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"coverage.html":{},"overview.html":{}}}],["medxpress",{"_index":1027,"title":{},"body":{"index.html":{}}}],["message",{"_index":358,"title":{},"body":{"classes/CheckEmailDto.html":{},"classes/CreateShopDto.html":{},"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{}}}],["metadata",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["min",{"_index":397,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{}}}],["min(0",{"_index":400,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{}}}],["min(1",{"_index":401,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{}}}],["mindistance",{"_index":509,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["minlength",{"_index":550,"title":{},"body":{"classes/CreateShopDto.html":{},"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{}}}],["minlength(6",{"_index":551,"title":{},"body":{"classes/CreateShopDto.html":{},"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":1014,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous/medxpress",{"_index":1045,"title":{},"body":{"index.html":{}}}],["mode",{"_index":484,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["model",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedicineService.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"injectables/StocksService.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"modules/StocksModule.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CheckoutController.html":{},"modules/CheckoutModule.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"modules/StocksModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"modules/StocksModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["mongoose",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{},"injectables/StocksService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"modules/StocksModule.html":{}}}],["mongoosemodule.forfeature",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"modules/StocksModule.html":{}}}],["mongoosemodule.forroot(process.env.mongodb_url",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"injectables/JwtStrategy.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"modules/StocksModule.html":{},"injectables/StocksService.html":{},"classes/UpdateMedicineDto.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":1044,"title":{},"body":{"index.html":{}}}],["need",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["nest",{"_index":1033,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"modules/StocksModule.html":{},"injectables/StocksService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Medicine.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/Stock.html":{},"modules/StocksModule.html":{},"injectables/StocksService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["newly",{"_index":613,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["node",{"_index":1049,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["notfoundexception('failed",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"controllers/OrdersController.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["notfoundexception('medicine",{"_index":715,"title":{},"body":{"injectables/MedicineService.html":{}}}],["notfoundexception('medicines",{"_index":713,"title":{},"body":{"injectables/MedicineService.html":{}}}],["notfoundexception('order",{"_index":769,"title":{},"body":{"controllers/OrdersController.html":{}}}],["notfoundexception('shop",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfoundexception('stock",{"_index":895,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["notfoundexception('user",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["notfoundexception(error.message",{"_index":652,"title":{},"body":{"controllers/MedicineController.html":{}}}],["npm",{"_index":1038,"title":{},"body":{"index.html":{}}}],["null",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CheckoutService.html":{}}}],["number",{"_index":342,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"classes/Shop.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["number(limit",{"_index":702,"title":{},"body":{"injectables/MedicineService.html":{}}}],["number(page",{"_index":699,"title":{},"body":{"injectables/MedicineService.html":{}}}],["number.max_value",{"_index":510,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["object",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{}}}],["object.assign(filter",{"_index":708,"title":{},"body":{"injectables/MedicineService.html":{}}}],["object.keys(filterparams).length",{"_index":695,"title":{},"body":{"injectables/MedicineService.html":{}}}],["occurs",{"_index":447,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["optional",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"classes/UpdateStockDto.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":707,"title":{},"body":{"injectables/MedicineService.html":{}}}],["order",{"_index":371,"title":{"classes/Order.html":{}},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderStatusDto.html":{},"coverage.html":{},"index.html":{}}}],["order.dto",{"_index":759,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/UpdateOrderStatusDto.html":{}}}],["order.dto.ts",{"_index":526,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["order.dto.ts:16",{"_index":530,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:20",{"_index":532,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:24",{"_index":531,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:28",{"_index":528,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:30",{"_index":527,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.name",{"_index":785,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orderdto",{"_index":459,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["orderid",{"_index":746,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["ordermodel",{"_index":793,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orders",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"index.html":{}}}],["orders.controller",{"_index":780,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.service",{"_index":758,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["orders/:id",{"_index":1070,"title":{},"body":{"index.html":{}}}],["orders/orders.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["orders/user/:userid",{"_index":1071,"title":{},"body":{"index.html":{}}}],["orderschema",{"_index":731,"title":{},"body":{"classes/Order.html":{},"modules/OrdersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderscontroller",{"_index":733,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordersmodule",{"_index":44,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CheckoutModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersservice",{"_index":426,"title":{"injectables/OrdersService.html":{}},"body":{"injectables/CheckoutService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["orderstatus",{"_index":462,"title":{},"body":{"injectables/CheckoutService.html":{},"classes/CreateOrderDto.html":{},"classes/Order.html":{},"classes/UpdateOrderStatusDto.html":{},"miscellaneous/enumerations.html":{}}}],["out",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"modules/StocksModule.html":{},"overview.html":{}}}],["overview",{"_index":1029,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":981,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["package_size",{"_index":517,"title":{},"body":{"classes/CreateMedicineDto.html":{},"classes/Medicine.html":{},"classes/UpdateMedicineDto.html":{}}}],["page",{"_index":690,"title":{},"body":{"injectables/MedicineService.html":{}}}],["page,limit",{"_index":694,"title":{},"body":{"injectables/MedicineService.html":{}}}],["pagevalue",{"_index":698,"title":{},"body":{"injectables/MedicineService.html":{}}}],["param",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{}}}],["param('id",{"_index":662,"title":{},"body":{"controllers/MedicineController.html":{}}}],["param('orderid",{"_index":770,"title":{},"body":{"controllers/OrdersController.html":{}}}],["param('shopid",{"_index":891,"title":{},"body":{"controllers/StocksController.html":{}}}],["param('stockid",{"_index":896,"title":{},"body":{"controllers/StocksController.html":{}}}],["parameters",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["passport",{"_index":571,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":569,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":562,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateShopDto.html":{},"classes/LoginDto.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["passwordmatched",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload",{"_index":567,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":369,"title":{},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"index.html":{}}}],["payment_method_types",{"_index":470,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["pending",{"_index":463,"title":{},"body":{"injectables/CheckoutService.html":{},"classes/CreateOrderDto.html":{},"classes/Order.html":{},"miscellaneous/enumerations.html":{}}}],["please",{"_index":359,"title":{},"body":{"classes/CheckEmailDto.html":{},"classes/CreateShopDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{}}}],["pnpm",{"_index":1035,"title":{},"body":{"index.html":{}}}],["port",{"_index":1058,"title":{},"body":{"index.html":{}}}],["post",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CheckoutController.html":{},"controllers/MedicineController.html":{},"controllers/OrdersController.html":{},"controllers/StocksController.html":{},"index.html":{}}}],["post('/check",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/login",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signup",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@useguards(undefined",{"_index":609,"title":{},"body":{"controllers/MedicineController.html":{}}}],["postalcode",{"_index":949,"title":{},"body":{"classes/User.html":{}}}],["prefer",{"_index":1037,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CheckoutController.html":{},"controllers/MedicineController.html":{},"controllers/OrdersController.html":{},"controllers/StocksController.html":{}}}],["price",{"_index":336,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/Medicine.html":{},"classes/UpdateMedicineDto.html":{}}}],["price_data",{"_index":477,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["priceincents",{"_index":474,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["private",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{},"injectables/StocksService.html":{}}}],["process",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{}}}],["process.env.jwt_expires_in",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_secret",{"_index":576,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["processing",{"_index":457,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["product_data",{"_index":480,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["promise",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["prop",{"_index":584,"title":{},"body":{"classes/Medicine.html":{},"classes/Order.html":{},"classes/Shop.html":{},"classes/Stock.html":{},"classes/User.html":{}}}],["prop(['string",{"_index":586,"title":{},"body":{"classes/Medicine.html":{}}}],["prop([string",{"_index":597,"title":{},"body":{"classes/Medicine.html":{}}}],["prop({unique",{"_index":822,"title":{},"body":{"classes/Shop.html":{},"classes/User.html":{}}}],["properties",{"_index":332,"title":{"properties.html":{}},"body":{"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"classes/Order.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{},"properties.html":{}}}],["provided",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"modules/StocksModule.html":{},"overview.html":{}}}],["providing",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{}}}],["put",{"_index":637,"title":{},"body":{"controllers/MedicineController.html":{},"controllers/OrdersController.html":{},"controllers/StocksController.html":{},"index.html":{}}}],["put(':id",{"_index":661,"title":{},"body":{"controllers/MedicineController.html":{}}}],["put(':id')@useguards(undefined",{"_index":633,"title":{},"body":{"controllers/MedicineController.html":{}}}],["put(':orderid",{"_index":756,"title":{},"body":{"controllers/OrdersController.html":{}}}],["put(':stockid",{"_index":881,"title":{},"body":{"controllers/StocksController.html":{}}}],["quantity",{"_index":337,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateStockDto.html":{},"classes/Stock.html":{},"classes/UpdateStockDto.html":{}}}],["query",{"_index":623,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/StocksController.html":{}}}],["query('medicineid",{"_index":902,"title":{},"body":{"controllers/StocksController.html":{}}}],["query('medicinename",{"_index":900,"title":{},"body":{"controllers/StocksController.html":{}}}],["query('shopid",{"_index":903,"title":{},"body":{"controllers/StocksController.html":{}}}],["queryparams",{"_index":622,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["r",{"_index":494,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["read",{"_index":1076,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CreateShopDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"controllers/StocksController.html":{}}}],["redirectbaseurl",{"_index":421,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["reflect",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":706,"title":{},"body":{"injectables/MedicineService.html":{}}}],["register",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerasync",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["registering",{"_index":784,"title":{},"body":{"modules/OrdersModule.html":{}}}],["registershop",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registershop(createshopdto",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["related",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/OrdersModule.html":{}}}],["remove",{"_index":1051,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1080,"title":{},"body":{"index.html":{}}}],["requested",{"_index":630,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["reset",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"modules/StocksModule.html":{},"overview.html":{}}}],["results",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"modules/StocksModule.html":{},"injectables/StocksService.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["return",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["role",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["roledto",{"_index":840,"title":{},"body":{"classes/SignUpDto.html":{},"miscellaneous/enumerations.html":{}}}],["root",{"_index":1055,"title":{},"body":{"index.html":{}}}],["route",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["routes",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/CheckoutController.html":{},"controllers/MedicineController.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"index.html":{}}}],["run",{"_index":1040,"title":{},"body":{"index.html":{}}}],["running",{"_index":1048,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["savedorder",{"_index":808,"title":{},"body":{"injectables/OrdersService.html":{}}}],["savedstock",{"_index":924,"title":{},"body":{"injectables/StocksService.html":{}}}],["schema",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{},"classes/Medicine.html":{},"modules/MedicineModule.html":{},"classes/Order.html":{},"modules/OrdersModule.html":{},"classes/Shop.html":{},"classes/Stock.html":{},"modules/StocksModule.html":{},"classes/User.html":{}}}],["schema/medicine.schema",{"_index":643,"title":{},"body":{"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{}}}],["schema/order.schema",{"_index":760,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["schema/shop.schema",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["schema/stock.schema",{"_index":886,"title":{},"body":{"controllers/StocksController.html":{},"modules/StocksModule.html":{},"injectables/StocksService.html":{}}}],["schema/user.schema",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["schemafactory",{"_index":594,"title":{},"body":{"classes/Medicine.html":{},"classes/Order.html":{},"classes/Shop.html":{},"classes/Stock.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(medicine",{"_index":599,"title":{},"body":{"classes/Medicine.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(order",{"_index":732,"title":{},"body":{"classes/Order.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(shop",{"_index":833,"title":{},"body":{"classes/Shop.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stock",{"_index":848,"title":{},"body":{"classes/Stock.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":962,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{}}}],["search",{"_index":692,"title":{},"body":{"injectables/MedicineService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"index.html":{}}}],["search/medicine",{"_index":1075,"title":{},"body":{"index.html":{}}}],["searchfilter",{"_index":705,"title":{},"body":{"injectables/MedicineService.html":{}}}],["searchstockbymedicine",{"_index":857,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["searchstockbymedicine(medicinename",{"_index":873,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["searchstockbymedicineidandshopid",{"_index":858,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["searchstockbymedicineidandshopid(medicineid",{"_index":877,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["secret",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":575,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":654,"title":{},"body":{"controllers/MedicineController.html":{},"index.html":{}}}],["services",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":370,"title":{},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{}}}],["set",{"_index":379,"title":{},"body":{"controllers/CheckoutController.html":{}}}],["setup",{"_index":1030,"title":{},"body":{"index.html":{}}}],["shipped",{"_index":730,"title":{},"body":{"classes/Order.html":{},"miscellaneous/enumerations.html":{}}}],["shop",{"_index":150,"title":{"classes/Shop.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"classes/Shop.html":{},"classes/SignUpDto.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["shop._id",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["shop.dto",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["shop.dto.ts",{"_index":538,"title":{},"body":{"classes/CreateShopDto.html":{},"coverage.html":{}}}],["shop.dto.ts:12",{"_index":549,"title":{},"body":{"classes/CreateShopDto.html":{}}}],["shop.dto.ts:16",{"_index":542,"title":{},"body":{"classes/CreateShopDto.html":{}}}],["shop.dto.ts:20",{"_index":543,"title":{},"body":{"classes/CreateShopDto.html":{}}}],["shop.dto.ts:24",{"_index":541,"title":{},"body":{"classes/CreateShopDto.html":{}}}],["shop.dto.ts:29",{"_index":548,"title":{},"body":{"classes/CreateShopDto.html":{}}}],["shop.dto.ts:33",{"_index":540,"title":{},"body":{"classes/CreateShopDto.html":{}}}],["shop.dto.ts:37",{"_index":545,"title":{},"body":{"classes/CreateShopDto.html":{}}}],["shop.dto.ts:41",{"_index":546,"title":{},"body":{"classes/CreateShopDto.html":{}}}],["shop.lat",{"_index":511,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["shop.lng",{"_index":512,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["shop.name",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["shopid",{"_index":556,"title":{},"body":{"classes/CreateStockDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"classes/UpdateStockDto.html":{}}}],["shoplogin",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["shoplogin(logindto",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["shoplogindto",{"_index":153,"title":{"classes/ShopLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"coverage.html":{}}}],["shopmodel",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["shopname",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateShopDto.html":{},"classes/Shop.html":{}}}],["shopowner",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["shopowner._id",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["shopowner.password",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["shops",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CheckoutService.html":{},"index.html":{}}}],["shopschema",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{},"classes/Shop.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shopuser",{"_index":578,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["side",{"_index":1031,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(signupdto",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdto",{"_index":156,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["single",{"_index":1062,"title":{},"body":{"index.html":{}}}],["sk_test_51o7blti3fhuzllhi9fioigdlks47o5duvu0uqxtm6fyudnwldcxtg5aimqzaquxyexuxybltbssy0c4fknv7qpgs00xk9bfdbr",{"_index":439,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["skip",{"_index":703,"title":{},"body":{"injectables/MedicineService.html":{}}}],["skip(skip",{"_index":711,"title":{},"body":{"injectables/MedicineService.html":{}}}],["sort",{"_index":818,"title":{},"body":{"injectables/OrdersService.html":{}}}],["sorted",{"_index":800,"title":{},"body":{"injectables/OrdersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"modules/StocksModule.html":{},"injectables/StocksService.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{}}}],["specific",{"_index":655,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"index.html":{}}}],["specified",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["src/.../create",{"_index":1016,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":1021,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../medicine.schema.ts",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../order.schema.ts",{"_index":1017,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../shop.schema.ts",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../signup",{"_index":1018,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../stock.schema.ts",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1019,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../utility.ts",{"_index":1022,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:12",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":93,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:8",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:102",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:109",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:114",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:33",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:45",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:58",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:78",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:95",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":419,"title":{},"body":{"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{}}}],["src/auth/auth.module.ts",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service",{"_index":442,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["src/auth/auth.service.ts",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:111",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:125",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:135",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:200",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:229",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:233",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:38",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:77",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/check",{"_index":355,"title":{},"body":{"classes/CheckEmailDto.html":{},"coverage.html":{}}}],["src/auth/dto/create",{"_index":537,"title":{},"body":{"classes/CreateShopDto.html":{},"coverage.html":{}}}],["src/auth/dto/login",{"_index":581,"title":{},"body":{"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/signup",{"_index":835,"title":{},"body":{"classes/SignUpDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/guards/jwt.strategy.ts",{"_index":560,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.strategy.ts:13",{"_index":564,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/guards/jwt.strategy.ts:24",{"_index":566,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/schema/shop.schema",{"_index":443,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["src/auth/schema/shop.schema.ts",{"_index":820,"title":{},"body":{"classes/Shop.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/schema/shop.schema.ts:10",{"_index":825,"title":{},"body":{"classes/Shop.html":{}}}],["src/auth/schema/shop.schema.ts:13",{"_index":826,"title":{},"body":{"classes/Shop.html":{}}}],["src/auth/schema/shop.schema.ts:16",{"_index":824,"title":{},"body":{"classes/Shop.html":{}}}],["src/auth/schema/shop.schema.ts:19",{"_index":829,"title":{},"body":{"classes/Shop.html":{}}}],["src/auth/schema/shop.schema.ts:22",{"_index":821,"title":{},"body":{"classes/Shop.html":{}}}],["src/auth/schema/shop.schema.ts:25",{"_index":827,"title":{},"body":{"classes/Shop.html":{}}}],["src/auth/schema/shop.schema.ts:28",{"_index":828,"title":{},"body":{"classes/Shop.html":{}}}],["src/auth/schema/shop.schema.ts:7",{"_index":830,"title":{},"body":{"classes/Shop.html":{}}}],["src/auth/schema/user.schema.ts",{"_index":948,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/auth/schema/user.schema.ts:19",{"_index":952,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schema/user.schema.ts:22",{"_index":953,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schema/user.schema.ts:25",{"_index":951,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schema/user.schema.ts:28",{"_index":956,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schema/user.schema.ts:31",{"_index":950,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schema/user.schema.ts:34",{"_index":957,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schema/user.schema.ts:37",{"_index":959,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schema/user.schema.ts:40",{"_index":954,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schema/user.schema.ts:43",{"_index":955,"title":{},"body":{"classes/User.html":{}}}],["src/checkout/checkout.controller.ts",{"_index":365,"title":{},"body":{"controllers/CheckoutController.html":{},"coverage.html":{}}}],["src/checkout/checkout.controller.ts:20",{"_index":368,"title":{},"body":{"controllers/CheckoutController.html":{}}}],["src/checkout/checkout.module.ts",{"_index":416,"title":{},"body":{"modules/CheckoutModule.html":{}}}],["src/checkout/checkout.service.ts",{"_index":420,"title":{},"body":{"injectables/CheckoutService.html":{},"coverage.html":{}}}],["src/checkout/checkout.service.ts:104",{"_index":435,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["src/checkout/checkout.service.ts:15",{"_index":440,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["src/checkout/checkout.service.ts:18",{"_index":427,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["src/checkout/checkout.service.ts:31",{"_index":428,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["src/checkout/checkout.service.ts:76",{"_index":430,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["src/checkout/dto/checkout",{"_index":383,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"coverage.html":{}}}],["src/helper/utility",{"_index":445,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["src/helper/utility.ts",{"_index":974,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main.ts",{"_index":976,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/medicine/dto/create",{"_index":514,"title":{},"body":{"classes/CreateMedicineDto.html":{},"coverage.html":{}}}],["src/medicine/dto/update",{"_index":932,"title":{},"body":{"classes/UpdateMedicineDto.html":{},"coverage.html":{}}}],["src/medicine/medicine.controller.ts",{"_index":601,"title":{},"body":{"controllers/MedicineController.html":{},"coverage.html":{}}}],["src/medicine/medicine.controller.ts:36",{"_index":621,"title":{},"body":{"controllers/MedicineController.html":{}}}],["src/medicine/medicine.controller.ts:59",{"_index":629,"title":{},"body":{"controllers/MedicineController.html":{}}}],["src/medicine/medicine.controller.ts:70",{"_index":610,"title":{},"body":{"controllers/MedicineController.html":{}}}],["src/medicine/medicine.controller.ts:82",{"_index":634,"title":{},"body":{"controllers/MedicineController.html":{}}}],["src/medicine/medicine.controller.ts:96",{"_index":616,"title":{},"body":{"controllers/MedicineController.html":{}}}],["src/medicine/medicine.module.ts",{"_index":670,"title":{},"body":{"modules/MedicineModule.html":{}}}],["src/medicine/medicine.service.ts",{"_index":673,"title":{},"body":{"injectables/MedicineService.html":{},"coverage.html":{}}}],["src/medicine/medicine.service.ts:118",{"_index":682,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/medicine/medicine.service.ts:130",{"_index":678,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/medicine/medicine.service.ts:17",{"_index":676,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/medicine/medicine.service.ts:27",{"_index":681,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/medicine/medicine.service.ts:39",{"_index":683,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/medicine/medicine.service.ts:81",{"_index":684,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/medicine/medicine.service.ts:96",{"_index":685,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/medicine/schema/medicine.schema.ts",{"_index":583,"title":{},"body":{"classes/Medicine.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/medicine/schema/medicine.schema.ts:10",{"_index":593,"title":{},"body":{"classes/Medicine.html":{}}}],["src/medicine/schema/medicine.schema.ts:13",{"_index":585,"title":{},"body":{"classes/Medicine.html":{}}}],["src/medicine/schema/medicine.schema.ts:16",{"_index":592,"title":{},"body":{"classes/Medicine.html":{}}}],["src/medicine/schema/medicine.schema.ts:19",{"_index":588,"title":{},"body":{"classes/Medicine.html":{}}}],["src/medicine/schema/medicine.schema.ts:22",{"_index":587,"title":{},"body":{"classes/Medicine.html":{}}}],["src/medicine/schema/medicine.schema.ts:25",{"_index":590,"title":{},"body":{"classes/Medicine.html":{}}}],["src/medicine/schema/medicine.schema.ts:28",{"_index":591,"title":{},"body":{"classes/Medicine.html":{}}}],["src/medicine/schema/medicine.schema.ts:7",{"_index":589,"title":{},"body":{"classes/Medicine.html":{}}}],["src/orders/dto/cartitem",{"_index":330,"title":{},"body":{"classes/CartItemDto.html":{},"coverage.html":{}}}],["src/orders/dto/create",{"_index":525,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/orders/dto/update",{"_index":941,"title":{},"body":{"classes/UpdateOrderStatusDto.html":{},"coverage.html":{}}}],["src/orders/orders.controller.ts",{"_index":734,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/orders/orders.controller.ts:100",{"_index":745,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:113",{"_index":753,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:30",{"_index":742,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:43",{"_index":750,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:57",{"_index":749,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:76",{"_index":757,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.module",{"_index":418,"title":{},"body":{"modules/CheckoutModule.html":{}}}],["src/orders/orders.module.ts",{"_index":779,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/orders.service",{"_index":441,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["src/orders/orders.service.ts",{"_index":789,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/orders/orders.service.ts:13",{"_index":792,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:24",{"_index":794,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:38",{"_index":797,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:51",{"_index":796,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:65",{"_index":803,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:83",{"_index":795,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:96",{"_index":798,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/schema/order.schema",{"_index":376,"title":{},"body":{"controllers/CheckoutController.html":{}}}],["src/orders/schema/order.schema.ts",{"_index":721,"title":{},"body":{"classes/Order.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/orders/schema/order.schema.ts:16",{"_index":724,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/schema/order.schema.ts:19",{"_index":726,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/schema/order.schema.ts:22",{"_index":725,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/schema/order.schema.ts:25",{"_index":723,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/schema/order.schema.ts:28",{"_index":722,"title":{},"body":{"classes/Order.html":{}}}],["src/stocks/dto/create",{"_index":553,"title":{},"body":{"classes/CreateStockDto.html":{},"coverage.html":{}}}],["src/stocks/dto/update",{"_index":944,"title":{},"body":{"classes/UpdateStockDto.html":{},"coverage.html":{}}}],["src/stocks/schema/stock.schema",{"_index":783,"title":{},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["src/stocks/schema/stock.schema.ts",{"_index":844,"title":{},"body":{"classes/Stock.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stocks/schema/stock.schema.ts:11",{"_index":846,"title":{},"body":{"classes/Stock.html":{}}}],["src/stocks/schema/stock.schema.ts:14",{"_index":847,"title":{},"body":{"classes/Stock.html":{}}}],["src/stocks/schema/stock.schema.ts:8",{"_index":845,"title":{},"body":{"classes/Stock.html":{}}}],["src/stocks/stocks.controller.ts",{"_index":850,"title":{},"body":{"controllers/StocksController.html":{},"coverage.html":{}}}],["src/stocks/stocks.controller.ts:108",{"_index":878,"title":{},"body":{"controllers/StocksController.html":{}}}],["src/stocks/stocks.controller.ts:23",{"_index":861,"title":{},"body":{"controllers/StocksController.html":{}}}],["src/stocks/stocks.controller.ts:32",{"_index":866,"title":{},"body":{"controllers/StocksController.html":{}}}],["src/stocks/stocks.controller.ts:41",{"_index":869,"title":{},"body":{"controllers/StocksController.html":{}}}],["src/stocks/stocks.controller.ts:52",{"_index":872,"title":{},"body":{"controllers/StocksController.html":{}}}],["src/stocks/stocks.controller.ts:65",{"_index":882,"title":{},"body":{"controllers/StocksController.html":{}}}],["src/stocks/stocks.controller.ts:84",{"_index":864,"title":{},"body":{"controllers/StocksController.html":{}}}],["src/stocks/stocks.controller.ts:97",{"_index":875,"title":{},"body":{"controllers/StocksController.html":{}}}],["src/stocks/stocks.module.ts",{"_index":908,"title":{},"body":{"modules/StocksModule.html":{}}}],["src/stocks/stocks.service.ts",{"_index":910,"title":{},"body":{"injectables/StocksService.html":{},"coverage.html":{}}}],["src/stocks/stocks.service.ts:13",{"_index":912,"title":{},"body":{"injectables/StocksService.html":{}}}],["src/stocks/stocks.service.ts:16",{"_index":913,"title":{},"body":{"injectables/StocksService.html":{}}}],["src/stocks/stocks.service.ts:26",{"_index":915,"title":{},"body":{"injectables/StocksService.html":{}}}],["src/stocks/stocks.service.ts:34",{"_index":917,"title":{},"body":{"injectables/StocksService.html":{}}}],["src/stocks/stocks.service.ts:46",{"_index":916,"title":{},"body":{"injectables/StocksService.html":{}}}],["src/stocks/stocks.service.ts:54",{"_index":920,"title":{},"body":{"injectables/StocksService.html":{}}}],["src/stocks/stocks.service.ts:71",{"_index":914,"title":{},"body":{"injectables/StocksService.html":{}}}],["src/stocks/stocks.service.ts:83",{"_index":918,"title":{},"body":{"injectables/StocksService.html":{}}}],["src/stocks/stocks.service.ts:91",{"_index":919,"title":{},"body":{"injectables/StocksService.html":{}}}],["start",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"index.html":{}}}],["start:dev",{"_index":1057,"title":{},"body":{"index.html":{}}}],["started",{"_index":1026,"title":{"index.html":{}},"body":{"index.html":{}}}],["statements",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["status.dto.ts",{"_index":942,"title":{},"body":{"classes/UpdateOrderStatusDto.html":{},"coverage.html":{}}}],["status.dto.ts:7",{"_index":943,"title":{},"body":{"classes/UpdateOrderStatusDto.html":{}}}],["stock",{"_index":781,"title":{"classes/Stock.html":{}},"body":{"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"modules/StocksModule.html":{},"injectables/StocksService.html":{},"coverage.html":{},"index.html":{}}}],["stock.dto",{"_index":885,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["stock.dto.ts",{"_index":554,"title":{},"body":{"classes/CreateStockDto.html":{},"classes/UpdateStockDto.html":{},"coverage.html":{}}}],["stock.dto.ts:10",{"_index":558,"title":{},"body":{"classes/CreateStockDto.html":{}}}],["stock.dto.ts:11",{"_index":947,"title":{},"body":{"classes/UpdateStockDto.html":{}}}],["stock.dto.ts:14",{"_index":559,"title":{},"body":{"classes/CreateStockDto.html":{}}}],["stock.dto.ts:5",{"_index":945,"title":{},"body":{"classes/UpdateStockDto.html":{}}}],["stock.dto.ts:6",{"_index":557,"title":{},"body":{"classes/CreateStockDto.html":{}}}],["stock.dto.ts:8",{"_index":946,"title":{},"body":{"classes/UpdateStockDto.html":{}}}],["stock.name",{"_index":786,"title":{},"body":{"modules/OrdersModule.html":{},"modules/StocksModule.html":{}}}],["stockid",{"_index":865,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["stockmodel",{"_index":791,"title":{},"body":{"injectables/OrdersService.html":{},"injectables/StocksService.html":{}}}],["stocks",{"_index":851,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{},"index.html":{}}}],["stocks.controller",{"_index":909,"title":{},"body":{"modules/StocksModule.html":{}}}],["stocks.service",{"_index":884,"title":{},"body":{"controllers/StocksController.html":{},"modules/StocksModule.html":{}}}],["stocks/:stockid",{"_index":1073,"title":{},"body":{"index.html":{}}}],["stocks/search/medicine",{"_index":1074,"title":{},"body":{"index.html":{}}}],["stocks/shop/:shopid",{"_index":1072,"title":{},"body":{"index.html":{}}}],["stocks/stocks.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["stockschema",{"_index":782,"title":{},"body":{"modules/OrdersModule.html":{},"classes/Stock.html":{},"modules/StocksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stockscontroller",{"_index":849,"title":{"controllers/StocksController.html":{}},"body":{"controllers/StocksController.html":{},"modules/StocksModule.html":{},"coverage.html":{}}}],["stocksmodule",{"_index":45,"title":{"modules/StocksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StocksModule.html":{},"modules.html":{},"overview.html":{}}}],["stocksservice",{"_index":883,"title":{"injectables/StocksService.html":{}},"body":{"controllers/StocksController.html":{},"modules/StocksModule.html":{},"injectables/StocksService.html":{},"coverage.html":{},"overview.html":{}}}],["strategy",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["strength",{"_index":518,"title":{},"body":{"classes/CreateMedicineDto.html":{},"classes/Medicine.html":{},"classes/UpdateMedicineDto.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{}}}],["stripe",{"_index":431,"title":{},"body":{"injectables/CheckoutService.html":{},"dependencies.html":{}}}],["stripe(this.stripesecretkey",{"_index":468,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["stripe/stripe",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["stripeinstance",{"_index":467,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["stripeinstance.checkout.sessions.create",{"_index":469,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["stripesecretkey",{"_index":422,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["success_url",{"_index":485,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["super",{"_index":572,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1082,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1083,"title":{},"body":{"modules.html":{}}}],["table",{"_index":980,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["thats",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["then((shop",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.appservice.gethello",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.checkduplicateemail",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.finduserbyid(id",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getallshops",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CheckoutService.html":{}}}],["this.authservice.getshopbyid(id",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(logindto",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.registershop(createshopdto",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.shoplogin(logindto",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdto",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.checkoutservice.checkout(checkoutdto",{"_index":382,"title":{},"body":{"controllers/CheckoutController.html":{}}}],["this.createstripesession(checkoutdto",{"_index":449,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["this.findclosestshop",{"_index":455,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["this.jwtservice.sign",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.medicinemodel",{"_index":709,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.medicinemodel(createmedicinedto",{"_index":688,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.medicinemodel.countdocuments().exec",{"_index":720,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.medicinemodel.findbyid(id).exec",{"_index":714,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.medicinemodel.findbyidandremove(id",{"_index":719,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.medicinemodel.findbyidandupdate",{"_index":717,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.medicineservice.createmedicine(createmedicinedto",{"_index":660,"title":{},"body":{"controllers/MedicineController.html":{}}}],["this.medicineservice.deletemedicine(id",{"_index":666,"title":{},"body":{"controllers/MedicineController.html":{}}}],["this.medicineservice.findallmedicinebyquery(queryparams",{"_index":649,"title":{},"body":{"controllers/MedicineController.html":{}}}],["this.medicineservice.findonemedicine(id",{"_index":658,"title":{},"body":{"controllers/MedicineController.html":{}}}],["this.medicineservice.updatemedicine(id",{"_index":663,"title":{},"body":{"controllers/MedicineController.html":{}}}],["this.ordermodel",{"_index":814,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel(createorderdto",{"_index":807,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel.find",{"_index":817,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel.find().exec",{"_index":811,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel.findbyid(orderid).exec",{"_index":812,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel.findbyidandremove(orderid).exec",{"_index":816,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersservice.createorder(createorderdto",{"_index":763,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.createorder(orderdto",{"_index":466,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["this.ordersservice.deleteorder(orderid",{"_index":773,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.findorderbyid(orderid",{"_index":768,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.getallorders",{"_index":765,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.getordersbyuserid(userid",{"_index":775,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.updateorder",{"_index":771,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.redirectbaseurl}/cart",{"_index":488,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["this.redirectbaseurl}/cart/success",{"_index":486,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["this.shopmodel",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shopmodel.create",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shopmodel.find().exec",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shopmodel.findbyid(id",{"_index":579,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.shopmodel.findbyid(id).exec",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.shopmodel.findone",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.stockmodel",{"_index":929,"title":{},"body":{"injectables/StocksService.html":{}}}],["this.stockmodel(createstockdto",{"_index":923,"title":{},"body":{"injectables/StocksService.html":{}}}],["this.stockmodel.find",{"_index":928,"title":{},"body":{"injectables/StocksService.html":{}}}],["this.stockmodel.find().exec",{"_index":926,"title":{},"body":{"injectables/StocksService.html":{}}}],["this.stockmodel.findbyid(stockid).exec",{"_index":927,"title":{},"body":{"injectables/StocksService.html":{}}}],["this.stockmodel.findbyidandremove(stockid).exec",{"_index":931,"title":{},"body":{"injectables/StocksService.html":{}}}],["this.stocksservice.createstock(createstockdto",{"_index":889,"title":{},"body":{"controllers/StocksController.html":{}}}],["this.stocksservice.deletestock(stockid",{"_index":899,"title":{},"body":{"controllers/StocksController.html":{}}}],["this.stocksservice.getallstocks",{"_index":890,"title":{},"body":{"controllers/StocksController.html":{}}}],["this.stocksservice.getallstocksbyshopid(shopid",{"_index":892,"title":{},"body":{"controllers/StocksController.html":{}}}],["this.stocksservice.getstockbyid(stockid",{"_index":894,"title":{},"body":{"controllers/StocksController.html":{}}}],["this.stocksservice.searchstockbymedicine(medicinename",{"_index":901,"title":{},"body":{"controllers/StocksController.html":{}}}],["this.stocksservice.searchstockbymedicineidandshopid",{"_index":904,"title":{},"body":{"controllers/StocksController.html":{}}}],["this.stocksservice.updatestock",{"_index":897,"title":{},"body":{"controllers/StocksController.html":{}}}],["this.usermodel.create",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findbyid(id",{"_index":577,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.usermodel.findbyid(id).exec",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findone",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["throws",{"_index":446,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["time",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{}}}],["times",{"_index":338,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{}}}],["timestamps",{"_index":596,"title":{},"body":{"classes/Medicine.html":{},"classes/Order.html":{},"classes/Shop.html":{},"classes/Stock.html":{},"classes/User.html":{}}}],["token",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["total",{"_index":679,"title":{},"body":{"injectables/MedicineService.html":{}}}],["totalamount",{"_index":339,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{}}}],["transformer",{"_index":399,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateOrderDto.html":{},"dependencies.html":{}}}],["true",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateOrderDto.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/Stock.html":{},"injectables/StocksService.html":{},"classes/User.html":{}}}],["true})@type(undefined",{"_index":393,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CreateOrderDto.html":{}}}],["try",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["type",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/Shop.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/Stock.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["unauthorizedexception",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('user",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":823,"title":{},"body":{"classes/Shop.html":{},"classes/User.html":{}}}],["unique",{"_index":831,"title":{},"body":{"classes/Shop.html":{},"classes/User.html":{}}}],["unit_amount",{"_index":482,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["unknown",{"_index":568,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":1091,"title":{},"body":{"properties.html":{}}}],["update",{"_index":635,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/StocksController.html":{},"injectables/StocksService.html":{},"index.html":{}}}],["updated",{"_index":636,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/UpdateMedicineDto.html":{}}}],["updatedmedicine",{"_index":716,"title":{},"body":{"injectables/MedicineService.html":{}}}],["updatemedicine",{"_index":607,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["updatemedicine(id",{"_index":631,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["updatemedicinedto",{"_index":632,"title":{"classes/UpdateMedicineDto.html":{}},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"classes/UpdateMedicineDto.html":{},"coverage.html":{}}}],["updateorder",{"_index":740,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["updateorder(orderid",{"_index":754,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["updateorderdto",{"_index":755,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["updateorderstatusdto",{"_index":940,"title":{"classes/UpdateOrderStatusDto.html":{}},"body":{"classes/UpdateOrderStatusDto.html":{},"coverage.html":{}}}],["updatestock",{"_index":859,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["updatestock(stockid",{"_index":879,"title":{},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{}}}],["updatestockdto",{"_index":880,"title":{"classes/UpdateStockDto.html":{}},"body":{"controllers/StocksController.html":{},"injectables/StocksService.html":{},"classes/UpdateStockDto.html":{},"coverage.html":{}}}],["url",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{}}}],["usefactory",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":639,"title":{},"body":{"controllers/MedicineController.html":{}}}],["useguards(authguard",{"_index":647,"title":{},"body":{"controllers/MedicineController.html":{}}}],["user",{"_index":130,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/User.html":{},"coverage.html":{}}}],["user._id",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{}}}],["user.password",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":387,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateOrderDto.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"index.html":{}}}],["usermodel",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userrole",{"_index":958,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["userschema",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user|null",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["using",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"index.html":{}}}],["utilizes",{"_index":1034,"title":{},"body":{"index.html":{}}}],["validate",{"_index":563,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":565,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":398,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateOrderDto.html":{}}}],["validator",{"_index":354,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/CreateShopDto.html":{},"classes/CreateStockDto.html":{},"classes/LoginDto.html":{},"classes/ShopLoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/UpdateOrderStatusDto.html":{},"classes/UpdateStockDto.html":{},"dependencies.html":{}}}],["value",{"_index":437,"title":{},"body":{"injectables/CheckoutService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{}}}],["variables",{"_index":1093,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1088,"title":{},"body":{"properties.html":{}}}],["whether",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["whole",{"_index":938,"title":{},"body":{"classes/UpdateMedicineDto.html":{}}}],["world",{"_index":96,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"modules/StocksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        /**\n * App Controller\n */\nimport { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCheckoutModule\n\nCheckoutModule\n\nAppModule -->\n\nCheckoutModule->AppModule\n\n\n\n\n\nMedicineModule\n\nMedicineModule\n\nAppModule -->\n\nMedicineModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nStocksModule\n\nStocksModule\n\nAppModule -->\n\nStocksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CheckoutModule\n                        \n                        \n                            MedicineModule\n                        \n                        \n                            OrdersModule\n                        \n                        \n                            StocksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * @module AppModule\n * @description Main application module.\n */\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from './auth/auth.module';\nimport { CheckoutModule } from './checkout/checkout.module';\nimport { MedicineModule } from './medicine/medicine.module';\nimport { OrdersModule } from './orders/orders.module';\nimport { StocksModule } from './stocks/stocks.module';\n\n@Module({\n  imports: [\n    /**\n     * Configure the .env file as a global configuration.\n     */\n    ConfigModule.forRoot({\n      envFilePath: '.env',\n      isGlobal: true,\n    }),\n    /**\n     * MongooseModule for connecting to the MongoDB database using the URL from the .env file.\n     */\n    MongooseModule.forRoot(process.env.MONGODB_URL),\n    /**\n     * AuthModule for handling authentication-related features.\n     */\n    AuthModule,\n    /**\n     * MedicineModule for managing medicine-related features.\n     */\n    MedicineModule,\n    /**\n     * OrdersModule for managing orders-related features.\n     */\n    OrdersModule,\n    /**\n     * CheckoutModule for handling the checkout process.\n     */\n    CheckoutModule,\n    StocksModule,\n  ],\n  controllers: [\n    /**\n     * AppController for the main application routes.\n     */\n    AppController,\n  ],\n  providers: [\n    /**\n     * AppService for providing application-level services.\n     */\n    AppService,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                checkDuplicateEmail\n                            \n                            \n                                    \n                                    Async\n                                findUserById\n                            \n                            \n                                    \n                                getAllShops\n                            \n                            \n                                    \n                                getShopById\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                registerShop\n                            \n                            \n                                    \n                                shopLogin\n                            \n                            \n                                    \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        checkDuplicateEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkDuplicateEmail(checkEmailDto: CheckEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/check-email')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                checkEmailDto\n                                            \n                                                            CheckEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for checking duplicate email.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nAn object indicating whether the email is a duplicate.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/user/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe user with the specified ID.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAllShops\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllShops()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/shops')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getShopById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getShopById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/shop/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for user login.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nAn object containing an access token and expiration time.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        registerShop\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerShop(createShopDto: CreateShopDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register-shop')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createShopDto\n                                            \n                                                            CreateShopDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shopLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    shopLogin(loginDto: ShopLoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login-shop')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            ShopLoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(signupDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signup')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                signupDto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for user signup.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nAn object containing an access token and expiration time.\n\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        /**\n * @module AuthController\n * @description Controller for authentication-related routes.\n */\nimport {\n  Body,\n  ConflictException,\n  Controller,\n  Get,\n  InternalServerErrorException,\n  NotFoundException,\n  Param,\n  Post,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LoginDto, ShopLoginDto } from './dto/login-dto';\nimport { SignUpDto } from './dto/signup-dto';\nimport { User } from './schema/user.schema';\nimport { CheckEmailDto } from './dto/check-email.dto';\nimport { Shop } from './schema/shop.schema';\nimport { CreateShopDto } from './dto/create-shop.dto';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * @description Signup Route\n   * @param signupDto - The DTO for user signup.\n   * @returns {Object} - An object containing an access token and expiration time.\n   */\n  @Post('/signup')\n  signup(\n    @Body() signupDto: SignUpDto,\n  ): Promise {\n    return this.authService.signup(signupDto);\n  }\n\n  /**\n   * @description Login Route\n   * @param loginDto - The DTO for user login.\n   * @returns {Object} - An object containing an access token and expiration time.\n   */\n  @Post('/login')\n  login(\n    @Body() loginDto: LoginDto,\n  ): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  /**\n   * @description Find User by ID Route\n   * @param id - The ID of the user to find.\n   * @returns {User} - The user with the specified ID.\n   */\n\n  @Get('/user/:id')\n  async findUserById(@Param('id') id: string): Promise {\n    try {\n      const user = await this.authService.findUserById(id);\n\n      if (!user) {\n        throw new NotFoundException('User not found');\n      }\n\n      return user;\n    } catch (error) {\n      throw new InternalServerErrorException('Failed to retrieve user');\n    }\n  }\n\n  /**\n   * @description Check Duplicate Email Route\n   * @param checkEmailDto - The DTO for checking duplicate email.\n   * @returns {Object} - An object indicating whether the email is a duplicate.\n   */\n  @Post('/check-email')\n  async checkDuplicateEmail(\n    @Body() checkEmailDto: CheckEmailDto,\n  ): Promise {\n    const isDuplicate = await this.authService.checkDuplicateEmail(\n      checkEmailDto.email,\n    );\n\n    if (isDuplicate) {\n      throw new ConflictException('Email is already in use');\n    }\n\n    return { isDuplicate: false };\n  }\n\n  // ! SHOPS\n\n  @Post('/register-shop')\n  registerShop(\n    @Body() createShopDto: CreateShopDto,\n  ): Promise {\n    return this.authService.registerShop(createShopDto);\n  }\n\n  @Post('/login-shop')\n  shopLogin(\n    @Body() loginDto: ShopLoginDto,\n  ): Promise {\n    return this.authService.shopLogin(loginDto);\n  }\n\n  @Get('/shops')\n  getAllShops(): Promise {\n    return this.authService.getAllShops();\n  }\n\n  @Get('/shop/:id')\n  getShopById(@Param('id') id: string): Promise {\n    return this.authService.getShopById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * Auth Module\n */\nimport { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\n\nimport { ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\nimport { User, UserSchema } from './schema/user.schema';\nimport { JwtStrategy } from './Guards/jwt.strategy';\nimport { Shop, ShopSchema } from './schema/shop.schema';\n\n@Module({\n  imports: [\n    // define jtw as strategy\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n    }),\n    // need config variable thats why using registerAsync()\n    JwtModule.registerAsync({\n      inject: [ConfigService], // to access config variable\n      useFactory: (config: ConfigService) => {\n        return {\n          secret: config.get('JWT_SECRET'),\n          signOptions: {\n            expiresIn: config.get('JWT_EXPIRES_IN'),\n          },\n        };\n      },\n    }),\n    // import mongoose schemas\n    MongooseModule.forFeature([\n      {\n        name: User.name,\n        schema: UserSchema,\n      },\n      {\n        name: Shop.name,\n        schema: ShopSchema,\n      },\n    ]),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [JwtStrategy, PassportModule, AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkDuplicateEmail\n                            \n                            \n                                    Async\n                                findUserById\n                            \n                            \n                                    Async\n                                getAllShops\n                            \n                            \n                                    Async\n                                getShopById\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                registerShop\n                            \n                            \n                                    Async\n                                shopLogin\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, shopModel: Model, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shopModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkDuplicateEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkDuplicateEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe email to check for duplication.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nIndicates whether the email is a duplicate.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe user with the specified ID or null if not found.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllShops\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllShops()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:229\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getShopById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getShopById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:233\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for user login.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nAn object containing an access token and expiration time.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerShop\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerShop(createShopDto: CreateShopDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createShopDto\n                                            \n                                                            CreateShopDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        shopLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    shopLogin(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:200\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(signupDto: SignUpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                signupDto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for user signup.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nAn object containing an access token and expiration time.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectModel } from '@nestjs/mongoose';\nimport * as bcrypt from 'bcrypt';\nimport { Model } from 'mongoose';\nimport { LoginDto } from './dto/login-dto';\nimport { SignUpDto } from './dto/signup-dto';\nimport { User } from './schema/user.schema';\nimport { CreateShopDto } from './dto/create-shop.dto';\nimport { Shop } from './schema/shop.schema';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectModel(User.name)\n    private userModel: Model,\n\n    @InjectModel(Shop.name)\n    private shopModel: Model,\n\n    private jwtService: JwtService,\n  ) {}\n\n  /**\n   * @description Signup Route\n   * @param signupDto - The DTO for user signup.\n   * @returns {Object} - An object containing an access token and expiration time.\n   */\n  async signup(\n    signupDto: SignUpDto,\n  ): Promise {\n    const { firstName, lastName, email, password, address, role, lat, lng } =\n      signupDto;\n\n    // Check if a user with the provided email already exists\n    const existingUser = await this.userModel.findOne({ email }).exec();\n    if (existingUser) {\n      throw new ConflictException('Email already in use');\n    }\n\n    // Continue with user creation if email is not in use\n    const hashedPassword = await bcrypt.hash(password, 10);\n    const user = await this.userModel.create({\n      firstName,\n      lastName,\n      email,\n      password: hashedPassword,\n      address,\n      role,\n      lat,\n      lng,\n    });\n\n    const access_token = this.jwtService.sign({\n      id: user._id,\n    });\n\n    const expires_in = process.env.JWT_EXPIRES_IN;\n\n    return { access_token, expires_in };\n  }\n\n  /**\n   * @description Login Route\n   * @param loginDto - The DTO for user login.\n   * @returns {Object} - An object containing an access token and expiration time.\n   */\n  async login(\n    loginDto: LoginDto,\n  ): Promise {\n    // extract data\n    const { email, password } = loginDto;\n\n    const user = await this.userModel.findOne({ email });\n\n    if (!user) {\n      throw new UnauthorizedException('Invalid email or password!');\n    }\n\n    const passwordMatched = await bcrypt.compare(password, user.password);\n\n    if (!passwordMatched) {\n      throw new UnauthorizedException('Invalid email or password!');\n    }\n\n    // assign jwt to user\n    const access_token = this.jwtService.sign({\n      id: user._id,\n    });\n\n    const expires_in = process.env.JWT_EXPIRES_IN;\n\n    // return the token to client\n    return { access_token, expires_in };\n  }\n\n  /**\n   * @description Find User by ID Route\n   * @param id - The ID of the user to find.\n   * @returns {User|null} - The user with the specified ID or null if not found.\n   */\n  async findUserById(id: string): Promise {\n    try {\n      const user = await this.userModel.findById(id).exec();\n      return user;\n    } catch (error) {\n      throw new UnauthorizedException('User not found');\n    }\n  }\n\n  /**\n   * @description Check for Duplicate Email\n   * @param email - The email to check for duplication.\n   * @returns {boolean} - Indicates whether the email is a duplicate.\n   */\n  async checkDuplicateEmail(email: string): Promise {\n    try {\n      const user = await this.userModel.findOne({ email }).exec();\n      return !!user; // Return true if a user with this email already exists\n    } catch (error) {\n      throw new NotFoundException('Failed to check for duplicate email');\n    }\n  }\n\n  // ! SHOP START\n  async registerShop(\n    createShopDto: CreateShopDto,\n  ): Promise {\n    try {\n      const {\n        shopName,\n        firstName,\n        lastName,\n        email,\n        password,\n        address,\n        lat,\n        lng,\n      } = createShopDto;\n\n      console.log(createShopDto);\n\n      const existingUser = await this.shopModel.findOne({ email }).exec();\n\n      if (existingUser) {\n        throw new ConflictException('Email already in use');\n      }\n\n      const hashedPassword = await bcrypt.hash(password, 10);\n\n      // const shop = await this.shopModel.create({\n      //   shopName,\n      //   firstName,\n      //   lastName,\n      //   email,\n      //   password: hashedPassword,\n      //   address,\n      //   lat,\n      //   lng,\n      // });\n\n      return this.shopModel\n        .create({\n          shopName,\n          firstName,\n          lastName,\n          email,\n          password: hashedPassword,\n          address,\n          lat,\n          lng,\n        })\n        .then((shop) => {\n          console.log('Shop created!', shop);\n          const access_token = this.jwtService.sign({ id: shop._id });\n          const expires_in = process.env.JWT_EXPIRES_IN;\n\n          return { access_token, expires_in };\n        });\n\n      // const access_token = this.jwtService.sign({ id: shop._id });\n      // const expires_in = process.env.JWT_EXPIRES_IN;\n\n      // return { access_token, expires_in };\n    } catch (error) {\n      console.error(error);\n      throw new ConflictException('Failed to register the shop');\n    }\n  }\n\n  async shopLogin(\n    loginDto: LoginDto,\n  ): Promise {\n    // extract data\n    const { email, password } = loginDto;\n\n    const shopOwner = await this.shopModel.findOne({ email });\n\n    if (!shopOwner) {\n      throw new UnauthorizedException('Invalid email or password!');\n    }\n\n    const passwordMatched = await bcrypt.compare(password, shopOwner.password);\n\n    if (!passwordMatched) {\n      throw new UnauthorizedException('Invalid email or password!');\n    }\n\n    // assign jwt to shopOwner\n    const access_token = this.jwtService.sign({\n      id: shopOwner._id,\n    });\n\n    const expires_in = process.env.JWT_EXPIRES_IN;\n\n    // return the token to client\n    return { access_token, expires_in };\n  }\n\n  async getAllShops(): Promise {\n    return this.shopModel.find().exec();\n  }\n\n  async getShopById(id: string): Promise {\n    const shop = await this.shopModel.findById(id).exec();\n    if (!shop) {\n      throw new NotFoundException('Shop not found');\n    }\n    return shop;\n  }\n  // ! SHOP END\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartItemDto.html":{"url":"classes/CartItemDto.html","title":"class - CartItemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartItemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/dto/cartItem-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                days\n                            \n                            \n                                    \n                                    \n                                dosage_form\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                times\n                            \n                            \n                                    \n                                    \n                                totalAmount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        days\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dosage_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        times\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CartItemDto {\n  @IsString()\n  @IsNotEmpty()\n  _id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  dosage_form: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  days: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  times: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  quantity: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  price: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  totalAmount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckEmailDto.html":{"url":"classes/CheckEmailDto.html","title":"class - CheckEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/check-email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail({}, {message: 'Please enter correct email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/check-email.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class CheckEmailDto {\n  @IsNotEmpty()\n  @IsEmail({}, { message: 'Please enter correct email' })\n  readonly email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CheckoutController.html":{"url":"controllers/CheckoutController.html","title":"controller - CheckoutController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CheckoutController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/checkout/checkout.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                checkout\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                checkout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        checkout\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkout(checkoutDto: CheckoutDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/checkout/checkout.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                checkoutDto\n                                            \n                                                            CheckoutDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for the checkout process.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An object containing the payment session and order details.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        /**\n * @module CheckoutController\n * @description Controller for checkout routes.\n */\nimport { Body, Controller, Post } from '@nestjs/common';\nimport { CheckoutDto } from './dto/checkout-dto';\nimport { CheckoutService } from './checkout.service';\nimport { Order } from 'src/orders/schema/order.schema';\n\n@Controller('checkout')\nexport class CheckoutController {\n  constructor(private readonly checkoutService: CheckoutService) {}\n\n  /**\n   * @description Initiates the checkout process for a set of items and creates a payment session.\n   * @param {CheckoutDto} checkoutDto - The DTO for the checkout process.\n   * @returns {Promise} An object containing the payment session and order details.\n   */\n  @Post()\n  async checkout(\n    @Body() checkoutDto: CheckoutDto,\n  ): Promise {\n    const { session, order } = await this.checkoutService.checkout(checkoutDto);\n    return { session, order };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckoutDto.html":{"url":"classes/CheckoutDto.html","title":"class - CheckoutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckoutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/checkout/dto/checkout-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                deliveryAddress\n                            \n                            \n                                    \n                                    \n                                deliveryLat\n                            \n                            \n                                    \n                                    \n                                deliveryLng\n                            \n                            \n                                    \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deliveryAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deliveryLat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deliveryLng\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CheckoutItem[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsString,\n  IsNumber,\n  Min,\n  ValidateNested,\n  IsNotEmpty,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class CheckoutItem {\n  @IsString()\n  _id: string;\n\n  @IsString()\n  dosage_form: string;\n\n  @IsString()\n  name: string;\n\n  @IsNumber()\n  @Min(0)\n  price: number;\n\n  @IsNumber()\n  @Min(1)\n  quantity: number;\n\n  @IsNumber()\n  @Min(0)\n  totalAmount: number;\n\n  @IsNumber()\n  @Min(0)\n  days: number;\n\n  @IsNumber()\n  @Min(0)\n  times: number;\n}\n\nexport class CheckoutDto {\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CheckoutItem)\n  items: CheckoutItem[];\n\n  @IsString()\n  userId: string;\n\n  @IsString()\n  @IsNotEmpty()\n  deliveryAddress: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  deliveryLat: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  deliveryLng: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckoutItem.html":{"url":"classes/CheckoutItem.html","title":"class - CheckoutItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckoutItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/checkout/dto/checkout-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                days\n                            \n                            \n                                    \n                                dosage_form\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                times\n                            \n                            \n                                    \n                                    \n                                totalAmount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        days\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dosage_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        times\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsString,\n  IsNumber,\n  Min,\n  ValidateNested,\n  IsNotEmpty,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class CheckoutItem {\n  @IsString()\n  _id: string;\n\n  @IsString()\n  dosage_form: string;\n\n  @IsString()\n  name: string;\n\n  @IsNumber()\n  @Min(0)\n  price: number;\n\n  @IsNumber()\n  @Min(1)\n  quantity: number;\n\n  @IsNumber()\n  @Min(0)\n  totalAmount: number;\n\n  @IsNumber()\n  @Min(0)\n  days: number;\n\n  @IsNumber()\n  @Min(0)\n  times: number;\n}\n\nexport class CheckoutDto {\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CheckoutItem)\n  items: CheckoutItem[];\n\n  @IsString()\n  userId: string;\n\n  @IsString()\n  @IsNotEmpty()\n  deliveryAddress: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  deliveryLat: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  deliveryLng: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CheckoutModule.html":{"url":"modules/CheckoutModule.html","title":"module - CheckoutModule","body":"\n                   \n\n\n\n\n    Modules\n    CheckoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CheckoutModule\n\n\n\ncluster_CheckoutModule_imports\n\n\n\ncluster_CheckoutModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nCheckoutModule\n\nCheckoutModule\n\nCheckoutModule -->\n\nAuthModule->CheckoutModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nCheckoutModule -->\n\nOrdersModule->CheckoutModule\n\n\n\n\n\nCheckoutService\n\nCheckoutService\n\nCheckoutModule -->\n\nCheckoutService->CheckoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/checkout/checkout.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CheckoutService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CheckoutController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OrdersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * Checkout module.\n */\nimport { Module } from '@nestjs/common';\nimport { CheckoutController } from './checkout.controller';\nimport { CheckoutService } from './checkout.service';\nimport { OrdersModule } from 'src/orders/orders.module';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  imports: [OrdersModule, AuthModule],\n  controllers: [CheckoutController],\n  providers: [CheckoutService],\n})\nexport class CheckoutModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CheckoutService.html":{"url":"injectables/CheckoutService.html","title":"injectable - CheckoutService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CheckoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/checkout/checkout.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                redirectBaseUrl\n                            \n                            \n                                    Private\n                                stripeSecretKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkout\n                            \n                            \n                                    Private\n                                    Async\n                                createStripeSession\n                            \n                            \n                                findClosestShop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ordersService: OrdersService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/checkout/checkout.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ordersService\n                                                  \n                                                        \n                                                                        OrdersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkout\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkout(checkoutDto: CheckoutDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/checkout/checkout.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                checkoutDto\n                                            \n                                                            CheckoutDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for the checkout process.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An object containing the payment session and order details.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createStripeSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    createStripeSession(checkoutDto: CheckoutDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/checkout/checkout.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                checkoutDto\n                                            \n                                                            CheckoutDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for the checkout process.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The Stripe payment session.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findClosestShop\n                        \n                    \n                \n            \n            \n                \nfindClosestShop(shops: Shop[], destinationLat: number, destinationLng: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/checkout/checkout.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                shops\n                                            \n                                                            Shop[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                destinationLat\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                destinationLng\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Shop\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        redirectBaseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:4200'\n                    \n                \n                    \n                        \n                                Defined in src/checkout/checkout.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stripeSecretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sk_test_51O7BlTI3fhUzlLHI9fiOiGDlks47o5duVu0uqxTM6fYUdnWlDcXTG5AiMQzaqUxYExUXybltBssY0C4fknV7QpGS00xK9BfdBR'\n                    \n                \n                    \n                        \n                                Defined in src/checkout/checkout.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CheckoutDto, CheckoutItem } from './dto/checkout-dto';\nimport { OrdersService } from 'src/orders/orders.service';\nimport stripe from 'stripe';\nimport { AuthService } from 'src/auth/auth.service';\nimport { Shop } from 'src/auth/schema/shop.schema';\nimport { deg2rad } from 'src/helper/utility';\n\n@Injectable()\nexport class CheckoutService {\n  private stripeSecretKey =\n    'sk_test_51O7BlTI3fhUzlLHI9fiOiGDlks47o5duVu0uqxTM6fYUdnWlDcXTG5AiMQzaqUxYExUXybltBssY0C4fknV7QpGS00xK9BfdBR';\n\n  private redirectBaseUrl = 'http://localhost:4200';\n\n  constructor(\n    private ordersService: OrdersService,\n    private authService: AuthService,\n  ) {}\n\n  /**\n   * @description Initiates the checkout process, creates a payment session, and creates an order.\n   * @param {CheckoutDto} checkoutDto - The DTO for the checkout process.\n   * @returns {Promise} An object containing the payment session and order details.\n   * @throws {Error} If an error occurs during the checkout process.\n   */\n  async checkout(\n    checkoutDto: CheckoutDto,\n  ): Promise {\n    try {\n      const session = await this.createStripeSession(checkoutDto);\n\n      const destinationLat = checkoutDto.deliveryLat;\n      const destinationLng = checkoutDto.deliveryLng;\n      // Get all shop data\n      const allShopData: Shop[] = await this.authService.getAllShops();\n\n      // Find the closest shop\n      const closestShop = this.findClosestShop(\n        allShopData,\n        destinationLat,\n        destinationLng,\n      );\n\n      // Use closestShop for further processing\n      console.log('Closest Shop:', closestShop);\n\n      const orderDto = {\n        items: checkoutDto.items,\n        userId: checkoutDto.userId,\n        orderStatus: 'PENDING',\n        deliveryAddress: checkoutDto.deliveryAddress,\n        deliveryLat: checkoutDto.deliveryLat,\n        deliveryLng: checkoutDto.deliveryLng,\n        closestShop: (closestShop as any)._id,\n      };\n\n      const order = await this.ordersService.createOrder(orderDto);\n\n      return { session, order };\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n\n  /**\n   * @description Creates a Stripe payment session for the provided items.\n   * @param {CheckoutDto} checkoutDto - The DTO for the checkout process.\n   * @returns {Promise} The Stripe payment session.\n   */\n  private async createStripeSession(checkoutDto: CheckoutDto): Promise {\n    const stripeInstance = new stripe(this.stripeSecretKey);\n\n    const session = await stripeInstance.checkout.sessions.create({\n      payment_method_types: ['card'],\n      line_items: checkoutDto.items.map((item: CheckoutItem) => {\n        const priceInCents = Math.ceil(item.price * 100);\n        return {\n          price_data: {\n            currency: 'bdt',\n            product_data: {\n              name: item.name,\n            },\n            unit_amount: priceInCents,\n          },\n          quantity: item.quantity,\n        };\n      }),\n      mode: 'payment',\n      success_url: `${this.redirectBaseUrl}/cart/success`,\n      cancel_url: `${this.redirectBaseUrl}/cart/`,\n    });\n\n    return session;\n  }\n\n  // !START\n\n  findClosestShop(\n    shops: Shop[],\n    destinationLat: number,\n    destinationLng: number,\n  ): Shop {\n    const calculateDistance = (\n      lat1: number,\n      lon1: number,\n      lat2: number,\n      lon2: number,\n    ) => {\n      const R = 6371;\n      const dLat = deg2rad(lat2 - lat1);\n      const dLon = deg2rad(lon2 - lon1);\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(deg2rad(lat1)) *\n          Math.cos(deg2rad(lat2)) *\n          Math.sin(dLon / 2) *\n          Math.sin(dLon / 2);\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      const distance = R * c;\n      return distance;\n    };\n\n    let closestShop: Shop | null = null;\n    let minDistance = Number.MAX_VALUE;\n\n    for (const shop of shops) {\n      const distance = calculateDistance(\n        destinationLat,\n        destinationLng,\n        shop.lat,\n        shop.lng,\n      );\n\n      if (distance \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMedicineDto.html":{"url":"classes/CreateMedicineDto.html","title":"class - CreateMedicineDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMedicineDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medicine/dto/create-medicine-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dosage_form\n                            \n                            \n                                    \n                                generics\n                            \n                            \n                                    \n                                manufacturer\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                package_size\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                strength\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dosage_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        generics\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        manufacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        package_size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        strength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsNumber, IsString } from 'class-validator';\n\nexport class CreateMedicineDto {\n  @IsString()\n  name: string;\n\n  @IsString()\n  type: string;\n\n  @IsString()\n  dosage_form: string;\n\n  @IsString()\n  strength: string;\n\n  @IsString()\n  manufacturer: string;\n\n  @IsArray()\n  generics: string[];\n\n  @IsString()\n  package_size: string;\n\n  @IsNumber()\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                closestShop\n                            \n                            \n                                    \n                                    \n                                deliveryAddress\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                orderStatus\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        closestShop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/create-order.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deliveryAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/create-order.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CartItemDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/create-order.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        orderStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/create-order.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/create-order.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsNotEmpty, IsString, ValidateNested } from 'class-validator';\nimport { CartItemDto } from './cartItem-dto';\nimport { Type } from 'class-transformer';\n\nexport enum OrderStatus {\n  PENDING = 'PENDING',\n  COMPLETED = 'COMPLETED',\n  CANCELED = 'CANCELED',\n}\n\nexport class CreateOrderDto {\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => CartItemDto)\n  items: CartItemDto[];\n\n  @IsString()\n  @IsNotEmpty()\n  userId: string;\n\n  @IsString()\n  @IsNotEmpty()\n  orderStatus: string;\n\n  @IsString()\n  @IsNotEmpty()\n  deliveryAddress: string;\n\n  closestShop?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateShopDto.html":{"url":"classes/CreateShopDto.html","title":"class - CreateShopDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateShopDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/create-shop.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                address\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lat\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lng\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                shopName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-shop.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail({}, {message: 'Please enter correct email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-shop.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-shop.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-shop.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-shop.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lng\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-shop.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-shop.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        shopName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/create-shop.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateShopDto {\n  @IsNotEmpty()\n  @IsString()\n  readonly shopName: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly firstName: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly lastName: string;\n\n  @IsNotEmpty()\n  @IsEmail({}, { message: 'Please enter correct email' })\n  readonly email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  readonly password: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly address: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly lat: number;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly lng: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStockDto.html":{"url":"classes/CreateStockDto.html","title":"class - CreateStockDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStockDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stocks/dto/create-stock.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                medicineId\n                            \n                            \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                shopId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        medicineId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stocks/dto/create-stock.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stocks/dto/create-stock.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        shopId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stocks/dto/create-stock.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, IsNumber } from 'class-validator';\n\nexport class CreateStockDto {\n  @IsNotEmpty()\n  @IsString()\n  medicineId: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  quantity: number;\n\n  @IsNotEmpty()\n  @IsString()\n  shopId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/Guards/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, shopModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/auth/Guards/jwt.strategy.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shopModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/Guards/jwt.strategy.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { User } from '../schema/user.schema';\nimport { Model } from 'mongoose';\nimport { Shop } from '../schema/shop.schema';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectModel(User.name) private readonly userModel: Model,\n    @InjectModel(Shop.name) private readonly shopModel: Model,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: any) {\n    const { id } = payload;\n\n    const user = await this.userModel.findById(id);\n    const shopUser = await this.shopModel.findById(id);\n\n    if (!user) {\n      if (!shopUser) {\n        throw new UnauthorizedException(\n          'Please login to access this endpoint.',\n        );\n      }\n    }\n\n    if (user) {\n      return user;\n    }\n\n    if (shopUser) {\n      return shopUser;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail({}, {message: 'Please enter correct email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class LoginDto {\n  @IsNotEmpty()\n  @IsEmail({}, { message: 'Please enter correct email' })\n  readonly email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  readonly password: string;\n}\n\nexport class ShopLoginDto {\n  @IsNotEmpty()\n  @IsEmail({}, { message: 'Please enter correct email' })\n  readonly email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Medicine.html":{"url":"classes/Medicine.html","title":"class - Medicine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Medicine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medicine/schema/medicine.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dosage_form\n                            \n                            \n                                    \n                                generics\n                            \n                            \n                                    \n                                manufacturer\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                package_size\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                strength\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dosage_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        generics\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop(['String'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        manufacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        package_size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        strength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ timestamps: true })\nexport class Medicine extends Document {\n  @Prop()\n  name: string;\n\n  @Prop()\n  type: string;\n\n  @Prop()\n  dosage_form: string;\n\n  @Prop()\n  strength: string;\n\n  @Prop()\n  manufacturer: string;\n\n  @Prop([String])\n  generics: string[];\n\n  @Prop()\n  package_size: string;\n\n  @Prop()\n  price: number;\n}\n\nexport const MedicineSchema = SchemaFactory.createForClass(Medicine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MedicineController.html":{"url":"controllers/MedicineController.html","title":"controller - MedicineController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MedicineController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medicine/medicine.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                medicines\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createMedicine\n                            \n                            \n                                    \n                                    \n                                deleteMedicine\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAllMedicineByQuery\n                            \n                            \n                                    \n                                    \n                                findOneMedicine\n                            \n                            \n                                    \n                                    \n                                updateMedicine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMedicine(createMedicineDto: CreateMedicineDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/medicine/medicine.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createMedicineDto\n                                            \n                                                            CreateMedicineDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing information for creating a new medicine.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The newly created medicine.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deleteMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMedicine(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/medicine/medicine.controller.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the medicine to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Details of the deleted medicine.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAllMedicineByQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllMedicineByQuery(queryParams: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/medicine/medicine.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                queryParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe query parameters for filtering medicines.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A list of medicines that match the query.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOneMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneMedicine(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/medicine/medicine.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the medicine to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Details of the requested medicine.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMedicine(id: string, updateMedicineDto: UpdateMedicineDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/medicine/medicine.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the medicine to update.\n\n\n                                            \n                                        \n                                        \n                                                updateMedicineDto\n                                            \n                                                            UpdateMedicineDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing updated information for the medicine.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The updated medicine details.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        /**\n * @module MedicineController\n * @description Controller for medicines routes.\n */\nimport {\n  Controller,\n  Get,\n  Post,\n  Put,\n  Delete,\n  Body,\n  Param,\n  Query,\n  NotFoundException,\n  InternalServerErrorException,\n  BadRequestException,\n  UseGuards,\n} from '@nestjs/common';\nimport { MedicineService } from './medicine.service';\nimport { CreateMedicineDto } from './dto/create-medicine-dto';\nimport { UpdateMedicineDto } from './dto/update-medicine-dto';\nimport { Medicine } from './schema/medicine.schema';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('medicines')\nexport class MedicineController {\n  constructor(private readonly medicineService: MedicineService) {}\n\n  /**\n   * @description Get all medicines that match the provided query parameters.\n   * @param {any} queryParams - The query parameters for filtering medicines.\n   * @returns {Promise} A list of medicines that match the query.\n   */\n  @Get('find')\n  @UseGuards(AuthGuard())\n  async findAllMedicineByQuery(@Query() queryParams: any): Promise {\n    try {\n      const medicines =\n        await this.medicineService.findAllMedicineByQuery(queryParams);\n      return medicines;\n    } catch (error) {\n      if (error instanceof BadRequestException) {\n        throw new BadRequestException(error.message);\n      } else if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      } else {\n        throw new InternalServerErrorException('Internal server error');\n      }\n    }\n  }\n\n  /**\n   * @description Get details of a specific medicine by ID.\n   * @param {string} id - The ID of the medicine to retrieve.\n   * @returns {Promise} Details of the requested medicine.\n   */\n  @Get(':id')\n  @UseGuards(AuthGuard())\n  findOneMedicine(@Param('id') id: string) {\n    return this.medicineService.findOneMedicine(id);\n  }\n\n  /**\n   * @description Create a new medicine.\n   * @param {CreateMedicineDto} createMedicineDto - The DTO containing information for creating a new medicine.\n   * @returns {Promise} The newly created medicine.\n   */\n  @Post()\n  @UseGuards(AuthGuard())\n  createMedicine(@Body() createMedicineDto: CreateMedicineDto) {\n    return this.medicineService.createMedicine(createMedicineDto);\n  }\n\n  /**\n   * @description Update the details of a specific medicine.\n   * @param {string} id - The ID of the medicine to update.\n   * @param {UpdateMedicineDto} updateMedicineDto - The DTO containing updated information for the medicine.\n   * @returns {Promise} The updated medicine details.\n   */\n  @Put(':id')\n  @UseGuards(AuthGuard())\n  updateMedicine(\n    @Param('id') id: string,\n    @Body() updateMedicineDto: UpdateMedicineDto,\n  ) {\n    return this.medicineService.updateMedicine(id, updateMedicineDto);\n  }\n\n  /**\n   * @description Delete a specific medicine by ID.\n   * @param {string} id - The ID of the medicine to delete.\n   * @returns {Promise} Details of the deleted medicine.\n   */\n  @Delete(':id')\n  @UseGuards(AuthGuard())\n  deleteMedicine(@Param('id') id: string) {\n    return this.medicineService.deleteMedicine(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MedicineModule.html":{"url":"modules/MedicineModule.html","title":"module - MedicineModule","body":"\n                   \n\n\n\n\n    Modules\n    MedicineModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MedicineModule\n\n\n\ncluster_MedicineModule_imports\n\n\n\ncluster_MedicineModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nMedicineModule\n\nMedicineModule\n\nMedicineModule -->\n\nAuthModule->MedicineModule\n\n\n\n\n\nMedicineService\n\nMedicineService\n\nMedicineModule -->\n\nMedicineService->MedicineModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/medicine/medicine.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MedicineService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MedicineController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MedicineService } from './medicine.service';\nimport { MedicineController } from './medicine.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Medicine, MedicineSchema } from './schema/medicine.schema';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  imports: [\n    AuthModule,\n    MongooseModule.forFeature([\n      { name: Medicine.name, schema: MedicineSchema },\n    ]),\n  ],\n  providers: [MedicineService],\n  controllers: [MedicineController],\n})\nexport class MedicineModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MedicineService.html":{"url":"injectables/MedicineService.html","title":"injectable - MedicineService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MedicineService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medicine/medicine.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                countAll\n                            \n                            \n                                    Async\n                                createMedicine\n                            \n                            \n                                    Async\n                                deleteMedicine\n                            \n                            \n                                    Async\n                                findAllMedicineByQuery\n                            \n                            \n                                    Async\n                                findOneMedicine\n                            \n                            \n                                    Async\n                                updateMedicine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(medicineModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/medicine/medicine.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        medicineModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    countAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/medicine/medicine.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The total count of medicines.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMedicine(createMedicineDto: CreateMedicineDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medicine/medicine.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createMedicineDto\n                                            \n                                                            CreateMedicineDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing information for creating a new medicine.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The newly created medicine.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMedicine(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medicine/medicine.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the medicine to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Details of the deleted medicine.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllMedicineByQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllMedicineByQuery(queryParams: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medicine/medicine.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                queryParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe query parameters for filtering medicines.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A list of medicines that match the query.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneMedicine(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medicine/medicine.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the medicine to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Details of the requested medicine.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMedicine(id: string, updateMedicineDto: UpdateMedicineDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medicine/medicine.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the medicine to update.\n\n\n                                            \n                                        \n                                        \n                                                updateMedicineDto\n                                            \n                                                            UpdateMedicineDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing updated information for the medicine.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated medicine details.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Medicine } from './schema/medicine.schema';\nimport { CreateMedicineDto } from './dto/create-medicine-dto';\nimport { UpdateMedicineDto } from './dto/update-medicine-dto';\n\n@Injectable()\nexport class MedicineService {\n  constructor(\n    @InjectModel(Medicine.name) private readonly medicineModel: Model,\n  ) {}\n\n  /**\n   * @description Create a new medicine.\n   * @param {CreateMedicineDto} createMedicineDto - The DTO containing information for creating a new medicine.\n   * @returns {Promise} The newly created medicine.\n   */\n  async createMedicine(\n    createMedicineDto: CreateMedicineDto,\n  ): Promise {\n    const createdMedicine = new this.medicineModel(createMedicineDto);\n    return createdMedicine.save();\n  }\n\n  /**\n   * @description Find all medicines that match the provided query parameters.\n   * @param {any} queryParams - The query parameters for filtering medicines.\n   * @returns {Promise} A list of medicines that match the query.\n   */\n  async findAllMedicineByQuery(queryParams: any): Promise {\n    const { page, limit, search, ...filterParams } = queryParams;\n\n    // check for page,limit and search query parameters\n    if (Object.keys(filterParams).length === 0 && !page && !limit && !search) {\n      throw new BadRequestException('No query parameters provided');\n    }\n\n    const pageValue = page ? Number(page) : 1;\n    const limitValue = limit ? Number(limit) : 10;\n\n    const skip = (pageValue - 1) * limitValue;\n\n    const filter = { ...filterParams };\n\n    if (search) {\n      const searchFilter = {\n        $or: [\n          { name: { $regex: search, $options: 'i' } },\n          { generics: { $in: [search] } },\n        ],\n      };\n      Object.assign(filter, searchFilter);\n    }\n\n    try {\n      const medicines = await this.medicineModel\n        .find(filter)\n        .skip(skip)\n        .limit(limitValue)\n        .exec();\n      return medicines;\n    } catch (error) {\n      throw new NotFoundException('Medicines not found');\n    }\n  }\n\n  /**\n   * @description Find details of a specific medicine by ID.\n   * @param {string} id - The ID of the medicine to retrieve.\n   * @returns {Promise} Details of the requested medicine.\n   */\n  async findOneMedicine(id: string): Promise {\n    const medicine = await this.medicineModel.findById(id).exec();\n\n    if (!medicine) {\n      throw new NotFoundException('Medicine not found');\n    }\n    return medicine;\n  }\n\n  /**\n   * @description Update the details of a specific medicine.\n   * @param {string} id - The ID of the medicine to update.\n   * @param {UpdateMedicineDto} updateMedicineDto - The DTO containing updated information for the medicine.\n   * @returns {Promise} The updated medicine details.\n   */\n  async updateMedicine(\n    id: string,\n    updateMedicineDto: UpdateMedicineDto,\n  ): Promise {\n    const updatedMedicine = await this.medicineModel.findByIdAndUpdate(\n      id,\n      updateMedicineDto,\n      {\n        new: true,\n      },\n    );\n    if (!updatedMedicine) {\n      throw new NotFoundException('Medicine not found');\n    }\n    return updatedMedicine;\n  }\n\n  /**\n   * @description Delete a specific medicine by ID.\n   * @param {string} id - The ID of the medicine to delete.\n   * @returns {Promise} Details of the deleted medicine.\n   */\n  async deleteMedicine(id: string): Promise {\n    const deletedMedicine = await this.medicineModel.findByIdAndRemove(id);\n    if (!deletedMedicine) {\n      throw new NotFoundException('Medicine not found');\n    }\n    return deletedMedicine;\n  }\n\n  /**\n   * @description Count the total number of medicines.\n   * @returns {Promise} The total count of medicines.\n   */\n  async countAll(): Promise {\n    return this.medicineModel.countDocuments().exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/schema/order.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                closestShop\n                            \n                            \n                                    \n                                deliveryAddress\n                            \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                orderStatus\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        closestShop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/schema/order.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deliveryAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/schema/order.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/schema/order.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        orderStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/schema/order.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/schema/order.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n// create enum for book category\nexport enum OrderStatus {\n  DELIVERED = 'DELIVERED',\n  SHIPPED = 'SHIPPED',\n  PENDING = 'PENDING',\n  CANCELED = 'CANCELED',\n}\n\n@Schema({\n  timestamps: true,\n})\nexport class Order {\n  @Prop()\n  items: any[];\n\n  @Prop()\n  userId: string;\n\n  @Prop()\n  orderStatus: string;\n\n  @Prop()\n  deliveryAddress: string;\n\n  @Prop()\n  closestShop: string;\n}\nexport const OrderSchema = SchemaFactory.createForClass(Order);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createOrder\n                            \n                            \n                                    \n                                    Async\n                                deleteOrder\n                            \n                            \n                                    \n                                    Async\n                                findOrderById\n                            \n                            \n                                    \n                                    Async\n                                getAllOrders\n                            \n                            \n                                    \n                                    Async\n                                getOrdersByUserId\n                            \n                            \n                                    \n                                    Async\n                                updateOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing information for creating a new order.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The newly created order.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOrder(orderId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':orderId')\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the order to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Details of the deleted order.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOrderById(orderId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':orderId')\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the order to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Details of the requested order.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllOrders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllOrders()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A list of all orders.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getOrdersByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrdersByUserId(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOrder(orderId: string, updateOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':orderId')\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the order to update.\n\n\n                                            \n                                        \n                                        \n                                                updateOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing updated information for the order.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated order details.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        /**\n * @module OrdersController\n * @description Controller for orders routes.\n */\nimport {\n  Controller,\n  Get,\n  Post,\n  Param,\n  Body,\n  Put,\n  Delete,\n  NotFoundException,\n  BadRequestException,\n} from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { Order } from './schema/order.schema';\n\n@Controller('orders')\nexport class OrdersController {\n  constructor(private readonly ordersService: OrdersService) {}\n\n  /**\n   * @description Create a new order.\n   * @param {CreateOrderDto} createOrderDto - The DTO containing information for creating a new order.\n   * @returns {Promise} The newly created order.\n   */\n  @Post()\n  async createOrder(@Body() createOrderDto: CreateOrderDto): Promise {\n    try {\n      return await this.ordersService.createOrder(createOrderDto);\n    } catch (error) {\n      throw new BadRequestException('Failed to create the order');\n    }\n  }\n\n  /**\n   * @description Get all orders.\n   * @returns {Promise} A list of all orders.\n   */\n  @Get()\n  async getAllOrders(): Promise {\n    try {\n      return await this.ordersService.getAllOrders();\n    } catch (error) {\n      throw new NotFoundException('Failed to fetch orders');\n    }\n  }\n\n  /**\n   * @description Find details of a specific order by ID.\n   * @param {string} orderId - The ID of the order to retrieve.\n   * @returns {Promise} Details of the requested order.\n   */\n  @Get(':orderId')\n  async findOrderById(@Param('orderId') orderId: string): Promise {\n    try {\n      const order = await this.ordersService.findOrderById(orderId);\n      if (!order) {\n        throw new NotFoundException('Order not found');\n      }\n      return order;\n    } catch (error) {\n      throw new NotFoundException('Order not found');\n    }\n  }\n\n  /**\n   * @description Update the details of a specific order.\n   * @param {string} orderId - The ID of the order to update.\n   * @param {CreateOrderDto} updateOrderDto - The DTO containing updated information for the order.\n   * @returns {Promise} The updated order details.\n   */\n  @Put(':orderId')\n  async updateOrder(\n    @Param('orderId') orderId: string,\n    @Body() updateOrderDto: CreateOrderDto,\n  ): Promise {\n    try {\n      const order = await this.ordersService.updateOrder(\n        orderId,\n        updateOrderDto,\n      );\n      if (!order) {\n        throw new NotFoundException('Order not found');\n      }\n      return order;\n    } catch (error) {\n      throw new BadRequestException('Failed to update the order');\n    }\n  }\n\n  /**\n   * @description Delete a specific order by ID.\n   * @param {string} orderId - The ID of the order to delete.\n   * @returns {Promise} Details of the deleted order.\n   */\n  @Delete(':orderId')\n  async deleteOrder(@Param('orderId') orderId: string): Promise {\n    try {\n      const order = await this.ordersService.deleteOrder(orderId);\n      if (!order) {\n        throw new NotFoundException('Order not found');\n      }\n      return order;\n    } catch (error) {\n      throw new BadRequestException('Failed to delete the order');\n    }\n  }\n\n  @Get('user/:userId')\n  async getOrdersByUserId(@Param('userId') userId: string): Promise {\n    try {\n      return await this.ordersService.getOrdersByUserId(userId);\n    } catch (error) {\n      throw new NotFoundException('Failed to fetch orders by user ID');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_exports\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nOrdersService \n\nOrdersService \n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersService  -->\n\nOrdersModule->OrdersService \n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * @module OrdersModule\n * @description Module for managing orders.\n */\nimport { Module } from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { OrdersController } from './orders.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Order, OrderSchema } from './schema/order.schema';\nimport { Stock, StockSchema } from 'src/stocks/schema/stock.schema';\n\n@Module({\n  imports: [\n    /**\n     * MongooseModule for registering the Order model with its schema.\n     */\n    MongooseModule.forFeature([\n      { name: Order.name, schema: OrderSchema },\n      { name: Stock.name, schema: StockSchema },\n    ]),\n  ],\n  providers: [\n    /**\n     * OrdersService for managing orders.\n     */\n    OrdersService,\n  ],\n  controllers: [\n    /**\n     * OrdersController for handling order-related routes.\n     */\n    OrdersController,\n  ],\n  exports: [\n    /**\n     * Exported OrdersService for providing order-related functionalities to other modules.\n     */\n    OrdersService,\n  ],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOrder\n                            \n                            \n                                    Async\n                                deleteOrder\n                            \n                            \n                                    Async\n                                findOrderById\n                            \n                            \n                                    Async\n                                getAllOrders\n                            \n                            \n                                    Async\n                                getOrdersByUserId\n                            \n                            \n                                    Async\n                                updateOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderModel: Model, stockModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/orders/orders.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(createOrderDto: CreateOrderDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing information for creating a new order.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The newly created order.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOrder(orderId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the order to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Details of the deleted order.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOrderById(orderId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the order to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Details of the requested order.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllOrders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllOrders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A list of all orders.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOrdersByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrdersByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user to retrieve orders for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A list of orders associated with the user, sorted by creation date in descending order.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOrder(orderId: string, updateOrderDto: CreateOrderDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the order to update.\n\n\n                                            \n                                        \n                                        \n                                                updateOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing updated information for the order.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated order details.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Order } from './schema/order.schema';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { Stock } from 'src/stocks/schema/stock.schema';\n\n@Injectable()\nexport class OrdersService {\n  constructor(\n    @InjectModel(Order.name) private readonly orderModel: Model,\n    @InjectModel(Stock.name) private readonly stockModel: Model,\n  ) {}\n\n  /**\n   * @description Create a new order.\n   * @param {CreateOrderDto} createOrderDto - The DTO containing information for creating a new order.\n   * @returns {Promise} The newly created order.\n   */\n  async createOrder(createOrderDto: CreateOrderDto): Promise {\n    try {\n      const createdOrder = new this.orderModel(createOrderDto);\n      const savedOrder = await createdOrder.save();\n      return savedOrder;\n    } catch (error) {\n      throw new Error('Failed to create the order');\n    }\n  }\n\n  /**\n   * @description Get all orders.\n   * @returns {Promise} A list of all orders.\n   */\n  async getAllOrders(): Promise {\n    try {\n      return this.orderModel.find().exec();\n    } catch (error) {\n      throw new Error('Failed to fetch orders');\n    }\n  }\n\n  /**\n   * @description Find details of a specific order by its ID.\n   * @param {string} orderId - The ID of the order to retrieve.\n   * @returns {Promise} Details of the requested order.\n   */\n  async findOrderById(orderId: string): Promise {\n    try {\n      return this.orderModel.findById(orderId).exec();\n    } catch (error) {\n      throw new Error('Order not found');\n    }\n  }\n\n  /**\n   * @description Update the details of a specific order.\n   * @param {string} orderId - The ID of the order to update.\n   * @param {CreateOrderDto} updateOrderDto - The DTO containing updated information for the order.\n   * @returns {Promise} The updated order details.\n   */\n  async updateOrder(\n    orderId: string,\n    updateOrderDto: CreateOrderDto,\n  ): Promise {\n    try {\n      return this.orderModel\n        .findByIdAndUpdate(orderId, updateOrderDto, { new: true })\n        .exec();\n    } catch (error) {\n      throw new Error('Failed to update the order');\n    }\n  }\n\n  /**\n   * @description Delete a specific order by ID.\n   * @param {string} orderId - The ID of the order to delete.\n   * @returns {Promise} Details of the deleted order.\n   */\n  async deleteOrder(orderId: string): Promise {\n    try {\n      return this.orderModel.findByIdAndRemove(orderId).exec();\n    } catch (error) {\n      throw new Error('Failed to delete the order');\n    }\n  }\n\n  /**\n   * @description Get orders for a specific user by their user ID, sorted in descending order of creation date.\n   * @param {string} userId - The ID of the user to retrieve orders for.\n   * @returns {Promise} A list of orders associated with the user, sorted by creation date in descending order.\n   */\n  async getOrdersByUserId(userId: string): Promise {\n    try {\n      return this.orderModel.find({ userId }).sort({ createdAt: -1 }).exec();\n    } catch (error) {\n      throw new Error('Failed to fetch orders by user ID');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Shop.html":{"url":"classes/Shop.html","title":"class - Shop","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Shop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/schema/shop.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                lat\n                            \n                            \n                                    \n                                lng\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                shopName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/shop.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/shop.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/shop.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/shop.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/shop.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lng\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/shop.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/shop.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shopName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/shop.schema.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n@Schema({ timestamps: true })\nexport class Shop {\n  @Prop()\n  shopName: string;\n\n  @Prop()\n  firstName: string;\n\n  @Prop()\n  lastName: string;\n\n  @Prop({ unique: [true, 'Duplicate email entered!'] })\n  email: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  lat: number;\n\n  @Prop()\n  lng: number;\n}\n\nexport const ShopSchema = SchemaFactory.createForClass(Shop);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ShopLoginDto.html":{"url":"classes/ShopLoginDto.html","title":"class - ShopLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ShopLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail({}, {message: 'Please enter correct email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class LoginDto {\n  @IsNotEmpty()\n  @IsEmail({}, { message: 'Please enter correct email' })\n  readonly email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  readonly password: string;\n}\n\nexport class ShopLoginDto {\n  @IsNotEmpty()\n  @IsEmail({}, { message: 'Please enter correct email' })\n  readonly email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/signup-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                address\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lat\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lng\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup-dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail({}, {message: 'Please enter correct email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup-dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup-dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup-dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup-dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lng\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup-dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup-dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup-dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  MinLength,\n} from 'class-validator';\n\nexport class SignUpDto {\n  @IsNotEmpty()\n  @IsString()\n  readonly firstName: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly lastName: string;\n\n  @IsNotEmpty()\n  @IsEmail({}, { message: 'Please enter correct email' })\n  readonly email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  readonly password: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly address: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly role: RoleDto;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly lat: number;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly lng: number;\n}\n\nexport enum RoleDto {\n  ADMIN = 'ADMIN',\n  SHOP = 'SHOP',\n  CUSTOMER = 'CUSTOMER',\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stock.html":{"url":"classes/Stock.html","title":"class - Stock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stocks/schema/stock.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                medicineId\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                shopId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        medicineId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stocks/schema/stock.schema.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stocks/schema/stock.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        shopId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stocks/schema/stock.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n@Schema({\n  timestamps: true,\n})\nexport class Stock {\n  @Prop()\n  medicineId: string;\n\n  @Prop()\n  quantity: number;\n\n  @Prop()\n  shopId: string;\n}\nexport const StockSchema = SchemaFactory.createForClass(Stock);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StocksController.html":{"url":"controllers/StocksController.html","title":"controller - StocksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StocksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stocks/stocks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stocks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createStock\n                            \n                            \n                                    \n                                    Async\n                                deleteStock\n                            \n                            \n                                    \n                                    Async\n                                getAllStocks\n                            \n                            \n                                    \n                                    Async\n                                getAllStocksByShopId\n                            \n                            \n                                    \n                                    Async\n                                getStockById\n                            \n                            \n                                    \n                                    Async\n                                searchStockByMedicine\n                            \n                            \n                                    \n                                    Async\n                                searchStockByMedicineIdAndShopId\n                            \n                            \n                                    \n                                    Async\n                                updateStock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    createStock(createStockDto: CreateStockDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/stocks/stocks.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createStockDto\n                                            \n                                                            CreateStockDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteStock(stockId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':stockId')\n                \n            \n\n                    \n                        \n                            Defined in src/stocks/stocks.controller.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stockId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllStocks\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllStocks()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/stocks/stocks.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllStocksByShopId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllStocksByShopId(shopId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('shop/:shopId')\n                \n            \n\n                    \n                        \n                            Defined in src/stocks/stocks.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                shopId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getStockById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStockById(stockId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':stockId')\n                \n            \n\n                    \n                        \n                            Defined in src/stocks/stocks.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stockId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchStockByMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchStockByMedicine(medicineName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search/medicine')\n                \n            \n\n                    \n                        \n                            Defined in src/stocks/stocks.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                medicineName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        searchStockByMedicineIdAndShopId\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchStockByMedicineIdAndShopId(medicineId: string, shopId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search/medicine-and-shop')\n                \n            \n\n                    \n                        \n                            Defined in src/stocks/stocks.controller.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                medicineId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                shopId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStock(stockId: string, updateStockDto: UpdateStockDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':stockId')\n                \n            \n\n                    \n                        \n                            Defined in src/stocks/stocks.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stockId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStockDto\n                                            \n                                                            UpdateStockDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Put,\n  Delete,\n  Param,\n  Body,\n  NotFoundException,\n  BadRequestException,\n  Query,\n} from '@nestjs/common';\nimport { StocksService } from './stocks.service';\nimport { UpdateStockDto } from './dto/update-stock.dto';\nimport { Stock } from './schema/stock.schema';\nimport { CreateStockDto } from './dto/create-stock.dto';\n\n@Controller('stocks')\nexport class StocksController {\n  constructor(private readonly stocksService: StocksService) {}\n\n  @Post()\n  async createStock(@Body() createStockDto: CreateStockDto): Promise {\n    try {\n      return await this.stocksService.createStock(createStockDto);\n    } catch (error) {\n      throw new BadRequestException('Failed to create stock');\n    }\n  }\n\n  @Get()\n  async getAllStocks(): Promise {\n    try {\n      return await this.stocksService.getAllStocks();\n    } catch (error) {\n      throw new NotFoundException('Failed to fetch stocks');\n    }\n  }\n\n  @Get('shop/:shopId')\n  async getAllStocksByShopId(\n    @Param('shopId') shopId: string,\n  ): Promise {\n    try {\n      return await this.stocksService.getAllStocksByShopId(shopId);\n    } catch (error) {\n      throw new NotFoundException('Failed to fetch stocks');\n    }\n  }\n\n  @Get(':stockId')\n  async getStockById(@Param('stockId') stockId: string): Promise {\n    try {\n      const stock = await this.stocksService.getStockById(stockId);\n      if (!stock) {\n        throw new NotFoundException('Stock not found');\n      }\n      return stock;\n    } catch (error) {\n      throw new NotFoundException('Stock not found');\n    }\n  }\n\n  @Put(':stockId')\n  async updateStock(\n    @Param('stockId') stockId: string,\n    @Body() updateStockDto: UpdateStockDto,\n  ): Promise {\n    try {\n      const stock = await this.stocksService.updateStock(\n        stockId,\n        updateStockDto,\n      );\n      if (!stock) {\n        throw new NotFoundException('Stock not found');\n      }\n      return stock;\n    } catch (error) {\n      throw new BadRequestException('Failed to update stock');\n    }\n  }\n\n  @Delete(':stockId')\n  async deleteStock(@Param('stockId') stockId: string): Promise {\n    try {\n      const stock = await this.stocksService.deleteStock(stockId);\n      if (!stock) {\n        throw new NotFoundException('Stock not found');\n      }\n      return stock;\n    } catch (error) {\n      throw new BadRequestException('Failed to delete stock');\n    }\n  }\n\n  @Get('search/medicine')\n  async searchStockByMedicine(\n    @Query('medicineName') medicineName: string,\n  ): Promise {\n    try {\n      return await this.stocksService.searchStockByMedicine(medicineName);\n    } catch (error) {\n      throw new NotFoundException('Failed to search stocks by medicine');\n    }\n  }\n\n  @Get('search/medicine-and-shop')\n  async searchStockByMedicineIdAndShopId(\n    @Query('medicineId') medicineId: string,\n    @Query('shopId') shopId: string,\n  ): Promise {\n    try {\n      return await this.stocksService.searchStockByMedicineIdAndShopId(\n        medicineId,\n        shopId,\n      );\n    } catch (error) {\n      throw new NotFoundException(\n        'Failed to search stocks by medicine ID and shop ID',\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StocksModule.html":{"url":"modules/StocksModule.html","title":"module - StocksModule","body":"\n                   \n\n\n\n\n    Modules\n    StocksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StocksModule\n\n\n\ncluster_StocksModule_providers\n\n\n\n\nStocksService\n\nStocksService\n\n\n\nStocksModule\n\nStocksModule\n\nStocksModule -->\n\nStocksService->StocksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stocks/stocks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StocksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StocksController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StocksService } from './stocks.service';\nimport { StocksController } from './stocks.controller';\nimport { Stock, StockSchema } from './schema/stock.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  providers: [StocksService],\n  imports: [\n    MongooseModule.forFeature([{ name: Stock.name, schema: StockSchema }]),\n  ],\n  controllers: [StocksController],\n})\nexport class StocksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StocksService.html":{"url":"injectables/StocksService.html","title":"injectable - StocksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StocksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stocks/stocks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createStock\n                            \n                            \n                                    Async\n                                deleteStock\n                            \n                            \n                                    Async\n                                getAllStocks\n                            \n                            \n                                    Async\n                                getAllStocksByShopId\n                            \n                            \n                                    Async\n                                getStockById\n                            \n                            \n                                    Async\n                                searchStockByMedicine\n                            \n                            \n                                    Async\n                                searchStockByMedicineIdAndShopId\n                            \n                            \n                                    Async\n                                updateStock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stockModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/stocks/stocks.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stockModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    createStock(createStockDto: CreateStockDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stocks/stocks.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createStockDto\n                                            \n                                                            CreateStockDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteStock(stockId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stocks/stocks.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stockId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllStocks\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllStocks()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stocks/stocks.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllStocksByShopId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllStocksByShopId(shopId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stocks/stocks.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                shopId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getStockById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getStockById(stockId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stocks/stocks.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stockId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchStockByMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchStockByMedicine(medicineName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stocks/stocks.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                medicineName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        searchStockByMedicineIdAndShopId\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchStockByMedicineIdAndShopId(medicineId: string, shopId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stocks/stocks.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                medicineId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                shopId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStock(stockId: string, updateStockDto: UpdateStockDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stocks/stocks.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stockId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStockDto\n                                            \n                                                            UpdateStockDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  BadRequestException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Stock } from './schema/stock.schema';\nimport { CreateStockDto } from './dto/create-stock.dto';\nimport { UpdateStockDto } from './dto/update-stock.dto';\n\n@Injectable()\nexport class StocksService {\n  constructor(@InjectModel(Stock.name) private stockModel: Model) {}\n\n  async createStock(createStockDto: CreateStockDto): Promise {\n    try {\n      const createdStock = new this.stockModel(createStockDto);\n      const savedStock = await createdStock.save();\n      return savedStock;\n    } catch (error) {\n      throw new BadRequestException('Failed to create stock');\n    }\n  }\n\n  async getAllStocks(): Promise {\n    try {\n      return this.stockModel.find().exec();\n    } catch (error) {\n      throw new NotFoundException('Failed to fetch stocks');\n    }\n  }\n\n  async getStockById(stockId: string): Promise {\n    try {\n      const stock = await this.stockModel.findById(stockId).exec();\n      if (!stock) {\n        throw new NotFoundException('Stock not found');\n      }\n      return stock;\n    } catch (error) {\n      throw new NotFoundException('Stock not found');\n    }\n  }\n\n  async getAllStocksByShopId(shopId: string): Promise {\n    try {\n      return this.stockModel.find({ shopId }).exec();\n    } catch (error) {\n      throw new NotFoundException('Failed to fetch stocks');\n    }\n  }\n\n  async updateStock(\n    stockId: string,\n    updateStockDto: UpdateStockDto,\n  ): Promise {\n    try {\n      const stock = await this.stockModel\n        .findByIdAndUpdate(stockId, updateStockDto, { new: true })\n        .exec();\n      if (!stock) {\n        throw new NotFoundException('Stock not found');\n      }\n      return stock;\n    } catch (error) {\n      throw new BadRequestException('Failed to update stock');\n    }\n  }\n\n  async deleteStock(stockId: string): Promise {\n    try {\n      const stock = await this.stockModel.findByIdAndRemove(stockId).exec();\n      if (!stock) {\n        throw new NotFoundException('Stock not found');\n      }\n      return stock;\n    } catch (error) {\n      throw new BadRequestException('Failed to delete stock');\n    }\n  }\n\n  async searchStockByMedicine(medicineName: string): Promise {\n    try {\n      return this.stockModel.find({ medicineName }).exec();\n    } catch (error) {\n      throw new NotFoundException('Failed to search stocks by medicine');\n    }\n  }\n\n  async searchStockByMedicineIdAndShopId(\n    medicineId: string,\n    shopId: string,\n  ): Promise {\n    try {\n      return this.stockModel.find({ medicineId, shopId }).exec();\n    } catch (error) {\n      throw new NotFoundException(\n        'Failed to search stocks by medicine ID and shop ID',\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMedicineDto.html":{"url":"classes/UpdateMedicineDto.html","title":"class - UpdateMedicineDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMedicineDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medicine/dto/update-medicine-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                dosage_form\n                            \n                            \n                                    \n                                    \n                                generics\n                            \n                            \n                                    \n                                    \n                                manufacturer\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                package_size\n                            \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                strength\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dosage_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        generics\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        manufacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        package_size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        strength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, IsArray, IsNumber } from 'class-validator';\n\nexport class UpdateMedicineDto {\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @IsOptional()\n  @IsString()\n  type: string;\n\n  @IsOptional()\n  @IsString()\n  dosage_form: string;\n\n  @IsOptional()\n  @IsString()\n  strength: string;\n\n  @IsOptional()\n  @IsString()\n  manufacturer: string;\n\n  @IsOptional()\n  @IsArray()\n  generics: string[]; // Since generics is an array, it can be updated as a whole array or by individual items.\n\n  @IsOptional()\n  @IsString()\n  package_size: string;\n\n  @IsOptional()\n  @IsNumber()\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderStatusDto.html":{"url":"classes/UpdateOrderStatusDto.html","title":"class - UpdateOrderStatusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderStatusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/dto/update-order-status.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                orderStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        orderStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/update-order-status.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { OrderStatus } from './create-order.dto';\n\nexport class UpdateOrderStatusDto {\n  @IsString()\n  @IsNotEmpty()\n  orderStatus: OrderStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStockDto.html":{"url":"classes/UpdateStockDto.html","title":"class - UpdateStockDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStockDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stocks/dto/update-stock.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                medicineId\n                            \n                            \n                                    \n                                    Optional\n                                quantity\n                            \n                            \n                                    \n                                    Optional\n                                shopId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        medicineId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stocks/dto/update-stock.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stocks/dto/update-stock.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        shopId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stocks/dto/update-stock.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNumber } from 'class-validator';\n\nexport class UpdateStockDto {\n  @IsString()\n  medicineId?: string;\n\n  @IsNumber()\n  quantity?: number;\n\n  @IsString()\n  shopId?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/schema/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                lat\n                            \n                            \n                                    \n                                lng\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                postalCode\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lng\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n// create enum for book category\nexport enum UserRole {\n  CUSTOMER = 'Customer',\n  SHOPOWNER = 'ShopOwner',\n  ADMIN = 'Admin',\n}\n\n@Schema({\n  // it will automatically add time when a new user is created\n  timestamps: true,\n})\nexport class User {\n  @Prop()\n  firstName: string;\n\n  @Prop()\n  lastName: string;\n\n  @Prop({ unique: [true, 'Duplicate email entered!'] })\n  email: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  postalCode: number;\n\n  @Prop()\n  role: UserRole;\n\n  @Prop()\n  lat: number;\n\n  @Prop()\n  lng: number;\n}\n\n// export User schema\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/Guards/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/auth/dto/check-email.dto.ts\n            \n            class\n            CheckEmailDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/create-shop.dto.ts\n            \n            class\n            CreateShopDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/dto/login-dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-dto.ts\n            \n            class\n            ShopLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/signup-dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/schema/shop.schema.ts\n            \n            class\n            Shop\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/schema/shop.schema.ts\n            \n            variable\n            ShopSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/schema/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/auth/schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/checkout/checkout.controller.ts\n            \n            controller\n            CheckoutController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/checkout/checkout.service.ts\n            \n            injectable\n            CheckoutService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/checkout/dto/checkout-dto.ts\n            \n            class\n            CheckoutDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/checkout/dto/checkout-dto.ts\n            \n            class\n            CheckoutItem\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/helper/utility.ts\n            \n            function\n            deg2rad\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/medicine/dto/create-medicine-dto.ts\n            \n            class\n            CreateMedicineDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/medicine/dto/update-medicine-dto.ts\n            \n            class\n            UpdateMedicineDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/medicine/medicine.controller.ts\n            \n            controller\n            MedicineController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/medicine/medicine.service.ts\n            \n            injectable\n            MedicineService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/medicine/schema/medicine.schema.ts\n            \n            class\n            Medicine\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/medicine/schema/medicine.schema.ts\n            \n            variable\n            MedicineSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/dto/cartItem-dto.ts\n            \n            class\n            CartItemDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/orders/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/orders/dto/update-order-status.dto.ts\n            \n            class\n            UpdateOrderStatusDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/orders/schema/order.schema.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/orders/schema/order.schema.ts\n            \n            variable\n            OrderSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stocks/dto/create-stock.dto.ts\n            \n            class\n            CreateStockDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/stocks/dto/update-stock.dto.ts\n            \n            class\n            UpdateStockDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/stocks/schema/stock.schema.ts\n            \n            class\n            Stock\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/stocks/schema/stock.schema.ts\n            \n            variable\n            StockSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stocks/stocks.controller.ts\n            \n            controller\n            StocksController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/stocks/stocks.service.ts\n            \n            injectable\n            StocksService\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.2.7\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/mongoose : ^10.0.1\n        \n            @nestjs/passport : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/serve-static : ^4.0.0\n        \n            @stripe/stripe-js : ^2.1.10\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            mongoose : ^7.6.3\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            stripe : ^14.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OrderStatus   (src/.../create-order.dto.ts)\n                        \n                        \n                            OrderStatus   (src/.../order.schema.ts)\n                        \n                        \n                            RoleDto   (src/.../signup-dto.ts)\n                        \n                        \n                            UserRole   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/orders/dto/create-order.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : COMPLETED\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n            \n        \n\n    src/orders/schema/order.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatus\n                    \n                \n                        \n                            \n                                 DELIVERED\n                            \n                        \n                        \n                            \n                                Value : DELIVERED\n                            \n                        \n                        \n                            \n                                 SHIPPED\n                            \n                        \n                        \n                            \n                                Value : SHIPPED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n            \n        \n\n    src/auth/dto/signup-dto.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleDto\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 SHOP\n                            \n                        \n                        \n                            \n                                Value : SHOP\n                            \n                        \n                        \n                            \n                                 CUSTOMER\n                            \n                        \n                        \n                            \n                                Value : CUSTOMER\n                            \n                        \n            \n        \n\n    src/auth/schema/user.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 CUSTOMER\n                            \n                        \n                        \n                            \n                                Value : Customer\n                            \n                        \n                        \n                            \n                                 SHOPOWNER\n                            \n                        \n                        \n                            \n                                Value : ShopOwner\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : Admin\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            deg2rad   (src/.../utility.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/helper/utility.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deg2rad\n                        \n                    \n                \n            \n            \n                \ndeg2rad(angle: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                angle\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMedXpress - Server \nTable of Contents\n\nOverview\nGetting Started\nDatabase Setup\nServer Setup\n\n\nDefined Routes\nCustomer Routes\nShop Routes\nPayment Routes\nMedicine Routes\nOrders Routes\nStocks Routes\n\n\nDocumentation\nClient Side\n\nOverview\nMedXpress Server is built using Nest JS and utilizes PNPM as the package manager. If you prefer NPM, delete the pnpm-lock.yaml file and run npm install to generate package-lock.json.\nGetting Started\nDatabase Setup\n\nNavigate to /miscellaneous/medxpress-database-collection/\nRun pnpm install to install dependencies.\nInsert medicine data into MongoDB by running node ./intert_to_mongodb.js.\nRemove duplicate medicine data with node ./find_and_delete_duplicate_data_mongodb.js.\n\nServer Setup\n\nGo back to the root folder and run pnpm install.\nStart the server with pnpm start:dev. It will run on port 3001.\n\nDefined Routes\nCustomer Routes\n\nCreate new customer: POST /auth/signup\nCustomer login: POST /auth/login\nGet single customer: GET /auth/user/:id\nFind duplicate customer email: POST /auth/check-email\n\nShop Routes\n\nCreate new shop: POST /auth/register-shop\nShop login: POST /auth/login-shop\nGet all shops: GET /auth/shops\nGet specific shop: GET /auth/shop/:id\n\nPayment Routes\n\nPayment route: POST /checkout\n\nMedicine Routes\n\nGet all medicines: GET /medicines/find\nGet medicine by ID: GET /medicines/:id\nCreate new medicine: POST /medicines/\nUpdate a medicine: PUT /medicines/:id\nDelete a medicine: DELETE /medicines/:id\n\nOrders Routes\n\nCreate new order: POST /orders\nGet all orders: POST /orders\nGet single order by order id: GET /orders/:id\nUpdate order by order id: PUT /orders/:id\nDelete order by order id: DELETE /orders/:id\nGet orders by userId: GET /orders/user/:userId\n\nStocks Routes\n\nCreate Stock: POST /stocks\nGet all stocks: GET /stocks\nGet stocks by shop id: GET /stocks/shop/:shopId\nGet stock by stock id: GET /stocks/:stockId\nUpdate stock: POST /stocks/:stockId\nDelete stock: DELETE /stocks/:stockId\nSearch Stock by Medicine: GET /stocks/search/medicine\nSearch stocks by medicine and shop id: GET /search/medicine-and-shop\n\nDocumentation\nRead the full documentation for the MedXpress Server here.\nClient Side\nExplore the MedXpress - Client Side repository.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CheckoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MedicineModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StocksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CheckoutModule\n\n\n\ncluster_CheckoutModule_providers\n\n\n\ncluster_MedicineModule\n\n\n\ncluster_MedicineModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_exports\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_StocksModule\n\n\n\ncluster_StocksModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nCheckoutModule\n\nCheckoutModule\n\nCheckoutModule -->\n\nAuthModule->CheckoutModule\n\n\n\n\n\nMedicineModule\n\nMedicineModule\n\nMedicineModule -->\n\nAuthModule->MedicineModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\nAppModule -->\n\nCheckoutModule->AppModule\n\n\n\nAppModule -->\n\nMedicineModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nCheckoutModule -->\n\nOrdersModule->CheckoutModule\n\n\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nOrdersService \n\nOrdersService \n\nOrdersService  -->\n\nOrdersModule->OrdersService \n\n\n\n\n\nStocksModule\n\nStocksModule\n\nAppModule -->\n\nStocksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nCheckoutService\n\nCheckoutService\n\nCheckoutModule -->\n\nCheckoutService->CheckoutModule\n\n\n\n\n\nMedicineService\n\nMedicineService\n\nMedicineModule -->\n\nMedicineService->MedicineModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nStocksService\n\nStocksService\n\nStocksModule -->\n\nStocksService->StocksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MedicineSchema   (src/.../medicine.schema.ts)\n                        \n                        \n                            OrderSchema   (src/.../order.schema.ts)\n                        \n                        \n                            ShopSchema   (src/.../shop.schema.ts)\n                        \n                        \n                            StockSchema   (src/.../stock.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/medicine/schema/medicine.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MedicineSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Medicine)\n                    \n                \n\n\n        \n    \n\n    src/orders/schema/order.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Order)\n                    \n                \n\n\n        \n    \n\n    src/auth/schema/shop.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ShopSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Shop)\n                    \n                \n\n\n        \n    \n\n    src/stocks/schema/stock.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StockSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Stock)\n                    \n                \n\n\n        \n    \n\n    src/auth/schema/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
