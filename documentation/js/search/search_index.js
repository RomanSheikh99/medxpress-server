var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.147,1,2.201]],["body/controllers/AppController.html",[0,2.041,1,3.617,2,1.648,3,0.397,4,0.397,5,0.349,6,3.753,7,0.446,8,2.026,9,5.211,10,1.069,11,0.028,12,0.663,13,4.457,14,1.648,15,0.966,16,4.457,17,0.488,18,1.069,19,3.242,20,3.753,21,0.397,22,0.139,23,2.435,24,1.774,25,1.533,26,4.457,27,0.022,28,0.022]],["title/modules/AppModule.html",[29,0.861,30,2.201]],["body/modules/AppModule.html",[1,3.468,2,1.541,3,0.262,4,0.262,5,0.379,11,0.028,17,0.547,18,0.707,19,3.232,20,2.48,21,0.262,22,0.092,27,0.017,28,0.017,29,1.431,30,4.289,31,1.365,32,1.365,33,1.609,34,1.609,35,1.365,36,2.64,37,1.609,38,2.48,39,2.48,40,2.48,41,3.232,42,3.538,43,3.538,44,3.232,45,2.276,46,1.609,47,1.609,48,2.946,49,2.491,50,1.089,51,4.166,52,4.833,53,2.946,54,2.946,55,1.945,56,2.75,57,0.943,58,2.946,59,2.946,60,2.946,61,2.946,62,2.48,63,4.069,64,2.946,65,2.946,66,2.946,67,2.946,68,2.946,69,1.172,70,2.48,71,2.946,72,2.48,73,2.174,74,2.946,75,2.946,76,3.507,77,2.174,78,3.566,79,4.833,80,3.507,81,1.264,82,1.945,83,1.945,84,2.174,85,1.609,86,2.48,87,2.946,88,2.946]],["title/injectables/AppService.html",[19,1.822,89,1.068]],["body/injectables/AppService.html",[3,0.418,4,0.418,5,0.368,7,0.47,8,2.093,9,5.307,11,0.028,12,0.699,14,1.739,15,0.997,17,0.418,18,1.128,19,3.092,21,0.418,22,0.146,25,1.617,27,0.023,28,0.023,89,1.812,90,2.36,91,3.959,92,4.702,93,4.702,94,4.702]],["title/controllers/AuthController.html",[0,1.147,95,2.201]],["body/controllers/AuthController.html",[0,1.163,2,0.82,3,0.197,4,0.197,5,0.174,7,0.222,8,1.25,10,1.099,11,0.028,12,0.681,14,2.061,15,0.722,17,0.463,18,0.532,21,0.197,22,0.069,23,1.212,25,1.576,27,0.014,28,0.014,29,0.572,50,2.112,77,1.636,78,1.636,85,1.212,95,2.705,96,1.867,97,1.464,98,1.636,99,2.23,100,3.45,101,2.847,102,3.836,103,4.377,104,2.218,105,3.569,106,3.381,107,2.954,108,2.218,109,1.966,110,1.021,111,0.743,112,1.966,113,2.391,114,3.381,115,3.64,116,2.582,117,3.77,118,3.381,119,2.847,120,1.867,121,3.381,122,2.218,123,2.798,124,2.467,125,2.45,126,2.847,127,1.867,128,3.233,129,3.381,130,2.218,131,2.123,132,3.025,133,3.858,134,3.858,135,3.381,136,1.867,137,3.233,138,3.381,139,2.218,140,3.025,141,1.867,142,1.867,143,1.326,144,2.286,145,2.218,146,1.464,147,2.238,148,1.867,149,1.867,150,1.867,151,1.464,152,2.218,153,2.218,154,2.218,155,3.858,156,2.218,157,2.218,158,2.218,159,1.113,160,1.163,161,1.45,162,2.218,163,1.898,164,1.63,165,2.218,166,1.326,167,1.113,168,1.113,169,2.218,170,1.326,171,1.636,172,4.097,173,2.218,174,2.218,175,1.867,176,1.867,177,1.867,178,2.218]],["title/modules/AuthModule.html",[29,0.861,41,1.822]],["body/modules/AuthModule.html",[2,1.648,3,0.289,4,0.289,5,0.254,11,0.028,17,0.566,18,0.779,21,0.289,22,0.101,25,1.116,27,0.018,28,0.018,29,1.414,31,1.504,32,1.504,33,1.773,34,1.773,35,1.504,36,2.781,37,2.781,41,3.431,45,2.435,46,1.773,47,1.773,49,1.941,55,2.142,56,2.142,57,1.039,73,2.395,95,3.36,98,2.395,110,0.723,124,1.774,132,2.142,147,3.241,148,2.732,151,2.142,179,2.732,180,2.732,181,2.732,182,3.868,183,3.245,184,3.245,185,5.09,186,3.245,187,2.395,188,4.457,189,1.941,190,2.942,191,3.245,192,3.245,193,3.245,194,2.732,195,3.245,196,3.245,197,2.142,198,3.245,199,5.09,200,3.752,201,3.245,202,3.245,203,3.245,204,3.245,205,3.245,206,3.245,207,3.245,208,3.245,209,3.245,210,3.245,211,1.504,212,2.237,213,2.395]],["title/injectables/AuthService.html",[89,1.068,147,1.822]],["body/injectables/AuthService.html",[3,0.163,4,0.163,5,0.144,7,0.183,8,1.078,11,0.028,12,0.671,14,1.933,15,0.847,17,0.465,18,0.44,21,0.163,22,0.057,25,1.653,27,0.012,28,0.012,50,1.933,57,0.587,69,0.729,89,0.933,90,0.92,99,2.46,100,2.454,101,2.454,102,3.545,103,4.045,107,3.373,109,1.935,110,1.005,111,0.732,112,1.935,113,2.061,115,3.05,116,2.422,117,3.171,119,2.454,120,2.454,123,2.705,124,2.488,125,2.17,126,2.454,127,1.543,128,3.127,131,1.915,132,2.729,133,3.799,134,3.481,135,3.05,136,1.543,137,3.127,141,1.543,143,1.096,144,1.915,147,1.592,149,1.543,150,1.543,151,1.21,155,3.055,159,1.463,160,2.002,161,2.161,163,2.09,164,1.796,166,2.17,167,1.463,168,1.463,171,3.329,175,1.543,176,3.055,177,2.454,187,1.352,197,1.21,211,0.849,214,1.543,215,1.743,216,1.543,217,2.472,218,5.038,219,1.833,220,2.454,221,2.914,222,1.833,223,2.914,224,2.914,225,1.833,226,2.914,227,1.833,228,1.833,229,1.543,230,1.21,231,2.454,232,1.833,233,1.743,234,2.15,235,2.15,236,2.15,237,2.978,238,2.15,239,2.15,240,1.21,241,2.914,242,2.914,243,3.628,244,2.15,245,1.833,246,1.543,247,2.914,248,1.833,249,1.543,250,1.833,251,4.134,252,2.914,253,2.914,254,4.134,255,2.914,256,1.833,257,1.833,258,2.914,259,2.914,260,1.833,261,1.833,262,1.833,263,1.833,264,1.833,265,1.833,266,1.833,267,1.833,268,1.543]],["title/classes/CartItemDto.html",[22,0.104,269,2.201]],["body/classes/CartItemDto.html",[3,0.305,4,0.305,5,0.269,7,0.343,10,1.504,11,0.028,12,0.932,15,1.063,17,0.305,21,0.305,22,0.144,27,0.019,28,0.019,110,1.167,111,1.017,269,3.056,270,1.099,271,5.35,272,1.59,273,1.284,274,3.865,275,3.865,276,2.862,277,2.862,278,3.458,279,3.865,280,3.865,281,4.411,282,2.89,283,2.755,284,5.855,285,2.532,286,2.532,287,2.532,288,2.532,289,2.265,290,2.532,291,2.532,292,3.8,293,3.296,294,2.598,295,1.366]],["title/classes/CheckEmailDto.html",[22,0.104,105,2.201]],["body/classes/CheckEmailDto.html",[3,0.395,4,0.395,5,0.348,7,0.445,10,1.066,11,0.027,12,0.661,15,0.964,17,0.395,21,0.395,22,0.17,24,2.358,27,0.022,28,0.022,105,3.61,107,3.468,111,0.72,270,1.423,273,1.517,292,3.27,295,1.768,296,4.604,297,3.741,298,3.278,299,4.035,300,4.035,301,4.035,302,4.035,303,4.443,304,4.035]],["title/controllers/CheckoutController.html",[0,1.147,305,2.201]],["body/controllers/CheckoutController.html",[0,1.609,2,1.288,3,0.31,4,0.31,5,0.273,7,0.349,8,1.729,10,0.836,11,0.028,12,0.518,14,1.729,17,0.502,18,0.836,21,0.31,22,0.108,23,1.904,24,1.387,25,1.199,27,0.019,28,0.019,29,0.899,50,1.952,83,4.153,84,3.895,85,1.904,97,2.3,99,2.264,109,1.494,110,0.776,111,0.565,112,1.494,113,2.264,116,2.446,117,3.087,131,2.167,140,3.087,144,1.614,146,3.485,160,1.199,161,1.494,305,3.485,306,2.934,307,2.934,308,3.438,309,3.484,310,4.445,311,4.955,312,2.727,313,2.555,314,2.934,315,2.884,316,2.934,317,3.484,318,3.484,319,2.934,320,3.484,321,1.749,322,2.934,323,3.484]],["title/classes/CheckoutDto.html",[22,0.104,308,1.822]],["body/classes/CheckoutDto.html",[3,0.341,4,0.341,5,0.3,7,0.384,10,1.195,11,0.028,12,0.741,15,1.07,17,0.443,21,0.443,22,0.182,27,0.02,28,0.02,69,1.526,110,0.854,111,0.95,270,1.228,272,1.777,273,1.382,274,2.829,275,2.829,276,2.095,277,2.095,278,2.531,279,2.829,280,2.829,283,2.605,293,3.401,294,2.884,295,1.526,308,2.722,321,2.779,324,4.084,325,2.779,326,3.504,327,3.835,328,3.229,329,3.835,330,3.835,331,2.98,332,3.229,333,3.676,334,2.531,335,4.933,336,3.229,337,2.829]],["title/classes/CheckoutItem.html",[22,0.104,326,1.994]],["body/classes/CheckoutItem.html",[3,0.289,4,0.289,5,0.254,7,0.325,10,1.485,11,0.028,12,0.92,15,1.071,17,0.397,21,0.397,22,0.171,27,0.018,28,0.018,69,1.291,110,1.134,111,1.03,270,1.039,272,1.504,273,1.236,274,3.756,275,3.756,276,2.781,277,2.781,278,3.36,279,3.756,280,3.756,283,2.725,285,2.395,288,2.395,289,2.142,290,2.395,291,2.395,293,3.241,294,2.868,295,1.291,308,1.773,321,1.629,324,4.633,325,1.629,326,3.277,331,2.665,332,2.732,333,3.288,334,2.142,335,4.613,336,2.732,337,2.395,338,3.245,339,5.479,340,2.395,341,3.245,342,3.245]],["title/modules/CheckoutModule.html",[29,0.861,42,1.994]],["body/modules/CheckoutModule.html",[2,1.926,3,0.366,4,0.366,5,0.322,11,0.028,17,0.535,18,0.986,21,0.366,22,0.128,27,0.021,28,0.021,29,1.552,31,1.904,32,1.904,33,2.246,34,2.246,35,1.904,36,3.124,37,2.246,42,3.897,44,3.463,45,2.846,46,2.246,47,2.246,49,3.115,83,2.713,305,3.775,315,3.463,316,3.461,343,3.461,344,3.461,345,4.11,346,4.11,347,4.11,348,4.11]],["title/injectables/CheckoutService.html",[89,1.068,315,1.822]],["body/injectables/CheckoutService.html",[3,0.219,4,0.219,5,0.192,7,0.246,8,1.35,11,0.028,12,0.767,14,1.784,15,0.643,17,0.429,18,0.589,21,0.219,22,0.076,23,1.342,25,1.499,27,0.015,28,0.015,50,1.784,83,3.877,84,3.987,89,1.169,90,1.233,99,2.318,109,1.869,110,1.074,111,0.836,112,1.869,113,2.211,116,2.504,117,2.41,131,1.691,144,1.691,159,1.233,160,1.859,161,1.869,163,1.138,164,0.977,167,1.233,168,2.422,215,1.469,233,3.512,240,1.621,273,1.013,278,1.621,307,2.068,308,3.421,310,4.711,311,5.033,312,2.389,313,1.994,314,2.068,315,1.994,319,2.068,321,1.833,322,3.669,325,1.233,326,2.183,349,2.068,350,4.357,351,4.357,352,3.651,353,2.456,354,2.713,355,3.651,356,2.456,357,3.651,358,2.456,359,4.341,360,3.074,361,2.694,362,3.651,363,3.651,364,2.456,365,2.456,366,2.456,367,2.456,368,2.456,369,2.456,370,2.456,371,2.456,372,2.456,373,1.621,374,1.812,375,2.456,376,2.456,377,2.456,378,2.456,379,2.456,380,2.456,381,2.456,382,2.456,383,2.456,384,3.651,385,2.456,386,2.456,387,2.456,388,2.456,389,2.456,390,2.456,391,2.456,392,2.456,393,2.456,394,2.456,395,2.456,396,2.456,397,2.456,398,2.456]],["title/classes/CreateMedicineDto.html",[22,0.104,399,1.994]],["body/classes/CreateMedicineDto.html",[3,0.305,4,0.305,5,0.268,7,0.343,10,1.503,11,0.028,12,0.932,15,1.163,17,0.305,21,0.305,22,0.144,27,0.019,28,0.019,81,2.724,110,1.165,111,1.05,270,1.096,272,1.586,273,1.282,276,2.858,277,2.858,283,1.982,286,2.526,289,2.26,293,2.858,294,3.042,295,1.362,331,3.129,399,2.764,400,5.347,401,3.454,402,3.861,403,3.861,404,3.861,405,3.423,406,3.423,407,3.423,408,3.423,409,2.882,410,3.423]],["title/classes/CreateOrderDto.html",[22,0.104,411,1.994]],["body/classes/CreateOrderDto.html",[3,0.353,4,0.353,5,0.311,7,0.397,10,1.35,11,0.028,12,0.836,15,1.046,17,0.501,21,0.353,22,0.175,27,0.021,28,0.021,69,1.579,111,0.995,113,1.702,269,3.918,270,1.27,273,1.413,281,4.288,292,3.549,294,2.606,295,1.579,321,2.824,325,2.824,328,3.341,331,3.046,333,3.758,334,2.619,337,2.928,373,3.713,411,3.046,412,4.997,413,3.341,414,3.968,415,3.968,416,3.968,417,3.968,418,3.968]],["title/injectables/JwtStrategy.html",[89,1.068,182,1.994]],["body/injectables/JwtStrategy.html",[3,0.325,4,0.325,5,0.286,7,0.365,8,1.784,11,0.028,12,0.717,14,1.35,17,0.547,18,0.876,21,0.325,22,0.114,24,1.453,25,1.256,27,0.02,28,0.02,57,1.169,89,1.545,90,1.833,99,2.318,102,2.694,109,2.069,110,1.075,111,0.782,112,2.069,123,1.833,124,2.288,132,2.41,151,2.41,160,1.66,161,1.566,163,1.692,164,1.453,182,2.885,189,2.183,194,3.074,197,2.41,211,1.692,215,2.183,216,3.074,217,3.438,220,4.062,229,3.074,230,2.41,233,2.183,419,3.074,420,4.062,421,4.825,422,4.825,423,3.651,424,4.825,425,3.651,426,4.825,427,3.651,428,3.651,429,3.651,430,2.694,431,3.651,432,3.651,433,3.651,434,3.651,435,3.651,436,3.651,437,3.651,438,3.651,439,3.651]],["title/classes/LoginDto.html",[22,0.104,128,1.994]],["body/classes/LoginDto.html",[3,0.37,4,0.37,5,0.326,7,0.416,10,1.259,11,0.028,12,0.781,15,1.064,17,0.37,21,0.37,22,0.163,24,2.531,27,0.022,28,0.022,107,3.402,111,0.851,128,3.139,237,3.796,270,1.332,272,1.927,273,1.456,287,3.07,292,3.439,294,2.432,295,1.655,298,3.07,299,3.873,300,3.873,301,3.873,302,3.873,304,3.873,340,3.07,440,4.842,441,3.503,442,3.503,443,3.503]],["title/classes/Medicine.html",[22,0.104,81,1.43]],["body/classes/Medicine.html",[3,0.307,4,0.307,5,0.27,7,0.345,10,1.506,11,0.028,12,0.933,15,1.165,17,0.413,21,0.413,22,0.107,27,0.019,28,0.019,57,1.104,69,1.373,81,1.992,110,1.17,111,1.051,160,1.187,211,1.598,212,2.332,270,1.104,273,1.289,276,2.869,277,2.869,283,1.992,401,3.467,402,3.875,403,3.875,404,3.875,420,2.904,444,2.545,445,4.9,446,3.449,447,3.449,448,3.449,449,3.449,450,3.449,451,3.449,452,3.449,453,3.449,454,3.449,455,2.545,456,4.645,457,2.545,458,3.449,459,2.277,460,2.904]],["title/controllers/MedicineController.html",[0,1.147,461,2.201]],["body/controllers/MedicineController.html",[0,1.084,2,0.749,3,0.18,4,0.18,5,0.159,7,0.203,8,1.166,10,1.135,11,0.028,12,0.704,14,2.102,15,1.036,17,0.446,18,0.486,21,0.18,22,0.063,23,1.106,24,0.806,25,1.628,27,0.013,28,0.013,29,0.523,50,2.141,81,2.771,85,1.106,97,1.336,99,1.66,109,2.321,110,1.054,111,0.767,112,2.03,113,2.15,116,2.424,123,3.11,131,2.024,140,2.081,142,1.705,143,1.885,144,2.424,146,2.081,159,1.016,160,0.696,161,0.868,163,1.793,164,1.995,167,1.016,168,2.193,170,1.885,189,1.211,240,1.336,313,2.956,399,3.236,461,2.555,462,1.705,463,4.68,464,2.654,465,2.654,466,2.654,467,2.654,468,3.258,469,1.705,470,2.025,471,2.025,472,2.883,473,2.081,474,2.081,475,1.885,476,1.705,477,2.025,478,2.025,479,2.883,480,2.081,481,1.705,482,2.025,483,2.025,484,3.258,485,4.22,486,2.654,487,2.081,488,3.258,489,1.705,490,2.025,491,2.025,492,2.081,493,1.705,494,3.399,495,2.025,496,2.025,497,2.555,498,2.612,499,1.705,500,2.326,501,2.025,502,2.114,503,1.705,504,1.336,505,1.705,506,1.494,507,2.025,508,2.025,509,2.025,510,4.733,511,2.025,512,2.025,513,3.152,514,2.025,515,2.025,516,2.025,517,1.705,518,2.555,519,2.025,520,2.025,521,2.025,522,1.106,523,2.025,524,2.025,525,2.025,526,2.025,527,2.025,528,2.025,529,2.025,530,2.025]],["title/modules/MedicineModule.html",[29,0.861,43,1.994]],["body/modules/MedicineModule.html",[2,1.87,3,0.349,4,0.349,5,0.307,11,0.028,17,0.557,18,0.941,21,0.349,22,0.122,27,0.021,28,0.021,29,1.444,31,1.817,32,1.817,33,2.143,34,2.143,35,1.817,36,3.057,37,2.143,41,3.421,43,3.86,45,2.762,46,2.143,47,2.143,49,3.023,56,2.589,57,1.256,81,1.682,110,0.874,212,1.969,213,2.894,459,3.337,461,3.693,502,3.421,503,3.302,506,2.894,531,3.302,532,3.302,533,3.922,534,3.922,535,3.922,536,3.922,537,3.922]],["title/injectables/MedicineService.html",[89,1.068,502,1.822]],["body/injectables/MedicineService.html",[3,0.149,4,0.149,5,0.131,7,0.168,8,1.003,11,0.028,12,0.723,14,2.07,15,0.986,17,0.411,18,0.402,21,0.149,22,0.052,24,0.667,25,1.588,27,0.011,28,0.011,50,2.031,57,0.537,69,0.667,81,2.733,89,0.869,90,0.841,99,2.584,109,2.356,110,1.082,111,0.748,112,1.98,113,1.98,116,2.792,123,2.968,125,1.622,131,1.82,143,1.002,144,2.139,159,0.841,160,1.889,161,1.684,163,1.999,164,2.137,166,2.348,167,0.841,168,0.841,170,1.622,171,1.237,211,0.777,215,1.622,217,2.348,230,1.106,233,1.002,240,1.791,244,1.237,249,1.411,283,0.719,313,2.764,399,3.026,401,1.106,463,4.521,464,2.877,465,2.284,466,2.284,467,2.284,468,2.877,469,1.411,472,2.592,473,1.791,474,1.791,475,1.622,476,2.284,479,2.256,480,1.791,481,2.284,484,2.877,485,4.092,486,2.284,487,1.791,488,2.877,489,2.284,492,1.791,493,1.411,494,3.211,497,2.256,498,2.348,500,1.237,502,1.482,504,1.106,505,1.411,506,1.237,518,2.256,522,0.916,538,1.411,539,3.927,540,1.676,541,1.676,542,2.713,543,1.676,544,3.417,545,3.417,546,1.676,547,1.676,548,1.676,549,1.676,550,1.676,551,1.676,552,1.676,553,1.676,554,1.676,555,3.417,556,3.417,557,4.616,558,2.713,559,1.676,560,1.676,561,1.411,562,1.676,563,2.713,564,1.676,565,2.284,566,2.713,567,1.676,568,1.676,569,1.676,570,2.713,571,1.676,572,1.676,573,1.676,574,1.676,575,1.676,576,1.676,577,1.676,578,1.676,579,1.676,580,3.417,581,3.417,582,1.676,583,3.417,584,1.676,585,1.676]],["title/classes/Order.html",[22,0.104,312,1.545]],["body/classes/Order.html",[3,0.353,4,0.353,5,0.311,7,0.397,10,1.35,11,0.028,12,0.836,15,1.046,17,0.353,21,0.501,22,0.124,27,0.021,28,0.021,57,1.27,69,1.579,111,0.912,160,1.365,212,2.557,270,1.27,273,1.413,312,2.36,321,2.824,325,2.824,373,3.918,374,3.758,445,4.713,455,2.928,457,2.928,522,2.168,586,2.619,587,3.968,588,3.968,589,3.968,590,4.288,591,3.341,592,3.341,593,4.288,594,4.288,595,4.288,596,2.619,597,3.341]],["title/controllers/OrdersController.html",[0,1.147,598,2.201]],["body/controllers/OrdersController.html",[0,0.992,2,0.669,3,0.161,4,0.161,5,0.142,7,0.181,8,1.066,10,1.146,11,0.028,12,0.71,14,2.076,15,1.048,17,0.365,18,0.434,21,0.161,22,0.056,23,0.988,24,0.72,25,1.643,27,0.012,28,0.012,29,0.467,50,2.033,82,3.308,85,0.988,97,1.194,99,2.623,109,1.923,110,0.998,111,0.727,112,1.923,113,1.76,116,2.81,123,2.693,124,0.72,125,1.082,131,1.901,140,1.903,143,1.082,144,2.213,146,2.374,159,2.398,160,1.237,161,2.049,163,2.485,164,2.274,166,2.454,167,2.398,168,2.398,170,1.724,268,2.428,312,3.04,313,2.843,325,1.448,354,1.806,411,3.417,472,2.709,473,1.903,474,1.903,475,1.724,479,2.959,480,1.903,487,1.903,492,1.903,497,2.709,498,2.454,499,1.523,500,1.334,504,1.194,518,2.374,522,1.575,598,2.374,599,1.523,600,2.428,601,2.428,602,2.428,603,3.455,604,2.428,605,3.028,606,1.523,607,1.809,608,1.523,609,2.884,610,1.809,611,4.63,612,1.523,613,2.884,614,1.809,615,1.809,616,1.523,617,2.884,618,1.809,619,1.523,620,3.774,621,2.884,622,1.809,623,1.523,624,1.523,625,1.334,626,1.809,627,1.809,628,1.809,629,3.596,630,1.809,631,2.428,632,1.809,633,1.809,634,4.103,635,1.809,636,1.809,637,1.809,638,1.809,639,1.809,640,1.809]],["title/modules/OrdersModule.html",[29,0.861,44,1.822]],["body/modules/OrdersModule.html",[2,1.735,3,0.312,4,0.312,5,0.274,11,0.028,17,0.525,18,0.84,21,0.312,22,0.109,27,0.019,28,0.019,29,1.522,31,2.174,32,1.623,33,1.913,34,1.913,35,1.623,36,2.892,37,2.892,44,3.441,45,2.564,46,1.913,47,1.913,49,2.094,50,1.295,56,3.098,57,1.121,76,2.949,78,3.463,80,3.951,82,3.098,85,1.913,86,2.949,110,0.78,212,2.356,213,2.584,217,2.094,312,2.62,354,3.325,596,3.098,598,3.732,623,2.949,625,2.584,641,2.949,642,2.949,643,2.949,644,3.502,645,3.502,646,3.502,647,3.502,648,3.502,649,3.502]],["title/injectables/OrdersService.html",[89,1.068,354,1.674]],["body/injectables/OrdersService.html",[3,0.161,4,0.161,5,0.141,7,0.181,8,1.065,11,0.028,12,0.745,14,2.113,15,1.059,17,0.399,18,0.433,21,0.161,22,0.056,24,0.719,25,1.642,27,0.012,28,0.012,50,2.075,57,0.578,69,0.719,82,3.628,89,0.922,90,0.907,99,2.622,109,2.048,110,1.063,111,0.774,112,2.048,113,1.759,116,2.832,123,2.868,124,1.993,125,1.08,131,1.9,144,2.212,159,2.397,160,0.991,161,0.775,163,2.212,164,2.233,166,1.08,167,2.397,168,2.397,170,2.452,211,0.837,215,1.723,217,2.452,230,1.192,233,1.08,244,2.125,246,3.025,312,2.992,313,2.842,325,1.804,354,1.446,411,3.356,472,2.707,473,1.902,474,1.902,475,1.723,479,2.707,480,1.902,487,2.707,492,1.902,497,2.707,498,2.452,504,1.192,518,2.707,522,1.574,565,1.521,600,2.425,601,2.425,602,2.425,603,3.452,604,2.425,605,3.025,606,2.425,608,2.425,611,4.217,612,2.425,616,2.425,619,1.521,620,3.772,624,1.521,625,1.333,631,2.425,650,1.521,651,1.806,652,1.806,653,2.881,654,1.806,655,1.806,656,1.806,657,1.806,658,1.806,659,2.881,660,3.593,661,3.593,662,3.593,663,1.806,664,1.806,665,1.806,666,1.806,667,2.881,668,1.806,669,4.48,670,1.806,671,1.806,672,1.806,673,1.806,674,1.806,675,1.806,676,1.806,677,1.806,678,1.806]],["title/classes/SignUpDto.html",[22,0.104,137,1.994]],["body/classes/SignUpDto.html",[3,0.29,4,0.29,5,0.255,7,0.326,10,1.46,11,0.028,12,0.905,15,1.141,17,0.29,21,0.29,22,0.139,24,2.679,27,0.018,28,0.018,107,3.143,111,0.987,137,2.674,234,3.765,235,3.765,236,3.765,237,3.368,238,3.765,239,3.765,270,1.044,272,1.511,273,1.241,283,1.918,292,3.705,293,2.443,294,2.753,295,1.298,298,2.406,299,3.299,300,3.299,301,3.299,302,3.299,304,3.299,340,2.406,409,2.745,441,2.745,442,2.745,443,2.745,679,5.217,680,5.49,681,3.261,682,3.261,683,3.261,684,3.261,685,3.261,686,3.261]],["title/classes/UpdateMedicineDto.html",[22,0.104,494,1.994]],["body/classes/UpdateMedicineDto.html",[3,0.292,4,0.292,5,0.257,7,0.329,10,1.489,11,0.028,12,0.923,15,1.157,17,0.292,21,0.292,22,0.14,27,0.018,28,0.018,81,2.7,110,1.141,111,1.043,270,1.052,272,1.522,273,1.247,276,2.798,277,2.798,282,2.765,283,1.927,285,2.423,286,2.423,287,2.423,288,2.423,289,2.168,290,2.423,291,2.423,293,2.455,294,2.824,295,1.307,321,1.649,331,2.687,401,3.635,402,3.779,403,3.779,404,3.779,494,2.687,498,1.964,687,5.301,688,5.954,689,3.284,690,3.284,691,6.296,692,4.493,693,3.284,694,3.284]],["title/classes/User.html",[22,0.104,124,1.327]],["body/classes/User.html",[3,0.294,4,0.294,5,0.259,7,0.331,10,1.465,11,0.028,12,0.908,15,1.124,17,0.294,21,0.492,22,0.103,27,0.019,28,0.019,57,1.059,69,1.797,107,3.017,111,0.99,115,2.441,124,2.198,135,2.441,160,1.138,164,1.316,190,2.184,212,2.581,234,3.793,235,3.793,236,3.793,237,3.393,238,3.793,239,3.793,270,1.059,273,1.253,283,1.937,445,4.848,455,2.441,457,2.441,475,1.978,522,1.807,590,3.802,591,2.785,592,2.785,695,2.184,696,3.308,697,3.308,698,3.308,699,3.308,700,3.308,701,3.308,702,3.308,703,3.308,704,4.328,705,3.308,706,3.802,707,3.802,708,3.802,709,3.308,710,2.785,711,3.308,712,3.308,713,2.785]],["title/coverage.html",[714,3.822]],["body/coverage.html",[0,1.949,1,2.064,5,0.245,6,2.633,11,0.028,19,1.708,22,0.2,27,0.018,28,0.018,35,1.449,81,2.141,89,1.878,91,2.633,95,2.064,96,2.633,105,2.064,111,0.507,124,1.244,128,1.87,137,1.87,147,1.708,164,1.244,182,1.87,190,2.064,200,4.202,214,2.633,269,2.064,271,2.633,272,2.787,296,2.633,297,2.633,305,2.064,306,2.633,308,1.708,312,1.449,315,1.708,324,3.205,326,1.87,349,2.633,354,1.57,399,1.87,400,2.633,411,1.87,412,2.633,413,2.633,419,2.633,440,2.633,444,3.205,459,2.064,461,2.064,462,2.633,494,1.87,502,1.708,538,2.633,561,5.717,586,2.867,596,2.064,598,2.064,599,2.633,650,2.633,679,2.633,687,2.633,695,2.867,714,2.633,715,3.127,716,3.127,717,3.127,718,5.393,719,4.991,720,3.127,721,4.991,722,5.393,723,5.393,724,5.667,725,2.633,726,3.127,727,4.344,728,3.127,729,3.127,730,3.127]],["title/dependencies.html",[32,1.857,731,2.059]],["body/dependencies.html",[11,0.028,18,1.007,22,0.164,27,0.022,28,0.022,32,1.945,55,2.771,57,1.344,187,3.098,189,2.511,197,2.771,211,1.945,231,3.535,295,1.671,334,2.771,359,3.535,430,4.261,732,4.198,733,4.198,734,4.198,735,5.279,736,4.198,737,4.198,738,4.198,739,4.198,740,4.198,741,4.198,742,4.198,743,4.198,744,4.198,745,4.198,746,4.198,747,4.198,748,4.198,749,4.198,750,4.198,751,4.198,752,4.198,753,4.198,754,4.198,755,4.198,756,3.535,757,4.198,758,4.198,759,4.198,760,4.198,761,4.198,762,4.198,763,4.198]],["title/miscellaneous/enumerations.html",[764,1.524,765,3.374]],["body/miscellaneous/enumerations.html",[7,0.464,11,0.028,27,0.023,28,0.023,361,4.875,373,3.706,374,4.142,586,3.062,593,4.727,594,4.727,595,4.727,695,3.062,704,4.727,706,4.727,707,4.727,708,4.727,764,2.534,765,3.905,766,3.905,767,3.905]],["title/miscellaneous/functions.html",[764,1.524,768,3.374]],["body/miscellaneous/functions.html",[7,0.518,11,0.025,27,0.025,28,0.025,35,2.931,725,4.362,764,2.83,768,4.362,769,5.181]],["title/index.html",[7,0.279,770,2.79,771,2.79]],["body/index.html",[0,1.397,11,0.021,27,0.021,28,0.021,29,1.334,55,2.681,57,1.3,62,4.353,63,3.42,70,3.42,72,3.42,73,3.815,77,3.815,98,4.663,124,1.616,189,2.429,211,2.635,212,2.039,430,4.197,517,4.353,710,5.205,731,2.997,756,4.353,772,4.062,773,4.062,774,4.062,775,4.062,776,4.062,777,6.422,778,4.062,779,4.062,780,4.062,781,4.062,782,4.062,783,4.062,784,5.17,785,4.062,786,5.17,787,4.062,788,5.17,789,4.062,790,4.062,791,4.062,792,4.062,793,5.687,794,5.687,795,5.17,796,4.062,797,4.062,798,4.062,799,4.062]],["title/modules.html",[31,2.103]],["body/modules.html",[11,0.024,27,0.024,28,0.024,30,3.202,31,2.248,41,2.65,42,2.901,43,2.901,44,2.65,800,6.505,801,6.505,802,6.505,803,6.505]],["title/overview.html",[804,3.822]],["body/overview.html",[2,1.365,11,0.028,19,2.968,27,0.02,28,0.02,29,0.952,30,4.357,31,1.71,32,1.71,33,2.016,34,2.016,35,1.71,36,2.016,37,2.016,38,3.107,39,3.107,40,3.107,41,3.522,42,3.755,43,3.755,44,3.431,45,2.655,46,2.016,47,2.016,90,1.853,147,2.968,179,3.107,180,3.107,181,3.107,182,3.755,270,1.182,315,2.968,343,3.107,344,3.107,354,3.152,502,2.968,531,3.107,532,3.107,641,3.107,642,3.107,643,3.107,804,3.107,805,4.859,806,3.69,807,3.69]],["title/properties.html",[273,1.112,731,2.059]],["body/properties.html",[11,0.027,27,0.024,28,0.024,50,1.894,273,1.421,808,5.123,809,5.123,810,5.123,811,5.123,812,5.123]],["title/miscellaneous/variables.html",[764,1.524,813,3.374]],["body/miscellaneous/variables.html",[7,0.484,11,0.027,27,0.024,28,0.024,190,3.799,360,5.175,361,4.535,444,3.567,459,3.799,460,4.07,586,3.191,596,3.799,597,4.07,695,3.191,713,4.07,764,2.641,766,4.07,767,4.07,813,4.07,814,4.834]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":561,"title":{},"body":{"injectables/MedicineService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":809,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":565,"title":{},"body":{"injectables/MedicineService.html":{},"injectables/OrdersService.html":{}}}],["1.0.0",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MedicineService.html":{}}}],["10.0.0",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["10.2.7",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":386,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["12",{"_index":807,"title":{},"body":{"overview.html":{}}}],["14.2.0",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["2.1.10",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":780,"title":{},"body":{"index.html":{}}}],["4.0.0",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":805,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":806,"title":{},"body":{"overview.html":{}}}],["7.6.3",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":274,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{}}}],["access",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["access_token",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["add",{"_index":710,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["address",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["admin",{"_index":708,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["already",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["app",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["app.controller",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module.ts",{"_index":787,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":19,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":692,"title":{},"body":{"classes/UpdateMedicineDto.html":{}}}],["assign",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["associated",{"_index":659,"title":{},"body":{"injectables/OrdersService.html":{}}}],["async",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["auth",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"index.html":{}}}],["auth.controller",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":95,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"index.html":{}}}],["authguard",{"_index":507,"title":{},"body":{"controllers/MedicineController.html":{}}}],["authmodule",{"_index":41,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MedicineModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":812,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":147,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":709,"title":{},"body":{"classes/User.html":{}}}],["await",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["badrequestexception",{"_index":500,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{}}}],["badrequestexception('failed",{"_index":629,"title":{},"body":{"controllers/OrdersController.html":{}}}],["badrequestexception('no",{"_index":562,"title":{},"body":{"injectables/MedicineService.html":{}}}],["badrequestexception(error.message",{"_index":514,"title":{},"body":{"controllers/MedicineController.html":{}}}],["bcrypt",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcryptcreate",{"_index":797,"title":{},"body":{"index.html":{}}}],["bdt",{"_index":389,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["body",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CheckoutController.html":{},"controllers/MedicineController.html":{},"controllers/OrdersController.html":{}}}],["book",{"_index":591,"title":{},"body":{"classes/Order.html":{},"classes/User.html":{}}}],["boolean",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":803,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":800,"title":{},"body":{"modules.html":{}}}],["cancel_url",{"_index":397,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["canceled",{"_index":595,"title":{},"body":{"classes/Order.html":{},"miscellaneous/enumerations.html":{}}}],["card",{"_index":381,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["cartitem",{"_index":418,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["cartitemdto",{"_index":269,"title":{"classes/CartItemDto.html":{}},"body":{"classes/CartItemDto.html":{},"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["catch",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["category",{"_index":592,"title":{},"body":{"classes/Order.html":{},"classes/User.html":{}}}],["check",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MedicineService.html":{}}}],["checkduplicateemail",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["checkduplicateemail(checkemaildto",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkduplicateemail(email",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkemaildto",{"_index":105,"title":{"classes/CheckEmailDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CheckEmailDto.html":{},"coverage.html":{}}}],["checkemaildto.email",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["checking",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkout",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"controllers/CheckoutController.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{}}}],["checkout(checkoutdto",{"_index":307,"title":{},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{}}}],["checkout.controller",{"_index":347,"title":{},"body":{"modules/CheckoutModule.html":{}}}],["checkout.service",{"_index":316,"title":{},"body":{"controllers/CheckoutController.html":{},"modules/CheckoutModule.html":{}}}],["checkout/checkout.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["checkoutcontroller",{"_index":305,"title":{"controllers/CheckoutController.html":{}},"body":{"controllers/CheckoutController.html":{},"modules/CheckoutModule.html":{},"coverage.html":{}}}],["checkoutdto",{"_index":308,"title":{"classes/CheckoutDto.html":{}},"body":{"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"coverage.html":{}}}],["checkoutdto.items",{"_index":371,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["checkoutdto.items.map((item",{"_index":383,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["checkoutdto.userid",{"_index":372,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["checkoutitem",{"_index":326,"title":{"classes/CheckoutItem.html":{}},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"coverage.html":{}}}],["checkoutmodule",{"_index":42,"title":{"modules/CheckoutModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CheckoutModule.html":{},"modules.html":{},"overview.html":{}}}],["checkoutservice",{"_index":315,"title":{"injectables/CheckoutService.html":{}},"body":{"controllers/CheckoutController.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"coverage.html":{},"overview.html":{}}}],["class",{"_index":22,"title":{"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"classes/Order.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":270,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"classes/Order.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_checkoutmodule",{"_index":343,"title":{},"body":{"modules/CheckoutModule.html":{},"overview.html":{}}}],["cluster_checkoutmodule_imports",{"_index":345,"title":{},"body":{"modules/CheckoutModule.html":{}}}],["cluster_checkoutmodule_providers",{"_index":344,"title":{},"body":{"modules/CheckoutModule.html":{},"overview.html":{}}}],["cluster_medicinemodule",{"_index":531,"title":{},"body":{"modules/MedicineModule.html":{},"overview.html":{}}}],["cluster_medicinemodule_imports",{"_index":533,"title":{},"body":{"modules/MedicineModule.html":{}}}],["cluster_medicinemodule_providers",{"_index":532,"title":{},"body":{"modules/MedicineModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":641,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_exports",{"_index":642,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_providers",{"_index":643,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["code",{"_index":774,"title":{},"body":{"index.html":{}}}],["commands",{"_index":792,"title":{},"body":{"index.html":{}}}],["config",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get('jwt_expires_in",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{}}}],["config.get('jwt_secret",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{}}}],["configmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["configuration",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["conflictexception",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["conflictexception('email",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["connect",{"_index":783,"title":{},"body":{"index.html":{}}}],["connecting",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["console.error(error",{"_index":376,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["const",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/User.html":{}}}],["constructor",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":431,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(medicinemodel",{"_index":540,"title":{},"body":{"injectables/MedicineService.html":{}}}],["constructor(ordermodel",{"_index":651,"title":{},"body":{"injectables/OrdersService.html":{}}}],["constructor(ordersservice",{"_index":353,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["constructor(private",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"controllers/OrdersController.html":{}}}],["constructor(usermodel",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["containing",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["continue",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CheckoutController.html":{},"controllers/MedicineController.html":{},"controllers/OrdersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CheckoutController.html":{},"controllers/MedicineController.html":{},"controllers/OrdersController.html":{},"coverage.html":{},"index.html":{}}}],["controller('auth",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('checkout",{"_index":318,"title":{},"body":{"controllers/CheckoutController.html":{}}}],["controller('medicines",{"_index":508,"title":{},"body":{"controllers/MedicineController.html":{}}}],["controller('orders",{"_index":626,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CheckoutController.html":{},"modules/CheckoutModule.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["cookie",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":302,"title":{},"body":{"classes/CheckEmailDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["count",{"_index":545,"title":{},"body":{"injectables/MedicineService.html":{}}}],["countall",{"_index":539,"title":{},"body":{"injectables/MedicineService.html":{}}}],["coverage",{"_index":714,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":522,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/User.html":{}}}],["created",{"_index":475,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/User.html":{}}}],["createdat",{"_index":678,"title":{},"body":{"injectables/OrdersService.html":{}}}],["createdmedicine",{"_index":552,"title":{},"body":{"injectables/MedicineService.html":{}}}],["createdmedicine.save",{"_index":554,"title":{},"body":{"injectables/MedicineService.html":{}}}],["createdorder",{"_index":665,"title":{},"body":{"injectables/OrdersService.html":{}}}],["createdorder.save",{"_index":668,"title":{},"body":{"injectables/OrdersService.html":{}}}],["createmedicine",{"_index":464,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["createmedicine(@body",{"_index":523,"title":{},"body":{"controllers/MedicineController.html":{}}}],["createmedicine(createmedicinedto",{"_index":469,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["createmedicinedto",{"_index":399,"title":{"classes/CreateMedicineDto.html":{}},"body":{"classes/CreateMedicineDto.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"coverage.html":{}}}],["createorder",{"_index":600,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["createorder(@body",{"_index":627,"title":{},"body":{"controllers/OrdersController.html":{}}}],["createorder(createorderdto",{"_index":606,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["createorderdto",{"_index":411,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["creates",{"_index":322,"title":{},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{}}}],["createstripesession",{"_index":352,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["createstripesession(checkoutdto",{"_index":357,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["creating",{"_index":473,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["creation",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrdersService.html":{}}}],["currency",{"_index":388,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["customer",{"_index":706,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["d",{"_index":789,"title":{},"body":{"index.html":{}}}],["data",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["database",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["date",{"_index":661,"title":{},"body":{"injectables/OrdersService.html":{}}}],["days",{"_index":275,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{}}}],["default",{"_index":360,"title":{},"body":{"injectables/CheckoutService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{}}}],["define",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{}}}],["delete",{"_index":479,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["delete(':id",{"_index":528,"title":{},"body":{"controllers/MedicineController.html":{}}}],["delete(':id')@useguards(undefined",{"_index":477,"title":{},"body":{"controllers/MedicineController.html":{}}}],["delete(':orderid",{"_index":609,"title":{},"body":{"controllers/OrdersController.html":{}}}],["deleted",{"_index":480,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["deletedmedicine",{"_index":583,"title":{},"body":{"injectables/MedicineService.html":{}}}],["deletemedicine",{"_index":465,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["deletemedicine(@param('id",{"_index":529,"title":{},"body":{"controllers/MedicineController.html":{}}}],["deletemedicine(id",{"_index":476,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["deleteorder",{"_index":601,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["deleteorder(@param('orderid",{"_index":637,"title":{},"body":{"controllers/OrdersController.html":{}}}],["deleteorder(orderid",{"_index":608,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["delivered",{"_index":593,"title":{},"body":{"classes/Order.html":{},"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descending",{"_index":662,"title":{},"body":{"injectables/OrdersService.html":{}}}],["description",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"properties.html":{}}}],["details",{"_index":313,"title":{},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["document",{"_index":456,"title":{},"body":{"classes/Medicine.html":{}}}],["documentation",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["dosage_form",{"_index":276,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/Medicine.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"classes/CreateOrderDto.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["dto.ts",{"_index":272,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":287,"title":{},"body":{"classes/CartItemDto.html":{},"classes/LoginDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:11",{"_index":405,"title":{},"body":{"classes/CreateMedicineDto.html":{}}}],["dto.ts:12",{"_index":338,"title":{},"body":{"classes/CheckoutItem.html":{}}}],["dto.ts:14",{"_index":286,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateMedicineDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:15",{"_index":340,"title":{},"body":{"classes/CheckoutItem.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["dto.ts:17",{"_index":407,"title":{},"body":{"classes/CreateMedicineDto.html":{}}}],["dto.ts:18",{"_index":285,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutItem.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:19",{"_index":682,"title":{},"body":{"classes/SignUpDto.html":{}}}],["dto.ts:20",{"_index":406,"title":{},"body":{"classes/CreateMedicineDto.html":{}}}],["dto.ts:22",{"_index":290,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutItem.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:23",{"_index":409,"title":{},"body":{"classes/CreateMedicineDto.html":{},"classes/SignUpDto.html":{}}}],["dto.ts:26",{"_index":289,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:28",{"_index":683,"title":{},"body":{"classes/SignUpDto.html":{}}}],["dto.ts:30",{"_index":288,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutItem.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:32",{"_index":681,"title":{},"body":{"classes/SignUpDto.html":{}}}],["dto.ts:34",{"_index":291,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutItem.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:36",{"_index":685,"title":{},"body":{"classes/SignUpDto.html":{}}}],["dto.ts:38",{"_index":342,"title":{},"body":{"classes/CheckoutItem.html":{}}}],["dto.ts:40",{"_index":686,"title":{},"body":{"classes/SignUpDto.html":{}}}],["dto.ts:45",{"_index":329,"title":{},"body":{"classes/CheckoutDto.html":{}}}],["dto.ts:48",{"_index":330,"title":{},"body":{"classes/CheckoutDto.html":{}}}],["dto.ts:5",{"_index":408,"title":{},"body":{"classes/CreateMedicineDto.html":{}}}],["dto.ts:6",{"_index":282,"title":{},"body":{"classes/CartItemDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["dto.ts:8",{"_index":410,"title":{},"body":{"classes/CreateMedicineDto.html":{}}}],["dto/check",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/checkout",{"_index":314,"title":{},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{}}}],["dto/create",{"_index":504,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["dto/login",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/signup",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":505,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["duplicate",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{}}}],["duplication",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["during",{"_index":368,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["each",{"_index":337,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateOrderDto.html":{}}}],["email",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CheckEmailDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["email.dto",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["email.dto.ts",{"_index":297,"title":{},"body":{"classes/CheckEmailDto.html":{},"coverage.html":{}}}],["email.dto.ts:10",{"_index":303,"title":{},"body":{"classes/CheckEmailDto.html":{}}}],["endpoint",{"_index":439,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["enter",{"_index":301,"title":{},"body":{"classes/CheckEmailDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["entered",{"_index":712,"title":{},"body":{"classes/User.html":{}}}],["enum",{"_index":590,"title":{},"body":{"classes/Order.html":{},"classes/User.html":{}}}],["enumerations",{"_index":765,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["envfilepath",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["error('failed",{"_index":669,"title":{},"body":{"injectables/OrdersService.html":{}}}],["error('order",{"_index":672,"title":{},"body":{"injectables/OrdersService.html":{}}}],["example",{"_index":788,"title":{},"body":{"index.html":{}}}],["exec",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{}}}],["existinguser",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiration",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["expires_in",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{}}}],["exported",{"_index":648,"title":{},"body":{"modules/OrdersModule.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["express",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":420,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/Medicine.html":{}}}],["extract",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["extractjwt",{"_index":429,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":434,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["features",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["fetch",{"_index":631,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["filter",{"_index":569,"title":{},"body":{"injectables/MedicineService.html":{}}}],["filtering",{"_index":486,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["filterparams",{"_index":558,"title":{},"body":{"injectables/MedicineService.html":{}}}],["find",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["find(filter",{"_index":575,"title":{},"body":{"injectables/MedicineService.html":{}}}],["findallmedicinebyquery",{"_index":466,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["findallmedicinebyquery(@query",{"_index":511,"title":{},"body":{"controllers/MedicineController.html":{}}}],["findallmedicinebyquery(queryparams",{"_index":481,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["findbyidandupdate(orderid",{"_index":674,"title":{},"body":{"injectables/OrdersService.html":{}}}],["findonemedicine",{"_index":467,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["findonemedicine(@param('id",{"_index":520,"title":{},"body":{"controllers/MedicineController.html":{}}}],["findonemedicine(id",{"_index":489,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["findorderbyid",{"_index":602,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["findorderbyid(@param('orderid",{"_index":632,"title":{},"body":{"controllers/OrdersController.html":{}}}],["findorderbyid(orderid",{"_index":612,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["finduserbyid",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["finduserbyid(@param('id",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["finduserbyid(id",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["firstname",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["found",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["function",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["functionalities",{"_index":649,"title":{},"body":{"modules/OrdersModule.html":{}}}],["functions",{"_index":768,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":794,"title":{},"body":{"index.html":{}}}],["generics",{"_index":401,"title":{},"body":{"classes/CreateMedicineDto.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"classes/UpdateMedicineDto.html":{}}}],["get('/user/:id",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":519,"title":{},"body":{"controllers/MedicineController.html":{}}}],["get(':id')@useguards(undefined",{"_index":490,"title":{},"body":{"controllers/MedicineController.html":{}}}],["get(':orderid",{"_index":613,"title":{},"body":{"controllers/OrdersController.html":{}}}],["get('find",{"_index":509,"title":{},"body":{"controllers/MedicineController.html":{}}}],["get('find')@useguards(undefined",{"_index":482,"title":{},"body":{"controllers/MedicineController.html":{}}}],["get('user/:userid",{"_index":617,"title":{},"body":{"controllers/OrdersController.html":{}}}],["getallorders",{"_index":603,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getordersbyuserid",{"_index":604,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["getordersbyuserid(@param('userid",{"_index":639,"title":{},"body":{"controllers/OrdersController.html":{}}}],["getordersbyuserid(userid",{"_index":616,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["getting",{"_index":770,"title":{"index.html":{}},"body":{}}],["global",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["guards/jwt.strategy",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["handling",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{}}}],["hashedpassword",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":93,"title":{},"body":{"injectables/AppService.html":{}}}],["https://mymedxpress.netlify.app",{"_index":362,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["id",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["identifier",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{}}}],["imports",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["indicating",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["individual",{"_index":694,"title":{},"body":{"classes/UpdateMedicineDto.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{}}}],["information",{"_index":472,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["initiates",{"_index":319,"title":{},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{}}}],["inject",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{}}}],["injectable",{"_index":89,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["injectables",{"_index":90,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{}}}],["injectmodel(medicine.name",{"_index":551,"title":{},"body":{"injectables/MedicineService.html":{}}}],["injectmodel(order.name",{"_index":664,"title":{},"body":{"injectables/OrdersService.html":{}}}],["injectmodel(user.name",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["installed",{"_index":784,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":513,"title":{},"body":{"controllers/MedicineController.html":{}}}],["internalservererrorexception",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MedicineController.html":{}}}],["internalservererrorexception('failed",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["internalservererrorexception('internal",{"_index":516,"title":{},"body":{"controllers/MedicineController.html":{}}}],["isarray",{"_index":331,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["isarray()@isnotempty()@validatenested({each",{"_index":414,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["isarray()@validatenested({each",{"_index":327,"title":{},"body":{"classes/CheckoutDto.html":{}}}],["isduplicate",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["isemail",{"_index":304,"title":{},"body":{"classes/CheckEmailDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["isglobal",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":292,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"classes/CreateOrderDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["isnotempty()@isemail",{"_index":298,"title":{},"body":{"classes/CheckEmailDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["isnotempty()@isnumber",{"_index":684,"title":{},"body":{"classes/SignUpDto.html":{}}}],["isnotempty()@isstring",{"_index":680,"title":{},"body":{"classes/SignUpDto.html":{}}}],["isnotempty()@isstring()@minlength(6",{"_index":441,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["isnumber",{"_index":293,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["isnumber()@isnotempty",{"_index":284,"title":{},"body":{"classes/CartItemDto.html":{}}}],["isnumber()@min(0",{"_index":339,"title":{},"body":{"classes/CheckoutItem.html":{}}}],["isnumber()@min(1",{"_index":341,"title":{},"body":{"classes/CheckoutItem.html":{}}}],["isoptional",{"_index":691,"title":{},"body":{"classes/UpdateMedicineDto.html":{}}}],["isoptional()@isarray",{"_index":689,"title":{},"body":{"classes/UpdateMedicineDto.html":{}}}],["isoptional()@isnumber",{"_index":690,"title":{},"body":{"classes/UpdateMedicineDto.html":{}}}],["isoptional()@isstring",{"_index":688,"title":{},"body":{"classes/UpdateMedicineDto.html":{}}}],["isstring",{"_index":294,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{}}}],["isstring()@isnotempty",{"_index":281,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CreateOrderDto.html":{}}}],["item.name",{"_index":391,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["item.quantity",{"_index":393,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["items",{"_index":321,"title":{},"body":{"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateOrderDto.html":{},"classes/Order.html":{},"classes/UpdateMedicineDto.html":{}}}],["js",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["jtw",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":433,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":182,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lastname",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["level",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["license",{"_index":810,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":556,"title":{},"body":{"injectables/MedicineService.html":{}}}],["limit(limitvalue",{"_index":577,"title":{},"body":{"injectables/MedicineService.html":{}}}],["limitvalue",{"_index":566,"title":{},"body":{"injectables/MedicineService.html":{}}}],["line_items",{"_index":382,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["list",{"_index":487,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["listening",{"_index":778,"title":{},"body":{"index.html":{}}}],["local",{"_index":756,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["login",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["login(logindto",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":128,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["main",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["manager",{"_index":775,"title":{},"body":{"index.html":{}}}],["managing",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{}}}],["manufacturer",{"_index":402,"title":{},"body":{"classes/CreateMedicineDto.html":{},"classes/Medicine.html":{},"classes/UpdateMedicineDto.html":{}}}],["match",{"_index":488,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["matching",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(item.price",{"_index":385,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["medicine",{"_index":81,"title":{"classes/Medicine.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateMedicineDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/UpdateMedicineDto.html":{},"coverage.html":{}}}],["medicine.controller",{"_index":535,"title":{},"body":{"modules/MedicineModule.html":{}}}],["medicine.name",{"_index":537,"title":{},"body":{"modules/MedicineModule.html":{}}}],["medicine.service",{"_index":503,"title":{},"body":{"controllers/MedicineController.html":{},"modules/MedicineModule.html":{}}}],["medicine/medicine.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["medicinecontroller",{"_index":461,"title":{"controllers/MedicineController.html":{}},"body":{"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"coverage.html":{}}}],["medicinemodel",{"_index":542,"title":{},"body":{"injectables/MedicineService.html":{}}}],["medicinemodule",{"_index":43,"title":{"modules/MedicineModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MedicineModule.html":{},"modules.html":{},"overview.html":{}}}],["medicines",{"_index":463,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["medicineschema",{"_index":459,"title":{},"body":{"classes/Medicine.html":{},"modules/MedicineModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["medicineservice",{"_index":502,"title":{"injectables/MedicineService.html":{}},"body":{"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"coverage.html":{},"overview.html":{}}}],["medxpress",{"_index":772,"title":{},"body":{"index.html":{}}}],["message",{"_index":299,"title":{},"body":{"classes/CheckEmailDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["metadata",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["min",{"_index":332,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{}}}],["min(0",{"_index":335,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{}}}],["min(1",{"_index":336,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{}}}],["minlength",{"_index":442,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["minlength(6",{"_index":443,"title":{},"body":{"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":764,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":394,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["model",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedicineService.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CheckoutController.html":{},"modules/CheckoutModule.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{},"dependencies.html":{},"index.html":{}}}],["mongoosemodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{}}}],["mongoosemodule.forroot(process.env.mongodb_url",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"injectables/JwtStrategy.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/UpdateMedicineDto.html":{}}}],["named",{"_index":798,"title":{},"body":{"index.html":{}}}],["need",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{}}}],["nest",{"_index":793,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/core",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/jwtgenerate",{"_index":791,"title":{},"body":{"index.html":{}}}],["nestjs/mongoose",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Medicine.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/User.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/passport",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/platform",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/User.html":{},"coverage.html":{}}}],["newly",{"_index":474,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["notfoundexception",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{}}}],["notfoundexception('failed",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"controllers/OrdersController.html":{}}}],["notfoundexception('medicine",{"_index":580,"title":{},"body":{"injectables/MedicineService.html":{}}}],["notfoundexception('medicines",{"_index":578,"title":{},"body":{"injectables/MedicineService.html":{}}}],["notfoundexception('order",{"_index":634,"title":{},"body":{"controllers/OrdersController.html":{}}}],["notfoundexception('user",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["notfoundexception(error.message",{"_index":515,"title":{},"body":{"controllers/MedicineController.html":{}}}],["null",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":283,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{}}}],["number(limit",{"_index":567,"title":{},"body":{"injectables/MedicineService.html":{}}}],["number(page",{"_index":564,"title":{},"body":{"injectables/MedicineService.html":{}}}],["object",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{}}}],["object.assign(filter",{"_index":573,"title":{},"body":{"injectables/MedicineService.html":{}}}],["object.keys(filterparams).length",{"_index":560,"title":{},"body":{"injectables/MedicineService.html":{}}}],["occurs",{"_index":367,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["optional",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["options",{"_index":572,"title":{},"body":{"injectables/MedicineService.html":{}}}],["order",{"_index":312,"title":{"classes/Order.html":{}},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["order.dto",{"_index":624,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["order.dto.ts",{"_index":413,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:10",{"_index":415,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:14",{"_index":417,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:18",{"_index":416,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.name",{"_index":647,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orderdto",{"_index":370,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["orderid",{"_index":611,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["ordermodel",{"_index":653,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orders",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["orders.controller",{"_index":645,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.service",{"_index":623,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["orders/orders.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["orderschema",{"_index":596,"title":{},"body":{"classes/Order.html":{},"modules/OrdersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderscontroller",{"_index":598,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordersmodule",{"_index":44,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CheckoutModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersservice",{"_index":354,"title":{"injectables/OrdersService.html":{}},"body":{"injectables/CheckoutService.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["orderstatus",{"_index":373,"title":{},"body":{"injectables/CheckoutService.html":{},"classes/CreateOrderDto.html":{},"classes/Order.html":{},"miscellaneous/enumerations.html":{}}}],["out",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["overview",{"_index":804,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":731,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["package_size",{"_index":403,"title":{},"body":{"classes/CreateMedicineDto.html":{},"classes/Medicine.html":{},"classes/UpdateMedicineDto.html":{}}}],["packages",{"_index":786,"title":{},"body":{"index.html":{}}}],["page",{"_index":555,"title":{},"body":{"injectables/MedicineService.html":{}}}],["page,limit",{"_index":559,"title":{},"body":{"injectables/MedicineService.html":{}}}],["pagevalue",{"_index":563,"title":{},"body":{"injectables/MedicineService.html":{}}}],["param",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["param('id",{"_index":526,"title":{},"body":{"controllers/MedicineController.html":{}}}],["param('orderid",{"_index":635,"title":{},"body":{"controllers/OrdersController.html":{}}}],["parameters",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["parser",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["parseuuidpipe",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["passport",{"_index":430,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["passportmodule",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":428,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":421,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["passwordmatched",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload",{"_index":426,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":310,"title":{},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{}}}],["payment_method_types",{"_index":380,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["pending",{"_index":374,"title":{},"body":{"injectables/CheckoutService.html":{},"classes/Order.html":{},"miscellaneous/enumerations.html":{}}}],["please",{"_index":300,"title":{},"body":{"classes/CheckEmailDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{}}}],["pnpm",{"_index":777,"title":{},"body":{"index.html":{}}}],["port",{"_index":779,"title":{},"body":{"index.html":{}}}],["post",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CheckoutController.html":{},"controllers/MedicineController.html":{},"controllers/OrdersController.html":{}}}],["post('/check",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/login",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signup",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@useguards(undefined",{"_index":470,"title":{},"body":{"controllers/MedicineController.html":{}}}],["postalcode",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["prefix",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CheckoutController.html":{},"controllers/MedicineController.html":{},"controllers/OrdersController.html":{}}}],["price",{"_index":277,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/Medicine.html":{},"classes/UpdateMedicineDto.html":{}}}],["price_data",{"_index":387,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["priceincents",{"_index":384,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["private",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"injectables/MedicineService.html":{},"injectables/OrdersService.html":{}}}],["process",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{}}}],["process.env.jwt_expires_in",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_secret",{"_index":436,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["product_data",{"_index":390,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["promise",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["prop",{"_index":445,"title":{},"body":{"classes/Medicine.html":{},"classes/Order.html":{},"classes/User.html":{}}}],["prop(['string",{"_index":447,"title":{},"body":{"classes/Medicine.html":{}}}],["prop([string",{"_index":458,"title":{},"body":{"classes/Medicine.html":{}}}],["prop({unique",{"_index":697,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":273,"title":{"properties.html":{}},"body":{"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"classes/Order.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{},"properties.html":{}}}],["provided",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["providing",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{}}}],["put",{"_index":499,"title":{},"body":{"controllers/MedicineController.html":{},"controllers/OrdersController.html":{}}}],["put(':id",{"_index":525,"title":{},"body":{"controllers/MedicineController.html":{}}}],["put(':id')@useguards(undefined",{"_index":495,"title":{},"body":{"controllers/MedicineController.html":{}}}],["put(':orderid",{"_index":621,"title":{},"body":{"controllers/OrdersController.html":{}}}],["quantity",{"_index":278,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{}}}],["query",{"_index":485,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["queryparams",{"_index":484,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/SignUpDto.html":{}}}],["redirectbaseurl",{"_index":350,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["reflect",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":571,"title":{},"body":{"injectables/MedicineService.html":{}}}],["registerasync",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{}}}],["registering",{"_index":646,"title":{},"body":{"modules/OrdersModule.html":{}}}],["related",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/OrdersModule.html":{}}}],["requested",{"_index":492,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["required",{"_index":785,"title":{},"body":{"index.html":{}}}],["reset",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}],["results",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["return",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["role",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"classes/SignUpDto.html":{},"classes/User.html":{}}}],["route",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["routes",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/CheckoutController.html":{},"controllers/MedicineController.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["rxjs",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["savedorder",{"_index":667,"title":{},"body":{"injectables/OrdersService.html":{}}}],["schema",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"classes/Medicine.html":{},"modules/MedicineModule.html":{},"classes/Order.html":{},"modules/OrdersModule.html":{},"classes/User.html":{},"index.html":{}}}],["schema/medicine.schema",{"_index":506,"title":{},"body":{"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{}}}],["schema/order.schema",{"_index":625,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["schema/user.schema",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["schemafactory",{"_index":455,"title":{},"body":{"classes/Medicine.html":{},"classes/Order.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(medicine",{"_index":460,"title":{},"body":{"classes/Medicine.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(order",{"_index":597,"title":{},"body":{"classes/Order.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":713,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":557,"title":{},"body":{"injectables/MedicineService.html":{}}}],["searchfilter",{"_index":570,"title":{},"body":{"injectables/MedicineService.html":{}}}],["secret",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":435,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":517,"title":{},"body":{"controllers/MedicineController.html":{},"index.html":{}}}],["service",{"_index":796,"title":{},"body":{"index.html":{}}}],["services",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":311,"title":{},"body":{"controllers/CheckoutController.html":{},"injectables/CheckoutService.html":{}}}],["set",{"_index":320,"title":{},"body":{"controllers/CheckoutController.html":{}}}],["shipped",{"_index":594,"title":{},"body":{"classes/Order.html":{},"miscellaneous/enumerations.html":{}}}],["shopowner",{"_index":707,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["side",{"_index":773,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(signupdto",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signupdto",{"_index":137,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["sk_test_51o7blti3fhuzllhi9fioigdlks47o5duvu0uqxtm6fyudnwldcxtg5aimqzaquxyexuxybltbssy0c4fknv7qpgs00xk9bfdbr",{"_index":363,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["skip",{"_index":568,"title":{},"body":{"injectables/MedicineService.html":{}}}],["skip(skip",{"_index":576,"title":{},"body":{"injectables/MedicineService.html":{}}}],["sort",{"_index":677,"title":{},"body":{"injectables/OrdersService.html":{}}}],["sorted",{"_index":660,"title":{},"body":{"injectables/OrdersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"modules/CheckoutModule.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"modules/MedicineModule.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{}}}],["spec",{"_index":795,"title":{},"body":{"index.html":{}}}],["specific",{"_index":518,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["specified",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["src/.../main.ts",{"_index":769,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../medicine.schema.ts",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../order.schema.ts",{"_index":766,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":767,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:12",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":91,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:8",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:44",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:57",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:77",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":536,"title":{},"body":{"modules/MedicineModule.html":{}}}],["src/auth/auth.module.ts",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:104",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:118",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:32",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:70",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/check",{"_index":296,"title":{},"body":{"classes/CheckEmailDto.html":{},"coverage.html":{}}}],["src/auth/dto/login",{"_index":440,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/signup",{"_index":679,"title":{},"body":{"classes/SignUpDto.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.strategy.ts",{"_index":419,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.strategy.ts:12",{"_index":423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/guards/jwt.strategy.ts:20",{"_index":425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/schema/user.schema.ts",{"_index":695,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/auth/schema/user.schema.ts:19",{"_index":700,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schema/user.schema.ts:22",{"_index":701,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schema/user.schema.ts:25",{"_index":699,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schema/user.schema.ts:28",{"_index":702,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schema/user.schema.ts:31",{"_index":696,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schema/user.schema.ts:34",{"_index":703,"title":{},"body":{"classes/User.html":{}}}],["src/auth/schema/user.schema.ts:37",{"_index":705,"title":{},"body":{"classes/User.html":{}}}],["src/checkout/checkout.controller.ts",{"_index":306,"title":{},"body":{"controllers/CheckoutController.html":{},"coverage.html":{}}}],["src/checkout/checkout.controller.ts:20",{"_index":309,"title":{},"body":{"controllers/CheckoutController.html":{}}}],["src/checkout/checkout.module.ts",{"_index":346,"title":{},"body":{"modules/CheckoutModule.html":{}}}],["src/checkout/checkout.service.ts",{"_index":349,"title":{},"body":{"injectables/CheckoutService.html":{},"coverage.html":{}}}],["src/checkout/checkout.service.ts:12",{"_index":364,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["src/checkout/checkout.service.ts:15",{"_index":355,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["src/checkout/checkout.service.ts:25",{"_index":356,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["src/checkout/checkout.service.ts:51",{"_index":358,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["src/checkout/dto/checkout",{"_index":324,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":725,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/medicine/dto/create",{"_index":400,"title":{},"body":{"classes/CreateMedicineDto.html":{},"coverage.html":{}}}],["src/medicine/dto/update",{"_index":687,"title":{},"body":{"classes/UpdateMedicineDto.html":{},"coverage.html":{}}}],["src/medicine/medicine.controller.ts",{"_index":462,"title":{},"body":{"controllers/MedicineController.html":{},"coverage.html":{}}}],["src/medicine/medicine.controller.ts:36",{"_index":483,"title":{},"body":{"controllers/MedicineController.html":{}}}],["src/medicine/medicine.controller.ts:59",{"_index":491,"title":{},"body":{"controllers/MedicineController.html":{}}}],["src/medicine/medicine.controller.ts:70",{"_index":471,"title":{},"body":{"controllers/MedicineController.html":{}}}],["src/medicine/medicine.controller.ts:82",{"_index":496,"title":{},"body":{"controllers/MedicineController.html":{}}}],["src/medicine/medicine.controller.ts:96",{"_index":478,"title":{},"body":{"controllers/MedicineController.html":{}}}],["src/medicine/medicine.module.ts",{"_index":534,"title":{},"body":{"modules/MedicineModule.html":{}}}],["src/medicine/medicine.service.ts",{"_index":538,"title":{},"body":{"injectables/MedicineService.html":{},"coverage.html":{}}}],["src/medicine/medicine.service.ts:118",{"_index":547,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/medicine/medicine.service.ts:130",{"_index":543,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/medicine/medicine.service.ts:17",{"_index":541,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/medicine/medicine.service.ts:27",{"_index":546,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/medicine/medicine.service.ts:39",{"_index":548,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/medicine/medicine.service.ts:81",{"_index":549,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/medicine/medicine.service.ts:96",{"_index":550,"title":{},"body":{"injectables/MedicineService.html":{}}}],["src/medicine/schema/medicine.schema.ts",{"_index":444,"title":{},"body":{"classes/Medicine.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/medicine/schema/medicine.schema.ts:10",{"_index":454,"title":{},"body":{"classes/Medicine.html":{}}}],["src/medicine/schema/medicine.schema.ts:13",{"_index":446,"title":{},"body":{"classes/Medicine.html":{}}}],["src/medicine/schema/medicine.schema.ts:16",{"_index":453,"title":{},"body":{"classes/Medicine.html":{}}}],["src/medicine/schema/medicine.schema.ts:19",{"_index":449,"title":{},"body":{"classes/Medicine.html":{}}}],["src/medicine/schema/medicine.schema.ts:22",{"_index":448,"title":{},"body":{"classes/Medicine.html":{}}}],["src/medicine/schema/medicine.schema.ts:25",{"_index":451,"title":{},"body":{"classes/Medicine.html":{}}}],["src/medicine/schema/medicine.schema.ts:28",{"_index":452,"title":{},"body":{"classes/Medicine.html":{}}}],["src/medicine/schema/medicine.schema.ts:7",{"_index":450,"title":{},"body":{"classes/Medicine.html":{}}}],["src/orders/dto/cartitem",{"_index":271,"title":{},"body":{"classes/CartItemDto.html":{},"coverage.html":{}}}],["src/orders/dto/create",{"_index":412,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["src/orders/orders.controller.ts",{"_index":599,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/orders/orders.controller.ts:100",{"_index":610,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:113",{"_index":618,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:30",{"_index":607,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:43",{"_index":615,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:57",{"_index":614,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.controller.ts:76",{"_index":622,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.module",{"_index":348,"title":{},"body":{"modules/CheckoutModule.html":{}}}],["src/orders/orders.module.ts",{"_index":644,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/orders.service",{"_index":365,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["src/orders/orders.service.ts",{"_index":650,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/orders/orders.service.ts:12",{"_index":652,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:22",{"_index":654,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:36",{"_index":657,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:49",{"_index":656,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:63",{"_index":663,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:81",{"_index":655,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:94",{"_index":658,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/schema/order.schema",{"_index":317,"title":{},"body":{"controllers/CheckoutController.html":{}}}],["src/orders/schema/order.schema.ts",{"_index":586,"title":{},"body":{"classes/Order.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/orders/schema/order.schema.ts:16",{"_index":587,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/schema/order.schema.ts:19",{"_index":589,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/schema/order.schema.ts:22",{"_index":588,"title":{},"body":{"classes/Order.html":{}}}],["start",{"_index":781,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":782,"title":{},"body":{"index.html":{}}}],["started",{"_index":771,"title":{"index.html":{}},"body":{}}],["statements",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["strategy",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["strength",{"_index":404,"title":{},"body":{"classes/CreateMedicineDto.html":{},"classes/Medicine.html":{},"classes/UpdateMedicineDto.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{}}}],["stripe",{"_index":359,"title":{},"body":{"injectables/CheckoutService.html":{},"dependencies.html":{}}}],["stripe(this.stripesecretkey",{"_index":378,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["stripe/stripe",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["stripeinstance",{"_index":377,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["stripeinstance.checkout.sessions.create",{"_index":379,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["stripesecretkey",{"_index":351,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["success_url",{"_index":395,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["super",{"_index":432,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":801,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":802,"title":{},"body":{"modules.html":{}}}],["table",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["thats",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{}}}],["this.appservice.gethello",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.checkduplicateemail",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.finduserbyid(id",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(logindto",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdto",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.checkoutservice.checkout(checkoutdto",{"_index":323,"title":{},"body":{"controllers/CheckoutController.html":{}}}],["this.createstripesession(checkoutdto",{"_index":369,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["this.jwtservice.sign",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.medicinemodel",{"_index":574,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.medicinemodel(createmedicinedto",{"_index":553,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.medicinemodel.countdocuments().exec",{"_index":585,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.medicinemodel.findbyid(id).exec",{"_index":579,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.medicinemodel.findbyidandremove(id",{"_index":584,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.medicinemodel.findbyidandupdate",{"_index":582,"title":{},"body":{"injectables/MedicineService.html":{}}}],["this.medicineservice.createmedicine(createmedicinedto",{"_index":524,"title":{},"body":{"controllers/MedicineController.html":{}}}],["this.medicineservice.deletemedicine(id",{"_index":530,"title":{},"body":{"controllers/MedicineController.html":{}}}],["this.medicineservice.findallmedicinebyquery(queryparams",{"_index":512,"title":{},"body":{"controllers/MedicineController.html":{}}}],["this.medicineservice.findonemedicine(id",{"_index":521,"title":{},"body":{"controllers/MedicineController.html":{}}}],["this.medicineservice.updatemedicine(id",{"_index":527,"title":{},"body":{"controllers/MedicineController.html":{}}}],["this.ordermodel",{"_index":673,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel(createorderdto",{"_index":666,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel.find",{"_index":676,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel.find().exec",{"_index":670,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel.findbyid(orderid).exec",{"_index":671,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordermodel.findbyidandremove(orderid).exec",{"_index":675,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersservice.createorder(createorderdto",{"_index":628,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.createorder(orderdto",{"_index":375,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["this.ordersservice.deleteorder(orderid",{"_index":638,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.findorderbyid(orderid",{"_index":633,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.getallorders",{"_index":630,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.getordersbyuserid(userid",{"_index":640,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.ordersservice.updateorder",{"_index":636,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.redirectbaseurl}/cart",{"_index":398,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["this.redirectbaseurl}/cart/success",{"_index":396,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["this.usermodel.create",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findbyid(id",{"_index":437,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.usermodel.findbyid(id).exec",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel.findone",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"injectables/JwtStrategy.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["throws",{"_index":366,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["time",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{}}}],["times",{"_index":279,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{}}}],["timestamps",{"_index":457,"title":{},"body":{"classes/Medicine.html":{},"classes/Order.html":{},"classes/User.html":{}}}],["token",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["total",{"_index":544,"title":{},"body":{"injectables/MedicineService.html":{}}}],["totalamount",{"_index":280,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{}}}],["transformer",{"_index":334,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateOrderDto.html":{},"dependencies.html":{}}}],["true",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateOrderDto.html":{},"classes/Medicine.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"classes/User.html":{}}}],["true})@type(undefined",{"_index":328,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CreateOrderDto.html":{}}}],["try",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CheckoutService.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["type",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"controllers/CheckoutController.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/Medicine.html":{},"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["types/passport",{"_index":790,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('please",{"_index":438,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('user",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":698,"title":{},"body":{"classes/User.html":{}}}],["unique",{"_index":711,"title":{},"body":{"classes/User.html":{}}}],["unit_amount",{"_index":392,"title":{},"body":{"injectables/CheckoutService.html":{}}}],["unknown",{"_index":427,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":811,"title":{},"body":{"properties.html":{}}}],["update",{"_index":497,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["updated",{"_index":498,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/UpdateMedicineDto.html":{}}}],["updatedmedicine",{"_index":581,"title":{},"body":{"injectables/MedicineService.html":{}}}],["updatemedicine",{"_index":468,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["updatemedicine(id",{"_index":493,"title":{},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{}}}],["updatemedicinedto",{"_index":494,"title":{"classes/UpdateMedicineDto.html":{}},"body":{"controllers/MedicineController.html":{},"injectables/MedicineService.html":{},"classes/UpdateMedicineDto.html":{},"coverage.html":{}}}],["updateorder",{"_index":605,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["updateorder(orderid",{"_index":619,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["updateorderdto",{"_index":620,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["url",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["used",{"_index":776,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{}}}],["useguards",{"_index":501,"title":{},"body":{"controllers/MedicineController.html":{}}}],["useguards(authguard",{"_index":510,"title":{},"body":{"controllers/MedicineController.html":{}}}],["user",{"_index":124,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{}}}],["user._id",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.schema.ts",{"_index":799,"title":{},"body":{"index.html":{}}}],["userid",{"_index":325,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"injectables/CheckoutService.html":{},"classes/CreateOrderDto.html":{},"classes/Order.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["usermodel",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userrole",{"_index":704,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["userschema",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user|null",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["using",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"index.html":{}}}],["validate",{"_index":422,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":424,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":333,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateOrderDto.html":{}}}],["validator",{"_index":295,"title":{},"body":{"classes/CartItemDto.html":{},"classes/CheckEmailDto.html":{},"classes/CheckoutDto.html":{},"classes/CheckoutItem.html":{},"classes/CreateMedicineDto.html":{},"classes/CreateOrderDto.html":{},"classes/LoginDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateMedicineDto.html":{},"dependencies.html":{}}}],["value",{"_index":361,"title":{},"body":{"injectables/CheckoutService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{}}}],["variables",{"_index":813,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":808,"title":{},"body":{"properties.html":{}}}],["whether",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["whole",{"_index":693,"title":{},"body":{"classes/UpdateMedicineDto.html":{}}}],["world",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CheckoutModule.html":{},"modules/MedicineModule.html":{},"modules/OrdersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        /**\n * App Controller\n */\nimport { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCheckoutModule\n\nCheckoutModule\n\nAppModule -->\n\nCheckoutModule->AppModule\n\n\n\n\n\nMedicineModule\n\nMedicineModule\n\nAppModule -->\n\nMedicineModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CheckoutModule\n                        \n                        \n                            MedicineModule\n                        \n                        \n                            OrdersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * @module AppModule\n * @description Main application module.\n */\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AuthModule } from './auth/auth.module';\nimport { CheckoutModule } from './checkout/checkout.module';\nimport { MedicineModule } from './medicine/medicine.module';\nimport { OrdersModule } from './orders/orders.module';\n\n@Module({\n  imports: [\n    /**\n     * Configure the .env file as a global configuration.\n     */\n    ConfigModule.forRoot({\n      envFilePath: '.env',\n      isGlobal: true,\n    }),\n    /**\n     * MongooseModule for connecting to the MongoDB database using the URL from the .env file.\n     */\n    MongooseModule.forRoot(process.env.MONGODB_URL),\n    /**\n     * AuthModule for handling authentication-related features.\n     */\n    AuthModule,\n    /**\n     * MedicineModule for managing medicine-related features.\n     */\n    MedicineModule,\n    /**\n     * OrdersModule for managing orders-related features.\n     */\n    OrdersModule,\n    /**\n     * CheckoutModule for handling the checkout process.\n     */\n    CheckoutModule,\n  ],\n  controllers: [\n    /**\n     * AppController for the main application routes.\n     */\n    AppController,\n  ],\n  providers: [\n    /**\n     * AppService for providing application-level services.\n     */\n    AppService,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                checkDuplicateEmail\n                            \n                            \n                                    \n                                    Async\n                                findUserById\n                            \n                            \n                                    \n                                login\n                            \n                            \n                                    \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        checkDuplicateEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkDuplicateEmail(checkEmailDto: CheckEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/check-email')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                checkEmailDto\n                                            \n                                                            CheckEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for checking duplicate email.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nAn object indicating whether the email is a duplicate.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/user/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe user with the specified ID.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for user login.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nAn object containing an access token and expiration time.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(signupDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signup')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                signupDto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for user signup.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nAn object containing an access token and expiration time.\n\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        /**\n * @module AuthController\n * @description Controller for authentication-related routes.\n */\nimport {\n  Body,\n  ConflictException,\n  Controller,\n  Get,\n  InternalServerErrorException,\n  NotFoundException,\n  Param,\n  ParseUUIDPipe,\n  Post,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LoginDto } from './dto/login-dto';\nimport { SignUpDto } from './dto/signup-dto';\nimport { User } from './schema/user.schema';\nimport { CheckEmailDto } from './dto/check-email.dto';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * @description Signup Route\n   * @param signupDto - The DTO for user signup.\n   * @returns {Object} - An object containing an access token and expiration time.\n   */\n  @Post('/signup')\n  signup(\n    @Body() signupDto: SignUpDto,\n  ): Promise {\n    return this.authService.signup(signupDto);\n  }\n\n  /**\n   * @description Login Route\n   * @param loginDto - The DTO for user login.\n   * @returns {Object} - An object containing an access token and expiration time.\n   */\n  @Post('/login')\n  login(\n    @Body() loginDto: LoginDto,\n  ): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  /**\n   * @description Find User by ID Route\n   * @param id - The ID of the user to find.\n   * @returns {User} - The user with the specified ID.\n   */\n\n  @Get('/user/:id')\n  async findUserById(@Param('id') id: string): Promise {\n    try {\n      const user = await this.authService.findUserById(id);\n\n      if (!user) {\n        throw new NotFoundException('User not found');\n      }\n\n      return user;\n    } catch (error) {\n      throw new InternalServerErrorException('Failed to retrieve user');\n    }\n  }\n\n  /**\n   * @description Check Duplicate Email Route\n   * @param checkEmailDto - The DTO for checking duplicate email.\n   * @returns {Object} - An object indicating whether the email is a duplicate.\n   */\n  @Post('/check-email')\n  async checkDuplicateEmail(\n    @Body() checkEmailDto: CheckEmailDto,\n  ): Promise {\n    const isDuplicate = await this.authService.checkDuplicateEmail(\n      checkEmailDto.email,\n    );\n\n    if (isDuplicate) {\n      throw new ConflictException('Email is already in use');\n    }\n\n    return { isDuplicate: false };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nAuthModule\n\nAuthModule\n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * Auth Module\n */\nimport { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\n\nimport { ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\nimport { UserSchema } from './schema/user.schema';\nimport { JwtStrategy } from './Guards/jwt.strategy';\n\n@Module({\n  imports: [\n    // define jtw as strategy\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n    }),\n    // need config variable thats why using registerAsync()\n    JwtModule.registerAsync({\n      inject: [ConfigService], // to access config variable\n      useFactory: (config: ConfigService) => {\n        return {\n          secret: config.get('JWT_SECRET'),\n          signOptions: {\n            expiresIn: config.get('JWT_EXPIRES_IN'),\n          },\n        };\n      },\n    }),\n    // import mongoose schema as User\n    MongooseModule.forFeature([\n      {\n        name: 'User',\n        schema: UserSchema,\n      },\n    ]),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [JwtStrategy, PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkDuplicateEmail\n                            \n                            \n                                    Async\n                                findUserById\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkDuplicateEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkDuplicateEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe email to check for duplication.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nIndicates whether the email is a duplicate.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user to find.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \nThe user with the specified ID or null if not found.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginDto: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loginDto\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for user login.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nAn object containing an access token and expiration time.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(signupDto: SignUpDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                signupDto\n                                            \n                                                            SignUpDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for user signup.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nAn object containing an access token and expiration time.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectModel } from '@nestjs/mongoose';\nimport * as bcrypt from 'bcrypt';\nimport { Model } from 'mongoose';\nimport { LoginDto } from './dto/login-dto';\nimport { SignUpDto } from './dto/signup-dto';\nimport { User } from './schema/user.schema';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectModel(User.name)\n    private userModel: Model,\n    private jwtService: JwtService,\n  ) {}\n\n  /**\n   * @description Signup Route\n   * @param signupDto - The DTO for user signup.\n   * @returns {Object} - An object containing an access token and expiration time.\n   */\n  async signup(\n    signupDto: SignUpDto,\n  ): Promise {\n    const { firstName, lastName, postalCode, email, password, address, role } =\n      signupDto;\n\n    // Check if a user with the provided email already exists\n    const existingUser = await this.userModel.findOne({ email }).exec();\n    if (existingUser) {\n      throw new ConflictException('Email already in use');\n    }\n\n    // Continue with user creation if email is not in use\n    const hashedPassword = await bcrypt.hash(password, 10);\n    const user = await this.userModel.create({\n      firstName,\n      lastName,\n      postalCode,\n      email,\n      password: hashedPassword,\n      address,\n      role,\n    });\n\n    const access_token = this.jwtService.sign({\n      id: user._id,\n    });\n\n    const expires_in = process.env.JWT_EXPIRES_IN;\n\n    return { access_token, expires_in };\n  }\n\n  /**\n   * @description Login Route\n   * @param loginDto - The DTO for user login.\n   * @returns {Object} - An object containing an access token and expiration time.\n   */\n  async login(\n    loginDto: LoginDto,\n  ): Promise {\n    // extract data\n    const { email, password } = loginDto;\n\n    const user = await this.userModel.findOne({ email });\n\n    if (!user) {\n      throw new UnauthorizedException('Invalid email or password!');\n    }\n\n    const passwordMatched = await bcrypt.compare(password, user.password);\n\n    if (!passwordMatched) {\n      throw new UnauthorizedException('Invalid email or password!');\n    }\n\n    // assign jwt to user\n    const access_token = this.jwtService.sign({\n      id: user._id,\n    });\n\n    const expires_in = process.env.JWT_EXPIRES_IN;\n\n    // return the token to client\n    return { access_token, expires_in };\n  }\n\n  /**\n   * @description Find User by ID Route\n   * @param id - The ID of the user to find.\n   * @returns {User|null} - The user with the specified ID or null if not found.\n   */\n  async findUserById(id: string): Promise {\n    try {\n      const user = await this.userModel.findById(id).exec();\n      return user;\n    } catch (error) {\n      throw new UnauthorizedException('User not found');\n    }\n  }\n\n  /**\n   * @description Check for Duplicate Email\n   * @param email - The email to check for duplication.\n   * @returns {boolean} - Indicates whether the email is a duplicate.\n   */\n  async checkDuplicateEmail(email: string): Promise {\n    try {\n      const user = await this.userModel.findOne({ email }).exec();\n      return !!user; // Return true if a user with this email already exists\n    } catch (error) {\n      throw new NotFoundException('Failed to check for duplicate email');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CartItemDto.html":{"url":"classes/CartItemDto.html","title":"class - CartItemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CartItemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/dto/cartItem-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                days\n                            \n                            \n                                    \n                                    \n                                dosage_form\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                times\n                            \n                            \n                                    \n                                    \n                                totalAmount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        days\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dosage_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        times\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/cartItem-dto.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CartItemDto {\n  @IsString()\n  @IsNotEmpty()\n  _id: string;\n\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  dosage_form: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  days: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  times: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  quantity: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  price: number;\n\n  @IsNumber()\n  @IsNotEmpty()\n  totalAmount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckEmailDto.html":{"url":"classes/CheckEmailDto.html","title":"class - CheckEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/check-email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail({}, {message: 'Please enter correct email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/check-email.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class CheckEmailDto {\n  @IsNotEmpty()\n  @IsEmail({}, { message: 'Please enter correct email' })\n  readonly email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CheckoutController.html":{"url":"controllers/CheckoutController.html","title":"controller - CheckoutController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CheckoutController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/checkout/checkout.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                checkout\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                checkout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        checkout\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkout(checkoutDto: CheckoutDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/checkout/checkout.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                checkoutDto\n                                            \n                                                            CheckoutDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for the checkout process.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An object containing the payment session and order details.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        /**\n * @module CheckoutController\n * @description Controller for checkout routes.\n */\nimport { Body, Controller, Post } from '@nestjs/common';\nimport { CheckoutDto } from './dto/checkout-dto';\nimport { CheckoutService } from './checkout.service';\nimport { Order } from 'src/orders/schema/order.schema';\n\n@Controller('checkout')\nexport class CheckoutController {\n  constructor(private readonly checkoutService: CheckoutService) {}\n\n  /**\n   * @description Initiates the checkout process for a set of items and creates a payment session.\n   * @param {CheckoutDto} checkoutDto - The DTO for the checkout process.\n   * @returns {Promise} An object containing the payment session and order details.\n   */\n  @Post()\n  async checkout(\n    @Body() checkoutDto: CheckoutDto,\n  ): Promise {\n    const { session, order } = await this.checkoutService.checkout(checkoutDto);\n    return { session, order };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckoutDto.html":{"url":"classes/CheckoutDto.html","title":"class - CheckoutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckoutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/checkout/dto/checkout-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CheckoutItem[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsString,\n  IsNumber,\n  Min,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class CheckoutItem {\n  @IsString()\n  _id: string;\n\n  @IsString()\n  dosage_form: string;\n\n  @IsString()\n  name: string;\n\n  @IsNumber()\n  @Min(0)\n  price: number;\n\n  @IsNumber()\n  @Min(1)\n  quantity: number;\n\n  @IsNumber()\n  @Min(0)\n  totalAmount: number;\n\n  @IsNumber()\n  @Min(0)\n  days: number;\n\n  @IsNumber()\n  @Min(0)\n  times: number;\n}\n\nexport class CheckoutDto {\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CheckoutItem)\n  items: CheckoutItem[];\n\n  @IsString()\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckoutItem.html":{"url":"classes/CheckoutItem.html","title":"class - CheckoutItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckoutItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/checkout/dto/checkout-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                days\n                            \n                            \n                                    \n                                dosage_form\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                times\n                            \n                            \n                                    \n                                    \n                                totalAmount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        days\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dosage_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        times\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        totalAmount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/checkout/dto/checkout-dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsString,\n  IsNumber,\n  Min,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class CheckoutItem {\n  @IsString()\n  _id: string;\n\n  @IsString()\n  dosage_form: string;\n\n  @IsString()\n  name: string;\n\n  @IsNumber()\n  @Min(0)\n  price: number;\n\n  @IsNumber()\n  @Min(1)\n  quantity: number;\n\n  @IsNumber()\n  @Min(0)\n  totalAmount: number;\n\n  @IsNumber()\n  @Min(0)\n  days: number;\n\n  @IsNumber()\n  @Min(0)\n  times: number;\n}\n\nexport class CheckoutDto {\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CheckoutItem)\n  items: CheckoutItem[];\n\n  @IsString()\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CheckoutModule.html":{"url":"modules/CheckoutModule.html","title":"module - CheckoutModule","body":"\n                   \n\n\n\n\n    Modules\n    CheckoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CheckoutModule\n\n\n\ncluster_CheckoutModule_providers\n\n\n\ncluster_CheckoutModule_imports\n\n\n\n\nOrdersModule\n\nOrdersModule\n\n\n\nCheckoutModule\n\nCheckoutModule\n\nCheckoutModule -->\n\nOrdersModule->CheckoutModule\n\n\n\n\n\nCheckoutService\n\nCheckoutService\n\nCheckoutModule -->\n\nCheckoutService->CheckoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/checkout/checkout.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CheckoutService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CheckoutController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OrdersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * Checkout module.\n */\nimport { Module } from '@nestjs/common';\nimport { CheckoutController } from './checkout.controller';\nimport { CheckoutService } from './checkout.service';\nimport { OrdersModule } from 'src/orders/orders.module';\n\n@Module({\n  imports: [OrdersModule],\n  controllers: [CheckoutController],\n  providers: [CheckoutService],\n})\nexport class CheckoutModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CheckoutService.html":{"url":"injectables/CheckoutService.html","title":"injectable - CheckoutService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CheckoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/checkout/checkout.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                redirectBaseUrl\n                            \n                            \n                                    Private\n                                stripeSecretKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkout\n                            \n                            \n                                    Private\n                                    Async\n                                createStripeSession\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ordersService: OrdersService)\n                    \n                \n                        \n                            \n                                Defined in src/checkout/checkout.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ordersService\n                                                  \n                                                        \n                                                                        OrdersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkout\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkout(checkoutDto: CheckoutDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/checkout/checkout.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                checkoutDto\n                                            \n                                                            CheckoutDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for the checkout process.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                An object containing the payment session and order details.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createStripeSession\n                        \n                    \n                \n            \n            \n                \n                        \n                    createStripeSession(checkoutDto: CheckoutDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/checkout/checkout.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                checkoutDto\n                                            \n                                                            CheckoutDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO for the checkout process.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The Stripe payment session.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        redirectBaseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://mymedxpress.netlify.app'\n                    \n                \n                    \n                        \n                                Defined in src/checkout/checkout.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stripeSecretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sk_test_51O7BlTI3fhUzlLHI9fiOiGDlks47o5duVu0uqxTM6fYUdnWlDcXTG5AiMQzaqUxYExUXybltBssY0C4fknV7QpGS00xK9BfdBR'\n                    \n                \n                    \n                        \n                                Defined in src/checkout/checkout.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CheckoutDto, CheckoutItem } from './dto/checkout-dto';\nimport { OrdersService } from 'src/orders/orders.service';\nimport stripe from 'stripe';\n\n@Injectable()\nexport class CheckoutService {\n  private stripeSecretKey =\n    'sk_test_51O7BlTI3fhUzlLHI9fiOiGDlks47o5duVu0uqxTM6fYUdnWlDcXTG5AiMQzaqUxYExUXybltBssY0C4fknV7QpGS00xK9BfdBR';\n\n  private redirectBaseUrl = 'https://mymedxpress.netlify.app';\n\n  constructor(private ordersService: OrdersService) {}\n\n  /**\n   * @description Initiates the checkout process, creates a payment session, and creates an order.\n   * @param {CheckoutDto} checkoutDto - The DTO for the checkout process.\n   * @returns {Promise} An object containing the payment session and order details.\n   * @throws {Error} If an error occurs during the checkout process.\n   */\n  async checkout(\n    checkoutDto: CheckoutDto,\n  ): Promise {\n    try {\n      const session = await this.createStripeSession(checkoutDto);\n\n      const orderDto = {\n        items: checkoutDto.items,\n        userId: checkoutDto.userId,\n        orderStatus: 'PENDING',\n      };\n\n      const order = await this.ordersService.createOrder(orderDto);\n\n      return { session, order };\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n\n  /**\n   * @description Creates a Stripe payment session for the provided items.\n   * @param {CheckoutDto} checkoutDto - The DTO for the checkout process.\n   * @returns {Promise} The Stripe payment session.\n   */\n  private async createStripeSession(checkoutDto: CheckoutDto): Promise {\n    const stripeInstance = new stripe(this.stripeSecretKey);\n\n    const session = await stripeInstance.checkout.sessions.create({\n      payment_method_types: ['card'],\n      line_items: checkoutDto.items.map((item: CheckoutItem) => {\n        const priceInCents = Math.ceil(item.price * 100);\n        return {\n          price_data: {\n            currency: 'bdt',\n            product_data: {\n              name: item.name,\n            },\n            unit_amount: priceInCents,\n          },\n          quantity: item.quantity,\n        };\n      }),\n      mode: 'payment',\n      success_url: `${this.redirectBaseUrl}/cart/success`,\n      cancel_url: `${this.redirectBaseUrl}/cart/`,\n    });\n\n    return session;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMedicineDto.html":{"url":"classes/CreateMedicineDto.html","title":"class - CreateMedicineDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMedicineDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medicine/dto/create-medicine-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dosage_form\n                            \n                            \n                                    \n                                generics\n                            \n                            \n                                    \n                                manufacturer\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                package_size\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                strength\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dosage_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        generics\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        manufacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        package_size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        strength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/create-medicine-dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsNumber, IsString } from 'class-validator';\n\nexport class CreateMedicineDto {\n  @IsString()\n  name: string;\n\n  @IsString()\n  type: string;\n\n  @IsString()\n  dosage_form: string;\n\n  @IsString()\n  strength: string;\n\n  @IsString()\n  manufacturer: string;\n\n  @IsArray()\n  generics: string[];\n\n  @IsString()\n  package_size: string;\n\n  @IsNumber()\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                orderStatus\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CartItemDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@IsNotEmpty()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/create-order.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        orderStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/create-order.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/create-order.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsNotEmpty, IsString, ValidateNested } from 'class-validator';\nimport { CartItemDto } from './cartItem-dto';\nimport { Type } from 'class-transformer';\n\nexport class CreateOrderDto {\n  @IsArray()\n  @IsNotEmpty()\n  @ValidateNested({ each: true })\n  @Type(() => CartItemDto)\n  items: CartItemDto[];\n\n  @IsString()\n  @IsNotEmpty()\n  userId: string;\n\n  @IsString()\n  @IsNotEmpty()\n  orderStatus: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/Guards/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/auth/Guards/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/Guards/jwt.strategy.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { User } from '../schema/user.schema';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(@InjectModel(User.name) private readonly userModel: Model) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: any) {\n    const { id } = payload;\n\n    const user = await this.userModel.findById(id);\n\n    if (!user) {\n      throw new UnauthorizedException('Please login to access this endpoint.');\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail({}, {message: 'Please enter correct email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class LoginDto {\n  @IsNotEmpty()\n  @IsEmail({}, { message: 'Please enter correct email' })\n  readonly email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Medicine.html":{"url":"classes/Medicine.html","title":"class - Medicine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Medicine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medicine/schema/medicine.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dosage_form\n                            \n                            \n                                    \n                                generics\n                            \n                            \n                                    \n                                manufacturer\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                package_size\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                strength\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dosage_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        generics\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop(['String'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        manufacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        package_size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        strength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/schema/medicine.schema.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\n@Schema({ timestamps: true })\nexport class Medicine extends Document {\n  @Prop()\n  name: string;\n\n  @Prop()\n  type: string;\n\n  @Prop()\n  dosage_form: string;\n\n  @Prop()\n  strength: string;\n\n  @Prop()\n  manufacturer: string;\n\n  @Prop([String])\n  generics: string[];\n\n  @Prop()\n  package_size: string;\n\n  @Prop()\n  price: number;\n}\n\nexport const MedicineSchema = SchemaFactory.createForClass(Medicine);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MedicineController.html":{"url":"controllers/MedicineController.html","title":"controller - MedicineController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MedicineController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medicine/medicine.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                medicines\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createMedicine\n                            \n                            \n                                    \n                                    \n                                deleteMedicine\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAllMedicineByQuery\n                            \n                            \n                                    \n                                    \n                                findOneMedicine\n                            \n                            \n                                    \n                                    \n                                updateMedicine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMedicine(createMedicineDto: CreateMedicineDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/medicine/medicine.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createMedicineDto\n                                            \n                                                            CreateMedicineDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing information for creating a new medicine.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The newly created medicine.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        deleteMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMedicine(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/medicine/medicine.controller.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the medicine to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Details of the deleted medicine.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAllMedicineByQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllMedicineByQuery(queryParams: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/medicine/medicine.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                queryParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe query parameters for filtering medicines.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A list of medicines that match the query.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOneMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneMedicine(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/medicine/medicine.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the medicine to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Details of the requested medicine.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMedicine(id: string, updateMedicineDto: UpdateMedicineDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@UseGuards(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/medicine/medicine.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the medicine to update.\n\n\n                                            \n                                        \n                                        \n                                                updateMedicineDto\n                                            \n                                                            UpdateMedicineDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing updated information for the medicine.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The updated medicine details.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        /**\n * @module MedicineController\n * @description Controller for medicines routes.\n */\nimport {\n  Controller,\n  Get,\n  Post,\n  Put,\n  Delete,\n  Body,\n  Param,\n  Query,\n  NotFoundException,\n  InternalServerErrorException,\n  BadRequestException,\n  UseGuards,\n} from '@nestjs/common';\nimport { MedicineService } from './medicine.service';\nimport { CreateMedicineDto } from './dto/create-medicine-dto';\nimport { UpdateMedicineDto } from './dto/update-medicine-dto';\nimport { Medicine } from './schema/medicine.schema';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Controller('medicines')\nexport class MedicineController {\n  constructor(private readonly medicineService: MedicineService) {}\n\n  /**\n   * @description Get all medicines that match the provided query parameters.\n   * @param {any} queryParams - The query parameters for filtering medicines.\n   * @returns {Promise} A list of medicines that match the query.\n   */\n  @Get('find')\n  @UseGuards(AuthGuard())\n  async findAllMedicineByQuery(@Query() queryParams: any): Promise {\n    try {\n      const medicines =\n        await this.medicineService.findAllMedicineByQuery(queryParams);\n      return medicines;\n    } catch (error) {\n      if (error instanceof BadRequestException) {\n        throw new BadRequestException(error.message);\n      } else if (error instanceof NotFoundException) {\n        throw new NotFoundException(error.message);\n      } else {\n        throw new InternalServerErrorException('Internal server error');\n      }\n    }\n  }\n\n  /**\n   * @description Get details of a specific medicine by ID.\n   * @param {string} id - The ID of the medicine to retrieve.\n   * @returns {Promise} Details of the requested medicine.\n   */\n  @Get(':id')\n  @UseGuards(AuthGuard())\n  findOneMedicine(@Param('id') id: string) {\n    return this.medicineService.findOneMedicine(id);\n  }\n\n  /**\n   * @description Create a new medicine.\n   * @param {CreateMedicineDto} createMedicineDto - The DTO containing information for creating a new medicine.\n   * @returns {Promise} The newly created medicine.\n   */\n  @Post()\n  @UseGuards(AuthGuard())\n  createMedicine(@Body() createMedicineDto: CreateMedicineDto) {\n    return this.medicineService.createMedicine(createMedicineDto);\n  }\n\n  /**\n   * @description Update the details of a specific medicine.\n   * @param {string} id - The ID of the medicine to update.\n   * @param {UpdateMedicineDto} updateMedicineDto - The DTO containing updated information for the medicine.\n   * @returns {Promise} The updated medicine details.\n   */\n  @Put(':id')\n  @UseGuards(AuthGuard())\n  updateMedicine(\n    @Param('id') id: string,\n    @Body() updateMedicineDto: UpdateMedicineDto,\n  ) {\n    return this.medicineService.updateMedicine(id, updateMedicineDto);\n  }\n\n  /**\n   * @description Delete a specific medicine by ID.\n   * @param {string} id - The ID of the medicine to delete.\n   * @returns {Promise} Details of the deleted medicine.\n   */\n  @Delete(':id')\n  @UseGuards(AuthGuard())\n  deleteMedicine(@Param('id') id: string) {\n    return this.medicineService.deleteMedicine(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MedicineModule.html":{"url":"modules/MedicineModule.html","title":"module - MedicineModule","body":"\n                   \n\n\n\n\n    Modules\n    MedicineModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MedicineModule\n\n\n\ncluster_MedicineModule_providers\n\n\n\ncluster_MedicineModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nMedicineModule\n\nMedicineModule\n\nMedicineModule -->\n\nAuthModule->MedicineModule\n\n\n\n\n\nMedicineService\n\nMedicineService\n\nMedicineModule -->\n\nMedicineService->MedicineModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/medicine/medicine.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MedicineService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MedicineController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MedicineService } from './medicine.service';\nimport { MedicineController } from './medicine.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Medicine, MedicineSchema } from './schema/medicine.schema';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  imports: [\n    AuthModule,\n    MongooseModule.forFeature([\n      { name: Medicine.name, schema: MedicineSchema },\n    ]),\n  ],\n  providers: [MedicineService],\n  controllers: [MedicineController],\n})\nexport class MedicineModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MedicineService.html":{"url":"injectables/MedicineService.html","title":"injectable - MedicineService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MedicineService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medicine/medicine.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                countAll\n                            \n                            \n                                    Async\n                                createMedicine\n                            \n                            \n                                    Async\n                                deleteMedicine\n                            \n                            \n                                    Async\n                                findAllMedicineByQuery\n                            \n                            \n                                    Async\n                                findOneMedicine\n                            \n                            \n                                    Async\n                                updateMedicine\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(medicineModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/medicine/medicine.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        medicineModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        countAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    countAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/medicine/medicine.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The total count of medicines.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMedicine(createMedicineDto: CreateMedicineDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medicine/medicine.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createMedicineDto\n                                            \n                                                            CreateMedicineDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing information for creating a new medicine.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The newly created medicine.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMedicine(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medicine/medicine.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the medicine to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Details of the deleted medicine.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllMedicineByQuery\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllMedicineByQuery(queryParams: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medicine/medicine.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                queryParams\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe query parameters for filtering medicines.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A list of medicines that match the query.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneMedicine(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medicine/medicine.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the medicine to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Details of the requested medicine.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMedicine\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMedicine(id: string, updateMedicineDto: UpdateMedicineDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/medicine/medicine.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the medicine to update.\n\n\n                                            \n                                        \n                                        \n                                                updateMedicineDto\n                                            \n                                                            UpdateMedicineDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing updated information for the medicine.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated medicine details.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Medicine } from './schema/medicine.schema';\nimport { CreateMedicineDto } from './dto/create-medicine-dto';\nimport { UpdateMedicineDto } from './dto/update-medicine-dto';\n\n@Injectable()\nexport class MedicineService {\n  constructor(\n    @InjectModel(Medicine.name) private readonly medicineModel: Model,\n  ) {}\n\n  /**\n   * @description Create a new medicine.\n   * @param {CreateMedicineDto} createMedicineDto - The DTO containing information for creating a new medicine.\n   * @returns {Promise} The newly created medicine.\n   */\n  async createMedicine(\n    createMedicineDto: CreateMedicineDto,\n  ): Promise {\n    const createdMedicine = new this.medicineModel(createMedicineDto);\n    return createdMedicine.save();\n  }\n\n  /**\n   * @description Find all medicines that match the provided query parameters.\n   * @param {any} queryParams - The query parameters for filtering medicines.\n   * @returns {Promise} A list of medicines that match the query.\n   */\n  async findAllMedicineByQuery(queryParams: any): Promise {\n    const { page, limit, search, ...filterParams } = queryParams;\n\n    // check for page,limit and search query parameters\n    if (Object.keys(filterParams).length === 0 && !page && !limit && !search) {\n      throw new BadRequestException('No query parameters provided');\n    }\n\n    const pageValue = page ? Number(page) : 1;\n    const limitValue = limit ? Number(limit) : 10;\n\n    const skip = (pageValue - 1) * limitValue;\n\n    const filter = { ...filterParams };\n\n    if (search) {\n      const searchFilter = {\n        $or: [\n          { name: { $regex: search, $options: 'i' } },\n          { generics: { $in: [search] } },\n        ],\n      };\n      Object.assign(filter, searchFilter);\n    }\n\n    try {\n      const medicines = await this.medicineModel\n        .find(filter)\n        .skip(skip)\n        .limit(limitValue)\n        .exec();\n      return medicines;\n    } catch (error) {\n      throw new NotFoundException('Medicines not found');\n    }\n  }\n\n  /**\n   * @description Find details of a specific medicine by ID.\n   * @param {string} id - The ID of the medicine to retrieve.\n   * @returns {Promise} Details of the requested medicine.\n   */\n  async findOneMedicine(id: string): Promise {\n    const medicine = await this.medicineModel.findById(id).exec();\n\n    if (!medicine) {\n      throw new NotFoundException('Medicine not found');\n    }\n    return medicine;\n  }\n\n  /**\n   * @description Update the details of a specific medicine.\n   * @param {string} id - The ID of the medicine to update.\n   * @param {UpdateMedicineDto} updateMedicineDto - The DTO containing updated information for the medicine.\n   * @returns {Promise} The updated medicine details.\n   */\n  async updateMedicine(\n    id: string,\n    updateMedicineDto: UpdateMedicineDto,\n  ): Promise {\n    const updatedMedicine = await this.medicineModel.findByIdAndUpdate(\n      id,\n      updateMedicineDto,\n      {\n        new: true,\n      },\n    );\n    if (!updatedMedicine) {\n      throw new NotFoundException('Medicine not found');\n    }\n    return updatedMedicine;\n  }\n\n  /**\n   * @description Delete a specific medicine by ID.\n   * @param {string} id - The ID of the medicine to delete.\n   * @returns {Promise} Details of the deleted medicine.\n   */\n  async deleteMedicine(id: string): Promise {\n    const deletedMedicine = await this.medicineModel.findByIdAndRemove(id);\n    if (!deletedMedicine) {\n      throw new NotFoundException('Medicine not found');\n    }\n    return deletedMedicine;\n  }\n\n  /**\n   * @description Count the total number of medicines.\n   * @returns {Promise} The total count of medicines.\n   */\n  async countAll(): Promise {\n    return this.medicineModel.countDocuments().exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/schema/order.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                orderStatus\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/schema/order.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        orderStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/schema/order.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/orders/schema/order.schema.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n// create enum for book category\nexport enum OrderStatus {\n  DELIVERED = 'DELIVERED',\n  SHIPPED = 'SHIPPED',\n  PENDING = 'PENDING',\n  CANCELED = 'CANCELED',\n}\n\n@Schema({\n  timestamps: true,\n})\nexport class Order {\n  @Prop()\n  items: any[];\n\n  @Prop()\n  userId: string;\n\n  @Prop()\n  orderStatus: string;\n}\nexport const OrderSchema = SchemaFactory.createForClass(Order);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createOrder\n                            \n                            \n                                    \n                                    Async\n                                deleteOrder\n                            \n                            \n                                    \n                                    Async\n                                findOrderById\n                            \n                            \n                                    \n                                    Async\n                                getAllOrders\n                            \n                            \n                                    \n                                    Async\n                                getOrdersByUserId\n                            \n                            \n                                    \n                                    Async\n                                updateOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing information for creating a new order.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The newly created order.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOrder(orderId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':orderId')\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the order to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Details of the deleted order.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOrderById(orderId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':orderId')\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the order to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Details of the requested order.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllOrders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllOrders()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A list of all orders.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getOrdersByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrdersByUserId(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('user/:userId')\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOrder(orderId: string, updateOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':orderId')\n                \n            \n\n                    \n                        \n                            Defined in src/orders/orders.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the order to update.\n\n\n                                            \n                                        \n                                        \n                                                updateOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing updated information for the order.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated order details.\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        /**\n * @module OrdersController\n * @description Controller for orders routes.\n */\nimport {\n  Controller,\n  Get,\n  Post,\n  Param,\n  Body,\n  Put,\n  Delete,\n  NotFoundException,\n  BadRequestException,\n} from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { Order } from './schema/order.schema';\n\n@Controller('orders')\nexport class OrdersController {\n  constructor(private readonly ordersService: OrdersService) {}\n\n  /**\n   * @description Create a new order.\n   * @param {CreateOrderDto} createOrderDto - The DTO containing information for creating a new order.\n   * @returns {Promise} The newly created order.\n   */\n  @Post()\n  async createOrder(@Body() createOrderDto: CreateOrderDto): Promise {\n    try {\n      return await this.ordersService.createOrder(createOrderDto);\n    } catch (error) {\n      throw new BadRequestException('Failed to create the order');\n    }\n  }\n\n  /**\n   * @description Get all orders.\n   * @returns {Promise} A list of all orders.\n   */\n  @Get()\n  async getAllOrders(): Promise {\n    try {\n      return await this.ordersService.getAllOrders();\n    } catch (error) {\n      throw new NotFoundException('Failed to fetch orders');\n    }\n  }\n\n  /**\n   * @description Find details of a specific order by ID.\n   * @param {string} orderId - The ID of the order to retrieve.\n   * @returns {Promise} Details of the requested order.\n   */\n  @Get(':orderId')\n  async findOrderById(@Param('orderId') orderId: string): Promise {\n    try {\n      const order = await this.ordersService.findOrderById(orderId);\n      if (!order) {\n        throw new NotFoundException('Order not found');\n      }\n      return order;\n    } catch (error) {\n      throw new NotFoundException('Order not found');\n    }\n  }\n\n  /**\n   * @description Update the details of a specific order.\n   * @param {string} orderId - The ID of the order to update.\n   * @param {CreateOrderDto} updateOrderDto - The DTO containing updated information for the order.\n   * @returns {Promise} The updated order details.\n   */\n  @Put(':orderId')\n  async updateOrder(\n    @Param('orderId') orderId: string,\n    @Body() updateOrderDto: CreateOrderDto,\n  ): Promise {\n    try {\n      const order = await this.ordersService.updateOrder(\n        orderId,\n        updateOrderDto,\n      );\n      if (!order) {\n        throw new NotFoundException('Order not found');\n      }\n      return order;\n    } catch (error) {\n      throw new BadRequestException('Failed to update the order');\n    }\n  }\n\n  /**\n   * @description Delete a specific order by ID.\n   * @param {string} orderId - The ID of the order to delete.\n   * @returns {Promise} Details of the deleted order.\n   */\n  @Delete(':orderId')\n  async deleteOrder(@Param('orderId') orderId: string): Promise {\n    try {\n      const order = await this.ordersService.deleteOrder(orderId);\n      if (!order) {\n        throw new NotFoundException('Order not found');\n      }\n      return order;\n    } catch (error) {\n      throw new BadRequestException('Failed to delete the order');\n    }\n  }\n\n  @Get('user/:userId')\n  async getOrdersByUserId(@Param('userId') userId: string): Promise {\n    try {\n      return await this.ordersService.getOrdersByUserId(userId);\n    } catch (error) {\n      throw new NotFoundException('Failed to fetch orders by user ID');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_exports\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nOrdersService \n\nOrdersService \n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersService  -->\n\nOrdersModule->OrdersService \n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrdersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * @module OrdersModule\n * @description Module for managing orders.\n */\nimport { Module } from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { OrdersController } from './orders.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Order, OrderSchema } from './schema/order.schema';\n\n@Module({\n  imports: [\n    /**\n     * MongooseModule for registering the Order model with its schema.\n     */\n    MongooseModule.forFeature([{ name: Order.name, schema: OrderSchema }]),\n  ],\n  providers: [\n    /**\n     * OrdersService for managing orders.\n     */\n    OrdersService,\n  ],\n  controllers: [\n    /**\n     * OrdersController for handling order-related routes.\n     */\n    OrdersController,\n  ],\n  exports: [\n    /**\n     * Exported OrdersService for providing order-related functionalities to other modules.\n     */\n    OrdersService,\n  ],\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOrder\n                            \n                            \n                                    Async\n                                deleteOrder\n                            \n                            \n                                    Async\n                                findOrderById\n                            \n                            \n                                    Async\n                                getAllOrders\n                            \n                            \n                                    Async\n                                getOrdersByUserId\n                            \n                            \n                                    Async\n                                updateOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/orders/orders.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(createOrderDto: CreateOrderDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing information for creating a new order.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The newly created order.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOrder(orderId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the order to delete.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Details of the deleted order.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOrderById(orderId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the order to retrieve.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                Details of the requested order.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllOrders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllOrders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A list of all orders.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getOrdersByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrdersByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the user to retrieve orders for.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                A list of orders associated with the user, sorted by creation date in descending order.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOrder(orderId: string, updateOrderDto: CreateOrderDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/orders/orders.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe ID of the order to update.\n\n\n                                            \n                                        \n                                        \n                                                updateOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DTO containing updated information for the order.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                The updated order details.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Order } from './schema/order.schema';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateOrderDto } from './dto/create-order.dto';\n\n@Injectable()\nexport class OrdersService {\n  constructor(\n    @InjectModel(Order.name) private readonly orderModel: Model,\n  ) {}\n\n  /**\n   * @description Create a new order.\n   * @param {CreateOrderDto} createOrderDto - The DTO containing information for creating a new order.\n   * @returns {Promise} The newly created order.\n   */\n  async createOrder(createOrderDto: CreateOrderDto): Promise {\n    try {\n      const createdOrder = new this.orderModel(createOrderDto);\n      const savedOrder = await createdOrder.save();\n      return savedOrder;\n    } catch (error) {\n      throw new Error('Failed to create the order');\n    }\n  }\n\n  /**\n   * @description Get all orders.\n   * @returns {Promise} A list of all orders.\n   */\n  async getAllOrders(): Promise {\n    try {\n      return this.orderModel.find().exec();\n    } catch (error) {\n      throw new Error('Failed to fetch orders');\n    }\n  }\n\n  /**\n   * @description Find details of a specific order by its ID.\n   * @param {string} orderId - The ID of the order to retrieve.\n   * @returns {Promise} Details of the requested order.\n   */\n  async findOrderById(orderId: string): Promise {\n    try {\n      return this.orderModel.findById(orderId).exec();\n    } catch (error) {\n      throw new Error('Order not found');\n    }\n  }\n\n  /**\n   * @description Update the details of a specific order.\n   * @param {string} orderId - The ID of the order to update.\n   * @param {CreateOrderDto} updateOrderDto - The DTO containing updated information for the order.\n   * @returns {Promise} The updated order details.\n   */\n  async updateOrder(\n    orderId: string,\n    updateOrderDto: CreateOrderDto,\n  ): Promise {\n    try {\n      return this.orderModel\n        .findByIdAndUpdate(orderId, updateOrderDto, { new: true })\n        .exec();\n    } catch (error) {\n      throw new Error('Failed to update the order');\n    }\n  }\n\n  /**\n   * @description Delete a specific order by ID.\n   * @param {string} orderId - The ID of the order to delete.\n   * @returns {Promise} Details of the deleted order.\n   */\n  async deleteOrder(orderId: string): Promise {\n    try {\n      return this.orderModel.findByIdAndRemove(orderId).exec();\n    } catch (error) {\n      throw new Error('Failed to delete the order');\n    }\n  }\n\n  /**\n   * @description Get orders for a specific user by their user ID, sorted in descending order of creation date.\n   * @param {string} userId - The ID of the user to retrieve orders for.\n   * @returns {Promise} A list of orders associated with the user, sorted by creation date in descending order.\n   */\n  async getOrdersByUserId(userId: string): Promise {\n    try {\n      return this.orderModel.find({ userId }).sort({ createdAt: -1 }).exec();\n    } catch (error) {\n      throw new Error('Failed to fetch orders by user ID');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/signup-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Readonly\n                                address\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                email\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                firstName\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                postalCode\n                            \n                            \n                                    \n                                    \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup-dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail({}, {message: 'Please enter correct email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup-dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup-dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup-dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup-dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup-dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Readonly\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signup-dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n  MinLength,\n} from 'class-validator';\n\nexport class SignUpDto {\n  @IsNotEmpty()\n  @IsString()\n  readonly firstName: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly lastName: string;\n\n  @IsNotEmpty()\n  @IsEmail({}, { message: 'Please enter correct email' })\n  readonly email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  readonly password: string;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly address: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  readonly postalCode: number;\n\n  @IsNotEmpty()\n  @IsString()\n  readonly role: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMedicineDto.html":{"url":"classes/UpdateMedicineDto.html","title":"class - UpdateMedicineDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMedicineDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/medicine/dto/update-medicine-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                dosage_form\n                            \n                            \n                                    \n                                    \n                                generics\n                            \n                            \n                                    \n                                    \n                                manufacturer\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                package_size\n                            \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                strength\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dosage_form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        generics\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        manufacturer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        package_size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        strength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/medicine/dto/update-medicine-dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, IsArray, IsNumber } from 'class-validator';\n\nexport class UpdateMedicineDto {\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @IsOptional()\n  @IsString()\n  type: string;\n\n  @IsOptional()\n  @IsString()\n  dosage_form: string;\n\n  @IsOptional()\n  @IsString()\n  strength: string;\n\n  @IsOptional()\n  @IsString()\n  manufacturer: string;\n\n  @IsOptional()\n  @IsArray()\n  generics: string[]; // Since generics is an array, it can be updated as a whole array or by individual items.\n\n  @IsOptional()\n  @IsString()\n  package_size: string;\n\n  @IsOptional()\n  @IsNumber()\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/schema/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                postalCode\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({unique: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postalCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRole\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/schema/user.schema.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n// create enum for book category\nexport enum UserRole {\n  CUSTOMER = 'Customer',\n  SHOPOWNER = 'ShopOwner',\n  ADMIN = 'Admin',\n}\n\n@Schema({\n  // it will automatically add time when a new user is created\n  timestamps: true,\n})\nexport class User {\n  @Prop()\n  firstName: string;\n\n  @Prop()\n  lastName: string;\n\n  @Prop({ unique: [true, 'Duplicate email entered!'] })\n  email: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  postalCode: number;\n\n  @Prop()\n  role: UserRole;\n}\n\n// export User schema\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/Guards/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/dto/check-email.dto.ts\n            \n            class\n            CheckEmailDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/login-dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/signup-dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/schema/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/checkout/checkout.controller.ts\n            \n            controller\n            CheckoutController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/checkout/checkout.service.ts\n            \n            injectable\n            CheckoutService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/checkout/dto/checkout-dto.ts\n            \n            class\n            CheckoutDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/checkout/dto/checkout-dto.ts\n            \n            class\n            CheckoutItem\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/medicine/dto/create-medicine-dto.ts\n            \n            class\n            CreateMedicineDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/medicine/dto/update-medicine-dto.ts\n            \n            class\n            UpdateMedicineDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/medicine/medicine.controller.ts\n            \n            controller\n            MedicineController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/medicine/medicine.service.ts\n            \n            injectable\n            MedicineService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/medicine/schema/medicine.schema.ts\n            \n            class\n            Medicine\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/medicine/schema/medicine.schema.ts\n            \n            variable\n            MedicineSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/dto/cartItem-dto.ts\n            \n            class\n            CartItemDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/orders/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/orders/schema/order.schema.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/orders/schema/order.schema.ts\n            \n            variable\n            OrderSchema\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.2.7\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/mongoose : ^10.0.1\n        \n            @nestjs/passport : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/serve-static : ^4.0.0\n        \n            @stripe/stripe-js : ^2.1.10\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            mongoose : ^7.6.3\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            stripe : ^14.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OrderStatus   (src/.../order.schema.ts)\n                        \n                        \n                            UserRole   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/orders/schema/order.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatus\n                    \n                \n                        \n                            \n                                 DELIVERED\n                            \n                        \n                        \n                            \n                                Value : DELIVERED\n                            \n                        \n                        \n                            \n                                 SHIPPED\n                            \n                        \n                        \n                            \n                                Value : SHIPPED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : CANCELED\n                            \n                        \n            \n        \n\n    src/auth/schema/user.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 CUSTOMER\n                            \n                        \n                        \n                            \n                                Value : Customer\n                            \n                        \n                        \n                            \n                                 SHOPOWNER\n                            \n                        \n                        \n                            \n                                Value : ShopOwner\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : Admin\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMedXpress - Server Side Code\nPackage Manager Used: PNPM\nListening Port: 3000\nstart the server using pnpm start:dev\nConnect with mongoose\ninstalled required mongoose packages for connecting with database\npnpm add mongoose @nestjs/mongoose @nestjs/config\nconfigure .env in app.module.ts\nAuthentication\nfor authentication installed these packages\nExample :pnpm add @nestjs/passport passport passport-local\npnpm add -D @types/passport-local\npnpm add @nestjs/jwtgenerate auth using these commands\nExample :nest g module auth\nnest g controller auth --no-spec\nnest g service auth --no-spec\npnpm add bcryptcreate user schema in auth named user.schema.ts\nConfigure passport in auth module\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CheckoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MedicineModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CheckoutModule\n\n\n\ncluster_CheckoutModule_providers\n\n\n\ncluster_MedicineModule\n\n\n\ncluster_MedicineModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_exports\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nMedicineModule\n\nMedicineModule\n\nMedicineModule -->\n\nAuthModule->MedicineModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nCheckoutModule\n\nCheckoutModule\n\nAppModule -->\n\nCheckoutModule->AppModule\n\n\n\nAppModule -->\n\nMedicineModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nCheckoutModule -->\n\nOrdersModule->CheckoutModule\n\n\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nOrdersService \n\nOrdersService \n\nOrdersService  -->\n\nOrdersModule->OrdersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nCheckoutService\n\nCheckoutService\n\nCheckoutModule -->\n\nCheckoutService->CheckoutModule\n\n\n\n\n\nMedicineService\n\nMedicineService\n\nMedicineModule -->\n\nMedicineService->MedicineModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MedicineSchema   (src/.../medicine.schema.ts)\n                        \n                        \n                            OrderSchema   (src/.../order.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/medicine/schema/medicine.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MedicineSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Medicine)\n                    \n                \n\n\n        \n    \n\n    src/orders/schema/order.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Order)\n                    \n                \n\n\n        \n    \n\n    src/auth/schema/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
